package com.ankamagames.wakfu.client.ui.dialog;

import java.util.*;
import com.ankamagames.xulor2.util.*;
import java.awt.*;
import com.ankamagames.xulor2.appearance.spacing.*;
import com.ankamagames.xulor2.*;
import com.ankamagames.xulor2.core.*;
import com.ankamagames.xulor2.layout.*;
import com.ankamagames.xulor2.property.*;
import com.ankamagames.xulor2.decorator.*;
import com.ankamagames.xulor2.util.alignment.*;
import com.ankamagames.xulor2.component.*;
import com.ankamagames.xulor2.appearance.*;
import com.ankamagames.xulor2.component.colorpicker.*;
import com.ankamagames.xulor2.event.listener.*;

public class GuildCreatorDialog implements BasicElementFactory
{
    private Stack<ElementMap> elementMaps;
    private Environment env;
    
    public GuildCreatorDialog() {
        super();
        this.elementMaps = new Stack<ElementMap>();
    }
    
    @Override
    public BasicElement getElement(final Environment env, final ElementMap item) {
        this.env = env;
        this.elementMaps.push(item);
        final ElementMap elementMap = this.elementMaps.peek();
        final Window window = new Window();
        window.onCheckOut();
        window.setElementMap(elementMap);
        window.onAttributesInitialized();
        final StaticLayout element = new StaticLayout();
        element.onCheckOut();
        element.setAdaptToContentSize(true);
        window.addBasicElement(element);
        element.onAttributesInitialized();
        element.onChildrenAdded();
        final Container checkOut = Container.checkOut();
        checkOut.setElementMap(elementMap);
        window.addBasicElement(checkOut);
        checkOut.onAttributesInitialized();
        final StaticLayoutData element2 = new StaticLayoutData();
        element2.onCheckOut();
        element2.setElementMap(elementMap);
        element2.setSize(new Dimension(100.0f, 100.0f));
        checkOut.addBasicElement(element2);
        element2.onAttributesInitialized();
        element2.onChildrenAdded();
        checkOut.onChildrenAdded();
        final Container checkOut2 = Container.checkOut();
        checkOut2.setElementMap(elementMap);
        checkOut2.setStyle("windowNew");
        window.addBasicElement(checkOut2);
        checkOut2.onAttributesInitialized();
        final DecoratorAppearance appearance = checkOut2.getAppearance();
        appearance.setElementMap(elementMap);
        checkOut2.addBasicElement(appearance);
        appearance.onAttributesInitialized();
        final Padding element3 = new Padding();
        element3.onCheckOut();
        element3.setElementMap(elementMap);
        element3.setInsets(new Insets(10, 5, 12, 5));
        appearance.addBasicElement(element3);
        element3.onAttributesInitialized();
        element3.onChildrenAdded();
        appearance.onChildrenAdded();
        final StaticLayoutData element4 = new StaticLayoutData();
        element4.onCheckOut();
        element4.setElementMap(elementMap);
        element4.setSize(new Dimension(100.0f, 100.0f));
        checkOut2.addBasicElement(element4);
        element4.onAttributesInitialized();
        element4.onChildrenAdded();
        final RowLayout checkOut3 = RowLayout.checkOut();
        checkOut3.setHorizontal(false);
        checkOut3.setAlign(Alignment9.NORTH);
        checkOut2.addBasicElement(checkOut3);
        checkOut3.onAttributesInitialized();
        checkOut3.onChildrenAdded();
        final WindowMovePoint element5 = new WindowMovePoint();
        element5.onCheckOut();
        element5.setElementMap(elementMap);
        element5.setExpandable(false);
        element5.setEnabled(false);
        checkOut2.addBasicElement(element5);
        element5.onAttributesInitialized();
        final DecoratorAppearance appearance2 = element5.getAppearance();
        appearance2.setElementMap(elementMap);
        element5.addBasicElement(appearance2);
        appearance2.onAttributesInitialized();
        final Margin checkOut4 = Margin.checkOut();
        checkOut4.setElementMap(elementMap);
        checkOut4.setInsets(new Insets(0, 10, 0, 10));
        appearance2.addBasicElement(checkOut4);
        checkOut4.onAttributesInitialized();
        checkOut4.onChildrenAdded();
        appearance2.onChildrenAdded();
        final Container checkOut5 = Container.checkOut();
        checkOut5.setElementMap(elementMap);
        checkOut5.setStyle("titleBar");
        element5.addBasicElement(checkOut5);
        checkOut5.onAttributesInitialized();
        final DecoratorAppearance appearance3 = checkOut5.getAppearance();
        appearance3.setElementMap(elementMap);
        checkOut5.addBasicElement(appearance3);
        appearance3.onAttributesInitialized();
        final Padding element6 = new Padding();
        element6.onCheckOut();
        element6.setElementMap(elementMap);
        element6.setInsets(new Insets(3, 20, 3, 20));
        appearance3.addBasicElement(element6);
        element6.onAttributesInitialized();
        element6.onChildrenAdded();
        appearance3.onChildrenAdded();
        final RowLayout checkOut6 = RowLayout.checkOut();
        checkOut6.setHorizontal(false);
        checkOut5.addBasicElement(checkOut6);
        checkOut6.onAttributesInitialized();
        checkOut6.onChildrenAdded();
        final Container checkOut7 = Container.checkOut();
        checkOut7.setElementMap(elementMap);
        checkOut7.setExpandable(false);
        checkOut5.addBasicElement(checkOut7);
        checkOut7.onAttributesInitialized();
        final RowLayoutData element7 = new RowLayoutData();
        element7.onCheckOut();
        element7.setElementMap(elementMap);
        element7.setAlign(Alignment9.CENTER);
        checkOut7.addBasicElement(element7);
        element7.onAttributesInitialized();
        element7.onChildrenAdded();
        final Label element8 = new Label();
        element8.onCheckOut();
        element8.setElementMap(elementMap);
        element8.setStyle("StyledBold16White");
        element8.setNonBlocking(true);
        element8.setText("%guild.creation%".replace("%guild.creation%", Xulor.getInstance().getTranslatedString("guild.creation")));
        checkOut7.addBasicElement(element8);
        element8.onAttributesInitialized();
        final DecoratorAppearance appearance4 = element8.getAppearance();
        appearance4.setElementMap(elementMap);
        ((TextWidgetAppearance)appearance4).setAlign(Alignment9.CENTER);
        element8.addBasicElement(appearance4);
        appearance4.onAttributesInitialized();
        appearance4.onChildrenAdded();
        element8.onChildrenAdded();
        checkOut7.onChildrenAdded();
        checkOut5.onChildrenAdded();
        element5.onChildrenAdded();
        final Container checkOut8 = Container.checkOut();
        checkOut8.setElementMap(elementMap);
        checkOut2.addBasicElement(checkOut8);
        checkOut8.onAttributesInitialized();
        final DecoratorAppearance appearance5 = checkOut8.getAppearance();
        appearance5.setElementMap(elementMap);
        checkOut8.addBasicElement(appearance5);
        appearance5.onAttributesInitialized();
        final Margin checkOut9 = Margin.checkOut();
        checkOut9.setElementMap(elementMap);
        checkOut9.setInsets(new Insets(0, 12, 0, 12));
        appearance5.addBasicElement(checkOut9);
        checkOut9.onAttributesInitialized();
        checkOut9.onChildrenAdded();
        appearance5.onChildrenAdded();
        final String id = "windowContentContainer";
        final Container checkOut10 = Container.checkOut();
        checkOut10.setElementMap(elementMap);
        if (elementMap != null && id != null) {
            elementMap.add(id, checkOut10);
        }
        checkOut10.setPrefSize(new Dimension(0, 0));
        checkOut8.addBasicElement(checkOut10);
        checkOut10.onAttributesInitialized();
        final BorderLayout element9 = new BorderLayout();
        element9.onCheckOut();
        checkOut10.addBasicElement(element9);
        element9.onAttributesInitialized();
        element9.onChildrenAdded();
        final Container checkOut11 = Container.checkOut();
        checkOut11.setElementMap(elementMap);
        checkOut11.setStyle("flat");
        checkOut10.addBasicElement(checkOut11);
        checkOut11.onAttributesInitialized();
        final BorderLayoutData checkOut12 = BorderLayoutData.checkOut();
        checkOut12.setElementMap(elementMap);
        checkOut12.setData(BorderLayoutData.Values.NORTH);
        checkOut11.addBasicElement(checkOut12);
        checkOut12.onAttributesInitialized();
        checkOut12.onChildrenAdded();
        final DecoratorAppearance appearance6 = checkOut11.getAppearance();
        appearance6.setElementMap(elementMap);
        checkOut11.addBasicElement(appearance6);
        appearance6.onAttributesInitialized();
        final Padding element10 = new Padding();
        element10.onCheckOut();
        element10.setElementMap(elementMap);
        element10.setInsets(new Insets(5, 5, 5, 5));
        appearance6.addBasicElement(element10);
        element10.onAttributesInitialized();
        element10.onChildrenAdded();
        appearance6.onChildrenAdded();
        final Label element11 = new Label();
        element11.onCheckOut();
        element11.setElementMap(elementMap);
        element11.setStyle("styledDark12");
        element11.setExpandable(false);
        element11.setText("%guild.name%".replace("%guild.name%", Xulor.getInstance().getTranslatedString("guild.name")));
        checkOut11.addBasicElement(element11);
        element11.onAttributesInitialized();
        final DecoratorAppearance appearance7 = element11.getAppearance();
        appearance7.setElementMap(elementMap);
        element11.addBasicElement(appearance7);
        appearance7.onAttributesInitialized();
        final Margin checkOut13 = Margin.checkOut();
        checkOut13.setElementMap(elementMap);
        checkOut13.setInsets(new Insets(0, 0, 0, 5));
        appearance7.addBasicElement(checkOut13);
        checkOut13.onAttributesInitialized();
        checkOut13.onChildrenAdded();
        appearance7.onChildrenAdded();
        element11.onChildrenAdded();
        final String id2 = "guildName";
        final TextEditor textEditor = new TextEditor();
        textEditor.onCheckOut();
        textEditor.setElementMap(elementMap);
        if (elementMap != null && id2 != null) {
            elementMap.add(id2, textEditor);
        }
        textEditor.setMaxChars(30);
        checkOut11.addBasicElement(textEditor);
        textEditor.onAttributesInitialized();
        textEditor.onChildrenAdded();
        checkOut11.onChildrenAdded();
        final Container checkOut14 = Container.checkOut();
        checkOut14.setElementMap(elementMap);
        checkOut14.setStyle("flat");
        checkOut10.addBasicElement(checkOut14);
        checkOut14.onAttributesInitialized();
        final DecoratorAppearance appearance8 = checkOut14.getAppearance();
        appearance8.setElementMap(elementMap);
        checkOut14.addBasicElement(appearance8);
        appearance8.onAttributesInitialized();
        final Padding element12 = new Padding();
        element12.onCheckOut();
        element12.setElementMap(elementMap);
        element12.setInsets(new Insets(5, 5, 5, 5));
        appearance8.addBasicElement(element12);
        element12.onAttributesInitialized();
        element12.onChildrenAdded();
        appearance8.onChildrenAdded();
        final BorderLayoutData checkOut15 = BorderLayoutData.checkOut();
        checkOut15.setElementMap(elementMap);
        checkOut15.setData(BorderLayoutData.Values.WEST);
        checkOut14.addBasicElement(checkOut15);
        checkOut15.onAttributesInitialized();
        checkOut15.onChildrenAdded();
        final Image element13 = new Image();
        element13.onCheckOut();
        element13.setElementMap(elementMap);
        element13.setDisplaySize(new Dimension(64, 64));
        checkOut14.addBasicElement(element13);
        element13.onAttributesInitialized();
        final PixmapElement checkOut16 = PixmapElement.checkOut();
        checkOut16.setElementMap(elementMap);
        element13.addBasicElement(checkOut16);
        checkOut16.onAttributesInitialized();
        final PropertyElement checkOut17 = PropertyElement.checkOut();
        checkOut17.setElementMap(elementMap);
        checkOut17.setName("guildBannerTexture");
        checkOut17.setAttribute("texture");
        checkOut16.addBasicElement(checkOut17);
        checkOut17.onAttributesInitialized();
        checkOut17.onChildrenAdded();
        checkOut16.onChildrenAdded();
        element13.onChildrenAdded();
        checkOut14.onChildrenAdded();
        final Container checkOut18 = Container.checkOut();
        checkOut18.setElementMap(elementMap);
        checkOut10.addBasicElement(checkOut18);
        checkOut18.onAttributesInitialized();
        final BorderLayoutData checkOut19 = BorderLayoutData.checkOut();
        checkOut19.setElementMap(elementMap);
        checkOut19.setData(BorderLayoutData.Values.CENTER);
        checkOut18.addBasicElement(checkOut19);
        checkOut19.onAttributesInitialized();
        checkOut19.onChildrenAdded();
        final RowLayout checkOut20 = RowLayout.checkOut();
        checkOut20.setHorizontal(false);
        checkOut18.addBasicElement(checkOut20);
        checkOut20.onAttributesInitialized();
        checkOut20.onChildrenAdded();
        final String id3 = "styleChooserContainer";
        final Container checkOut21 = Container.checkOut();
        checkOut21.setElementMap(elementMap);
        if (elementMap != null && id3 != null) {
            elementMap.add(id3, checkOut21);
        }
        checkOut21.setStyle("flat");
        checkOut18.addBasicElement(checkOut21);
        checkOut21.onAttributesInitialized();
        final DecoratorAppearance appearance9 = checkOut21.getAppearance();
        appearance9.setElementMap(elementMap);
        checkOut21.addBasicElement(appearance9);
        appearance9.onAttributesInitialized();
        final Padding element14 = new Padding();
        element14.onCheckOut();
        element14.setElementMap(elementMap);
        element14.setInsets(new Insets(5, 5, 5, 5));
        appearance9.addBasicElement(element14);
        element14.onAttributesInitialized();
        element14.onChildrenAdded();
        appearance9.onChildrenAdded();
        final RowLayout checkOut22 = RowLayout.checkOut();
        checkOut22.setHorizontal(false);
        checkOut22.setAlign(Alignment9.CENTER);
        checkOut21.addBasicElement(checkOut22);
        checkOut22.onAttributesInitialized();
        checkOut22.onChildrenAdded();
        final Container checkOut23 = Container.checkOut();
        checkOut23.setElementMap(elementMap);
        checkOut23.setExpandable(false);
        checkOut21.addBasicElement(checkOut23);
        checkOut23.onAttributesInitialized();
        final RowLayout checkOut24 = RowLayout.checkOut();
        checkOut24.setHgap((short)5);
        checkOut23.addBasicElement(checkOut24);
        checkOut24.onAttributesInitialized();
        checkOut24.onChildrenAdded();
        final Button element15 = new Button();
        element15.onCheckOut();
        element15.setElementMap(elementMap);
        element15.setExpandable(false);
        element15.setStyle("CharacterCreationLeftArrow");
        final MouseClickedListener onClick = new MouseClickedListener();
        onClick.setCallBackFunc("wakfu.guildBannerCreator:previousBackground");
        element15.setOnClick(onClick);
        checkOut23.addBasicElement(element15);
        element15.onAttributesInitialized();
        element15.onChildrenAdded();
        final Label element16 = new Label();
        element16.onCheckOut();
        element16.setElementMap(elementMap);
        element16.setStyle("styledDark12");
        element16.setText("%guild.banner.background%".replace("%guild.banner.background%", Xulor.getInstance().getTranslatedString("guild.banner.background")));
        checkOut23.addBasicElement(element16);
        element16.onAttributesInitialized();
        final DecoratorAppearance appearance10 = element16.getAppearance();
        appearance10.setElementMap(elementMap);
        ((TextWidgetAppearance)appearance10).setAlign(Alignment9.CENTER);
        element16.addBasicElement(appearance10);
        appearance10.onAttributesInitialized();
        appearance10.onChildrenAdded();
        element16.onChildrenAdded();
        final Button element17 = new Button();
        element17.onCheckOut();
        element17.setElementMap(elementMap);
        element17.setExpandable(false);
        element17.setStyle("CharacterCreationRightArrow");
        final MouseClickedListener onClick2 = new MouseClickedListener();
        onClick2.setCallBackFunc("wakfu.guildBannerCreator:nextBackground");
        element17.setOnClick(onClick2);
        checkOut23.addBasicElement(element17);
        element17.onAttributesInitialized();
        element17.onChildrenAdded();
        final Container checkOut25 = Container.checkOut();
        checkOut25.setElementMap(elementMap);
        checkOut25.setExpandable(false);
        checkOut23.addBasicElement(checkOut25);
        checkOut25.onAttributesInitialized();
        final DecoratorAppearance appearance11 = checkOut25.getAppearance();
        appearance11.setElementMap(elementMap);
        checkOut25.addBasicElement(appearance11);
        appearance11.onAttributesInitialized();
        final Margin checkOut26 = Margin.checkOut();
        checkOut26.setElementMap(elementMap);
        checkOut26.setInsets(new Insets(5, 0, 0, 0));
        appearance11.addBasicElement(checkOut26);
        checkOut26.onAttributesInitialized();
        checkOut26.onChildrenAdded();
        appearance11.onChildrenAdded();
        final StaticLayout element18 = new StaticLayout();
        element18.onCheckOut();
        element18.setAdaptToContentSize(true);
        checkOut25.addBasicElement(element18);
        element18.onAttributesInitialized();
        element18.onChildrenAdded();
        final Container checkOut27 = Container.checkOut();
        checkOut27.setElementMap(elementMap);
        checkOut27.setExpandable(false);
        checkOut27.setPrefSize(new Dimension(18, 13));
        checkOut25.addBasicElement(checkOut27);
        checkOut27.onAttributesInitialized();
        final DecoratorAppearance appearance12 = checkOut27.getAppearance();
        appearance12.setElementMap(elementMap);
        checkOut27.addBasicElement(appearance12);
        appearance12.onAttributesInitialized();
        final PlainBackground element19 = new PlainBackground();
        element19.onCheckOut();
        element19.setElementMap(elementMap);
        appearance12.addBasicElement(element19);
        element19.onAttributesInitialized();
        final PropertyElement checkOut28 = PropertyElement.checkOut();
        checkOut28.setElementMap(elementMap);
        checkOut28.setName("guildBannerPrimaryColor");
        checkOut28.setAttribute("color");
        element19.addBasicElement(checkOut28);
        checkOut28.onAttributesInitialized();
        checkOut28.onChildrenAdded();
        element19.onChildrenAdded();
        appearance12.onChildrenAdded();
        final StaticLayoutData element20 = new StaticLayoutData();
        element20.onCheckOut();
        element20.setElementMap(elementMap);
        element20.setAlign(Alignment17.CENTER);
        element20.setSize(new Dimension(-2, -2));
        checkOut27.addBasicElement(element20);
        element20.onAttributesInitialized();
        element20.onChildrenAdded();
        checkOut27.onChildrenAdded();
        final RadioButton element21 = new RadioButton();
        element21.onCheckOut();
        element21.setElementMap(elementMap);
        element21.setStyle("guildCreationColor");
        final MouseClickedListener onClick3 = new MouseClickedListener();
        onClick3.setCallBackFunc("wakfu.guildBannerCreator:setFirstPartBackgroundColorType(styleChooserContainer,colorPickerContainer)");
        element21.setOnClick(onClick3);
        checkOut25.addBasicElement(element21);
        element21.onAttributesInitialized();
        final StaticLayoutData element22 = new StaticLayoutData();
        element22.onCheckOut();
        element22.setElementMap(elementMap);
        element22.setAlign(Alignment17.CENTER);
        element22.setSize(new Dimension(-2, -2));
        element21.addBasicElement(element22);
        element22.onAttributesInitialized();
        element22.onChildrenAdded();
        element21.onChildrenAdded();
        checkOut25.onChildrenAdded();
        checkOut23.onChildrenAdded();
        final Container checkOut29 = Container.checkOut();
        checkOut29.setElementMap(elementMap);
        checkOut29.setExpandable(false);
        checkOut21.addBasicElement(checkOut29);
        checkOut29.onAttributesInitialized();
        final RowLayout checkOut30 = RowLayout.checkOut();
        checkOut30.setHgap((short)5);
        checkOut29.addBasicElement(checkOut30);
        checkOut30.onAttributesInitialized();
        checkOut30.onChildrenAdded();
        final Button element23 = new Button();
        element23.onCheckOut();
        element23.setElementMap(elementMap);
        element23.setExpandable(false);
        element23.setStyle("CharacterCreationLeftArrow");
        final MouseClickedListener onClick4 = new MouseClickedListener();
        onClick4.setCallBackFunc("wakfu.guildBannerCreator:previousForeground");
        element23.setOnClick(onClick4);
        checkOut29.addBasicElement(element23);
        element23.onAttributesInitialized();
        element23.onChildrenAdded();
        final Label element24 = new Label();
        element24.onCheckOut();
        element24.setElementMap(elementMap);
        element24.setStyle("styledDark12");
        element24.setText("%guild.banner.details%".replace("%guild.banner.details%", Xulor.getInstance().getTranslatedString("guild.banner.details")));
        checkOut29.addBasicElement(element24);
        element24.onAttributesInitialized();
        final DecoratorAppearance appearance13 = element24.getAppearance();
        appearance13.setElementMap(elementMap);
        ((TextWidgetAppearance)appearance13).setAlign(Alignment9.CENTER);
        element24.addBasicElement(appearance13);
        appearance13.onAttributesInitialized();
        appearance13.onChildrenAdded();
        element24.onChildrenAdded();
        final Button element25 = new Button();
        element25.onCheckOut();
        element25.setElementMap(elementMap);
        element25.setExpandable(false);
        element25.setStyle("CharacterCreationRightArrow");
        final MouseClickedListener onClick5 = new MouseClickedListener();
        onClick5.setCallBackFunc("wakfu.guildBannerCreator:nextForeground");
        element25.setOnClick(onClick5);
        checkOut29.addBasicElement(element25);
        element25.onAttributesInitialized();
        element25.onChildrenAdded();
        final Container checkOut31 = Container.checkOut();
        checkOut31.setElementMap(elementMap);
        checkOut31.setExpandable(false);
        checkOut29.addBasicElement(checkOut31);
        checkOut31.onAttributesInitialized();
        final DecoratorAppearance appearance14 = checkOut31.getAppearance();
        appearance14.setElementMap(elementMap);
        checkOut31.addBasicElement(appearance14);
        appearance14.onAttributesInitialized();
        final Margin checkOut32 = Margin.checkOut();
        checkOut32.setElementMap(elementMap);
        checkOut32.setInsets(new Insets(5, 0, 0, 0));
        appearance14.addBasicElement(checkOut32);
        checkOut32.onAttributesInitialized();
        checkOut32.onChildrenAdded();
        appearance14.onChildrenAdded();
        final StaticLayout element26 = new StaticLayout();
        element26.onCheckOut();
        element26.setAdaptToContentSize(true);
        checkOut31.addBasicElement(element26);
        element26.onAttributesInitialized();
        element26.onChildrenAdded();
        this.method0(checkOut31);
        this.method1(checkOut31);
        checkOut31.onChildrenAdded();
        checkOut29.onChildrenAdded();
        checkOut21.onChildrenAdded();
        this.method2(checkOut18);
        checkOut18.onChildrenAdded();
        this.method3(checkOut10);
        checkOut10.onChildrenAdded();
        checkOut8.onChildrenAdded();
        checkOut2.onChildrenAdded();
        this.method4(window);
        this.method5(window);
        this.method6(window);
        window.onChildrenAdded();
        return window;
    }
    
    public BasicElement method0(final BasicElement basicElement) {
        final ElementMap elementMap = this.elementMaps.peek();
        final Container checkOut = Container.checkOut();
        checkOut.setElementMap(elementMap);
        checkOut.setExpandable(false);
        checkOut.setPrefSize(new Dimension(18, 13));
        basicElement.addBasicElement(checkOut);
        checkOut.onAttributesInitialized();
        final DecoratorAppearance appearance = checkOut.getAppearance();
        appearance.setElementMap(elementMap);
        checkOut.addBasicElement(appearance);
        appearance.onAttributesInitialized();
        final PlainBackground element = new PlainBackground();
        element.onCheckOut();
        element.setElementMap(elementMap);
        appearance.addBasicElement(element);
        element.onAttributesInitialized();
        final PropertyElement checkOut2 = PropertyElement.checkOut();
        checkOut2.setElementMap(elementMap);
        checkOut2.setName("guildBannerSecondaryColor");
        checkOut2.setAttribute("color");
        element.addBasicElement(checkOut2);
        checkOut2.onAttributesInitialized();
        checkOut2.onChildrenAdded();
        element.onChildrenAdded();
        appearance.onChildrenAdded();
        final StaticLayoutData element2 = new StaticLayoutData();
        element2.onCheckOut();
        element2.setElementMap(elementMap);
        element2.setAlign(Alignment17.CENTER);
        element2.setSize(new Dimension(-2, -2));
        checkOut.addBasicElement(element2);
        element2.onAttributesInitialized();
        element2.onChildrenAdded();
        checkOut.onChildrenAdded();
        return checkOut;
    }
    
    public BasicElement method1(final BasicElement basicElement) {
        final ElementMap elementMap = this.elementMaps.peek();
        final RadioButton element = new RadioButton();
        element.onCheckOut();
        element.setElementMap(elementMap);
        element.setStyle("guildCreationColor");
        final MouseClickedListener onClick = new MouseClickedListener();
        onClick.setCallBackFunc("wakfu.guildBannerCreator:setFirstPartForegroundColorType(styleChooserContainer,colorPickerContainer)");
        element.setOnClick(onClick);
        basicElement.addBasicElement(element);
        element.onAttributesInitialized();
        final StaticLayoutData element2 = new StaticLayoutData();
        element2.onCheckOut();
        element2.setElementMap(elementMap);
        element2.setAlign(Alignment17.CENTER);
        element2.setSize(new Dimension(-2, -2));
        element.addBasicElement(element2);
        element2.onAttributesInitialized();
        element2.onChildrenAdded();
        element.onChildrenAdded();
        return element;
    }
    
    public BasicElement method2(final BasicElement basicElement) {
        final ElementMap elementMap = this.elementMaps.peek();
        final String id = "colorPickerContainer";
        final Container checkOut = Container.checkOut();
        checkOut.setElementMap(elementMap);
        if (elementMap != null && id != null) {
            elementMap.add(id, checkOut);
        }
        checkOut.setVisible(false);
        checkOut.setStyle("flat");
        basicElement.addBasicElement(checkOut);
        checkOut.onAttributesInitialized();
        final DecoratorAppearance appearance = checkOut.getAppearance();
        appearance.setElementMap(elementMap);
        checkOut.addBasicElement(appearance);
        appearance.onAttributesInitialized();
        final Padding element = new Padding();
        element.onCheckOut();
        element.setElementMap(elementMap);
        element.setInsets(new Insets(5, 5, 5, 5));
        appearance.addBasicElement(element);
        element.onAttributesInitialized();
        element.onChildrenAdded();
        appearance.onChildrenAdded();
        final RowLayout checkOut2 = RowLayout.checkOut();
        checkOut2.setHgap((short)5);
        checkOut.addBasicElement(checkOut2);
        checkOut2.onAttributesInitialized();
        checkOut2.onChildrenAdded();
        final BasicColorPicker element2 = new BasicColorPicker();
        element2.onCheckOut();
        element2.setElementMap(elementMap);
        element2.setNumByLines(4);
        element2.setHorizontal(false);
        element2.setExpandable(false);
        final ItemClickListener onItemClick = new ItemClickListener();
        onItemClick.setCallBackFunc("wakfu.guildBannerCreator:selectColor");
        element2.setOnItemClick(onItemClick);
        checkOut.addBasicElement(element2);
        element2.onAttributesInitialized();
        final PropertyElement checkOut3 = PropertyElement.checkOut();
        checkOut3.setElementMap(elementMap);
        checkOut3.setName("guildBannerColors");
        checkOut3.setAttribute("colors");
        element2.addBasicElement(checkOut3);
        checkOut3.onAttributesInitialized();
        checkOut3.onChildrenAdded();
        final RowLayoutData element3 = new RowLayoutData();
        element3.onCheckOut();
        element3.setElementMap(elementMap);
        element3.setAlign(Alignment9.CENTER);
        element2.addBasicElement(element3);
        element3.onAttributesInitialized();
        element3.onChildrenAdded();
        element2.onChildrenAdded();
        final Button element4 = new Button();
        element4.onCheckOut();
        element4.setElementMap(elementMap);
        element4.setStyle("smallValid");
        element4.setExpandable(false);
        final MouseClickedListener onClick = new MouseClickedListener();
        onClick.setCallBackFunc("wakfu.guildBannerCreator:closeColorPicker(styleChooserContainer,colorPickerContainer)");
        element4.setOnClick(onClick);
        checkOut.addBasicElement(element4);
        element4.onAttributesInitialized();
        final RowLayoutData element5 = new RowLayoutData();
        element5.onCheckOut();
        element5.setElementMap(elementMap);
        element5.setAlign(Alignment9.CENTER);
        element4.addBasicElement(element5);
        element5.onAttributesInitialized();
        element5.onChildrenAdded();
        element4.onChildrenAdded();
        checkOut.onChildrenAdded();
        return checkOut;
    }
    
    public BasicElement method3(final BasicElement basicElement) {
        final ElementMap elementMap = this.elementMaps.peek();
        final Container checkOut = Container.checkOut();
        checkOut.setElementMap(elementMap);
        basicElement.addBasicElement(checkOut);
        checkOut.onAttributesInitialized();
        final BorderLayoutData checkOut2 = BorderLayoutData.checkOut();
        checkOut2.setElementMap(elementMap);
        checkOut2.setData(BorderLayoutData.Values.SOUTH);
        checkOut.addBasicElement(checkOut2);
        checkOut2.onAttributesInitialized();
        checkOut2.onChildrenAdded();
        final Container checkOut3 = Container.checkOut();
        checkOut3.setElementMap(elementMap);
        checkOut.addBasicElement(checkOut3);
        checkOut3.onAttributesInitialized();
        final StaticLayout element = new StaticLayout();
        element.onCheckOut();
        element.setAdaptToContentSize(true);
        checkOut3.addBasicElement(element);
        element.onAttributesInitialized();
        element.onChildrenAdded();
        final String id = "kamaButton";
        final Button button = new Button();
        button.onCheckOut();
        button.setElementMap(elementMap);
        if (elementMap != null && id != null) {
            elementMap.add(id, button);
        }
        button.setStyle("flatBig");
        final MouseClickedListener onClick = new MouseClickedListener();
        onClick.setCallBackFunc("wakfu.guildBannerCreator:createGuild(guildName,true)");
        button.setOnClick(onClick);
        checkOut3.addBasicElement(button);
        button.onAttributesInitialized();
        final StaticLayoutData element2 = new StaticLayoutData();
        element2.onCheckOut();
        element2.setElementMap(elementMap);
        element2.setSize(new Dimension(100.0f, 100.0f));
        button.addBasicElement(element2);
        element2.onAttributesInitialized();
        element2.onChildrenAdded();
        final PropertyElement checkOut4 = PropertyElement.checkOut();
        checkOut4.setElementMap(elementMap);
        checkOut4.setName("guildCreation.hasMoney");
        checkOut4.setAttribute("enabled");
        button.addBasicElement(checkOut4);
        checkOut4.onAttributesInitialized();
        checkOut4.onChildrenAdded();
        final DecoratorAppearance appearance = button.getAppearance();
        appearance.setElementMap(elementMap);
        button.addBasicElement(appearance);
        appearance.onAttributesInitialized();
        final Padding element3 = new Padding();
        element3.onCheckOut();
        element3.setElementMap(elementMap);
        element3.setInsets(new Insets(5, 5, 5, 5));
        appearance.addBasicElement(element3);
        element3.onAttributesInitialized();
        element3.onChildrenAdded();
        appearance.onChildrenAdded();
        button.onChildrenAdded();
        final Container checkOut5 = Container.checkOut();
        checkOut5.setElementMap(elementMap);
        checkOut3.addBasicElement(checkOut5);
        checkOut5.onAttributesInitialized();
        final DecoratorAppearance appearance2 = checkOut5.getAppearance();
        appearance2.setElementMap(elementMap);
        checkOut5.addBasicElement(appearance2);
        appearance2.onAttributesInitialized();
        final Margin checkOut6 = Margin.checkOut();
        checkOut6.setElementMap(elementMap);
        checkOut6.setInsets(new Insets(5, 5, 5, 5));
        appearance2.addBasicElement(checkOut6);
        checkOut6.onAttributesInitialized();
        checkOut6.onChildrenAdded();
        appearance2.onChildrenAdded();
        final StaticLayoutData element4 = new StaticLayoutData();
        element4.onCheckOut();
        element4.setElementMap(elementMap);
        element4.setAlign(Alignment17.CENTER);
        element4.setSize(new Dimension(-2, -2));
        checkOut5.addBasicElement(element4);
        element4.onAttributesInitialized();
        element4.onChildrenAdded();
        final RowLayout checkOut7 = RowLayout.checkOut();
        checkOut7.setHorizontal(false);
        checkOut5.addBasicElement(checkOut7);
        checkOut7.onAttributesInitialized();
        checkOut7.onChildrenAdded();
        final Label element5 = new Label();
        element5.onCheckOut();
        element5.setElementMap(elementMap);
        element5.setStyle("styledDark12");
        element5.setText("%guild.create%".replace("%guild.create%", Xulor.getInstance().getTranslatedString("guild.create")));
        element5.setNonBlocking(true);
        checkOut5.addBasicElement(element5);
        element5.onAttributesInitialized();
        final RowLayoutData element6 = new RowLayoutData();
        element6.onCheckOut();
        element6.setElementMap(elementMap);
        element6.setAlign(Alignment9.CENTER);
        element5.addBasicElement(element6);
        element6.onAttributesInitialized();
        element6.onChildrenAdded();
        element5.onChildrenAdded();
        final Container checkOut8 = Container.checkOut();
        checkOut8.setElementMap(elementMap);
        checkOut5.addBasicElement(checkOut8);
        checkOut8.onAttributesInitialized();
        final RowLayoutData element7 = new RowLayoutData();
        element7.onCheckOut();
        element7.setElementMap(elementMap);
        element7.setAlign(Alignment9.CENTER);
        checkOut8.addBasicElement(element7);
        element7.onAttributesInitialized();
        element7.onChildrenAdded();
        final Label element8 = new Label();
        element8.onCheckOut();
        element8.setElementMap(elementMap);
        element8.setStyle("styledDark12");
        element8.setNonBlocking(true);
        checkOut8.addBasicElement(element8);
        element8.onAttributesInitialized();
        final PropertyElement checkOut9 = PropertyElement.checkOut();
        checkOut9.setElementMap(elementMap);
        checkOut9.setName("guildCreation.feeDescription");
        checkOut9.setAttribute("text");
        element8.addBasicElement(checkOut9);
        checkOut9.onAttributesInitialized();
        checkOut9.onChildrenAdded();
        element8.onChildrenAdded();
        final Image element9 = new Image();
        element9.onCheckOut();
        element9.setElementMap(elementMap);
        element9.setStyle("kamas");
        element9.setExpandable(false);
        element9.setNonBlocking(true);
        checkOut8.addBasicElement(element9);
        element9.onAttributesInitialized();
        element9.onChildrenAdded();
        checkOut8.onChildrenAdded();
        checkOut5.onChildrenAdded();
        checkOut3.onChildrenAdded();
        final Container checkOut10 = Container.checkOut();
        checkOut10.setElementMap(elementMap);
        checkOut.addBasicElement(checkOut10);
        checkOut10.onAttributesInitialized();
        final StaticLayout element10 = new StaticLayout();
        element10.onCheckOut();
        element10.setAdaptToContentSize(true);
        checkOut10.addBasicElement(element10);
        element10.onAttributesInitialized();
        element10.onChildrenAdded();
        final String id2 = "objectButton";
        final Button button2 = new Button();
        button2.onCheckOut();
        button2.setElementMap(elementMap);
        if (elementMap != null && id2 != null) {
            elementMap.add(id2, button2);
        }
        button2.setStyle("flatBig");
        final MouseClickedListener onClick2 = new MouseClickedListener();
        onClick2.setCallBackFunc("wakfu.guildBannerCreator:createGuild(guildName,false)");
        button2.setOnClick(onClick2);
        checkOut10.addBasicElement(button2);
        button2.onAttributesInitialized();
        final StaticLayoutData element11 = new StaticLayoutData();
        element11.onCheckOut();
        element11.setElementMap(elementMap);
        element11.setSize(new Dimension(100.0f, 100.0f));
        button2.addBasicElement(element11);
        element11.onAttributesInitialized();
        element11.onChildrenAdded();
        final PropertyElement checkOut11 = PropertyElement.checkOut();
        checkOut11.setElementMap(elementMap);
        checkOut11.setName("guildCreation.hasItem");
        checkOut11.setAttribute("enabled");
        button2.addBasicElement(checkOut11);
        checkOut11.onAttributesInitialized();
        checkOut11.onChildrenAdded();
        final DecoratorAppearance appearance3 = button2.getAppearance();
        appearance3.setElementMap(elementMap);
        button2.addBasicElement(appearance3);
        appearance3.onAttributesInitialized();
        final Padding element12 = new Padding();
        element12.onCheckOut();
        element12.setElementMap(elementMap);
        element12.setInsets(new Insets(5, 5, 5, 5));
        appearance3.addBasicElement(element12);
        element12.onAttributesInitialized();
        element12.onChildrenAdded();
        appearance3.onChildrenAdded();
        button2.onChildrenAdded();
        final Container checkOut12 = Container.checkOut();
        checkOut12.setElementMap(elementMap);
        checkOut10.addBasicElement(checkOut12);
        checkOut12.onAttributesInitialized();
        final DecoratorAppearance appearance4 = checkOut12.getAppearance();
        appearance4.setElementMap(elementMap);
        checkOut12.addBasicElement(appearance4);
        appearance4.onAttributesInitialized();
        final Margin checkOut13 = Margin.checkOut();
        checkOut13.setElementMap(elementMap);
        checkOut13.setInsets(new Insets(5, 5, 5, 5));
        appearance4.addBasicElement(checkOut13);
        checkOut13.onAttributesInitialized();
        checkOut13.onChildrenAdded();
        appearance4.onChildrenAdded();
        final StaticLayoutData element13 = new StaticLayoutData();
        element13.onCheckOut();
        element13.setElementMap(elementMap);
        element13.setAlign(Alignment17.CENTER);
        element13.setSize(new Dimension(-2, -2));
        checkOut12.addBasicElement(element13);
        element13.onAttributesInitialized();
        element13.onChildrenAdded();
        final RowLayout checkOut14 = RowLayout.checkOut();
        checkOut14.setHorizontal(false);
        checkOut12.addBasicElement(checkOut14);
        checkOut14.onAttributesInitialized();
        checkOut14.onChildrenAdded();
        final Label element14 = new Label();
        element14.onCheckOut();
        element14.setElementMap(elementMap);
        element14.setStyle("styledDark12");
        element14.setText("%guild.create%".replace("%guild.create%", Xulor.getInstance().getTranslatedString("guild.create")));
        element14.setNonBlocking(true);
        checkOut12.addBasicElement(element14);
        element14.onAttributesInitialized();
        final RowLayoutData element15 = new RowLayoutData();
        element15.onCheckOut();
        element15.setElementMap(elementMap);
        element15.setAlign(Alignment9.CENTER);
        element14.addBasicElement(element15);
        element15.onAttributesInitialized();
        element15.onChildrenAdded();
        element14.onChildrenAdded();
        final Container checkOut15 = Container.checkOut();
        checkOut15.setElementMap(elementMap);
        checkOut12.addBasicElement(checkOut15);
        checkOut15.onAttributesInitialized();
        final RowLayoutData element16 = new RowLayoutData();
        element16.onCheckOut();
        element16.setElementMap(elementMap);
        element16.setAlign(Alignment9.CENTER);
        checkOut15.addBasicElement(element16);
        element16.onAttributesInitialized();
        element16.onChildrenAdded();
        final Image element17 = new Image();
        element17.onCheckOut();
        element17.setElementMap(elementMap);
        element17.setExpandable(false);
        element17.setNonBlocking(true);
        element17.setDisplaySize(new Dimension(16, 16));
        checkOut15.addBasicElement(element17);
        element17.onAttributesInitialized();
        final PixmapElement checkOut16 = PixmapElement.checkOut();
        checkOut16.setElementMap(elementMap);
        element17.addBasicElement(checkOut16);
        checkOut16.onAttributesInitialized();
        final PropertyElement checkOut17 = PropertyElement.checkOut();
        checkOut17.setElementMap(elementMap);
        checkOut17.setName("guildCreation.itemDescription");
        checkOut17.setAttribute("texture");
        checkOut17.setField("iconUrl");
        checkOut16.addBasicElement(checkOut17);
        checkOut17.onAttributesInitialized();
        checkOut17.onChildrenAdded();
        checkOut16.onChildrenAdded();
        element17.onChildrenAdded();
        final Label element18 = new Label();
        element18.onCheckOut();
        element18.setElementMap(elementMap);
        element18.setStyle("styledDark12");
        element18.setExpandable(false);
        element18.setText("1x");
        element18.setNonBlocking(true);
        checkOut15.addBasicElement(element18);
        element18.onAttributesInitialized();
        element18.onChildrenAdded();
        final Label element19 = new Label();
        element19.onCheckOut();
        element19.setElementMap(elementMap);
        element19.setStyle("styledDark12");
        element19.setExpandable(false);
        element19.setNonBlocking(true);
        checkOut15.addBasicElement(element19);
        element19.onAttributesInitialized();
        final PropertyElement checkOut18 = PropertyElement.checkOut();
        checkOut18.setElementMap(elementMap);
        checkOut18.setName("guildCreation.itemDescription");
        checkOut18.setAttribute("text");
        checkOut18.setField("name");
        element19.addBasicElement(checkOut18);
        checkOut18.onAttributesInitialized();
        checkOut18.onChildrenAdded();
        element19.onChildrenAdded();
        checkOut15.onChildrenAdded();
        checkOut12.onChildrenAdded();
        checkOut10.onChildrenAdded();
        checkOut.onChildrenAdded();
        return checkOut;
    }
    
    public BasicElement method4(final BasicElement basicElement) {
        final ElementMap elementMap = this.elementMaps.peek();
        final Container checkOut = Container.checkOut();
        checkOut.setElementMap(elementMap);
        basicElement.addBasicElement(checkOut);
        checkOut.onAttributesInitialized();
        final StaticLayoutData element = new StaticLayoutData();
        element.onCheckOut();
        element.setElementMap(elementMap);
        element.setSize(new Dimension(100.0f, 100.0f));
        checkOut.addBasicElement(element);
        element.onAttributesInitialized();
        element.onChildrenAdded();
        checkOut.onChildrenAdded();
        return checkOut;
    }
    
    public BasicElement method5(final BasicElement basicElement) {
        final ElementMap elementMap = this.elementMaps.peek();
        final Button element = new Button();
        element.onCheckOut();
        element.setElementMap(elementMap);
        element.setStyle("close");
        element.setExpandable(false);
        final MouseClickedListener onClick = new MouseClickedListener();
        onClick.setCallBackFunc("wakfu.guildBannerCreator:closeDialog");
        element.setOnClick(onClick);
        basicElement.addBasicElement(element);
        element.onAttributesInitialized();
        final StaticLayoutData element2 = new StaticLayoutData();
        element2.onCheckOut();
        element2.setElementMap(elementMap);
        element2.setSize(new Dimension(-2, -2));
        element2.setAlign(Alignment17.NORTH_EAST);
        element2.setXOffset(-18);
        element2.setYOffset(-12);
        element.addBasicElement(element2);
        element2.onAttributesInitialized();
        element2.onChildrenAdded();
        element.onChildrenAdded();
        return element;
    }
    
    public BasicElement method6(final BasicElement basicElement) {
        final ElementMap elementMap = this.elementMaps.peek();
        final StaticLayoutData element = new StaticLayoutData();
        element.onCheckOut();
        element.setElementMap(elementMap);
        element.setAlign(Alignment17.CENTER);
        element.setYOffset(-100);
        basicElement.addBasicElement(element);
        element.onAttributesInitialized();
        element.onChildrenAdded();
        return element;
    }
}
