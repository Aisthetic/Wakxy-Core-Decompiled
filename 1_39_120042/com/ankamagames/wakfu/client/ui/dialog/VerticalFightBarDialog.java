package com.ankamagames.wakfu.client.ui.dialog;

import java.util.*;
import com.ankamagames.xulor2.core.*;
import com.ankamagames.xulor2.util.*;
import com.ankamagames.xulor2.nongraphical.*;
import com.ankamagames.xulor2.util.alignment.*;
import com.ankamagames.xulor2.*;
import com.ankamagames.xulor2.property.*;
import com.ankamagames.xulor2.core.renderer.condition.*;
import com.ankamagames.xulor2.appearance.*;
import com.ankamagames.xulor2.event.listener.*;
import com.ankamagames.xulor2.component.*;
import com.ankamagames.xulor2.appearance.spacing.*;
import java.awt.*;
import com.ankamagames.xulor2.layout.*;

public class VerticalFightBarDialog implements BasicElementFactory
{
    private Stack<ElementMap> elementMaps;
    private Environment env;
    
    public VerticalFightBarDialog() {
        super();
        this.elementMaps = new Stack<ElementMap>();
    }
    
    @Override
    public BasicElement getElement(final Environment env, final ElementMap item) {
        this.env = env;
        this.elementMaps.push(item);
        final ElementMap elementMap = this.elementMaps.peek();
        final String id = "fightBar";
        final Window element = new Window();
        element.onCheckOut();
        element.setElementMap(elementMap);
        if (elementMap != null && id != null) {
            elementMap.add(id, element);
        }
        final WindowStickListener onStick = new WindowStickListener();
        onStick.setCallBackFunc("wakfu.windowStick:stickWindow");
        element.setOnStick(onStick);
        element.onAttributesInitialized();
        final StaticLayoutData element2 = new StaticLayoutData();
        element2.onCheckOut();
        element2.setElementMap(elementMap);
        element2.setAlign(Alignment17.WEST);
        element2.setInitValue(true);
        element2.setYOffset(-30);
        element.addBasicElement(element2);
        element2.onAttributesInitialized();
        element2.onChildrenAdded();
        final WindowMovePoint element3 = new WindowMovePoint();
        element3.onCheckOut();
        element3.setElementMap(elementMap);
        element.addBasicElement(element3);
        element3.onAttributesInitialized();
        final Container checkOut = Container.checkOut();
        checkOut.setElementMap(elementMap);
        checkOut.setStyle("VerticalMainBackground");
        element3.addBasicElement(checkOut);
        checkOut.onAttributesInitialized();
        final String id2 = "giveUpButton";
        final Button button = new Button();
        button.onCheckOut();
        button.setElementMap(elementMap);
        if (elementMap != null && id2 != null) {
            elementMap.add(id2, button);
        }
        button.setStyle("fightBar2");
        button.setExpandable(false);
        final MouseClickedListener onClick = new MouseClickedListener();
        onClick.setCallBackFunc("wakfu.fightAction:giveUpFight");
        button.setOnClick(onClick);
        final PopupDisplayListener onPopupDisplay = new PopupDisplayListener();
        onPopupDisplay.setCallBackFunc("popup(descGiveUpFightPopup)");
        button.setOnPopupDisplay(onPopupDisplay);
        final PopupHideListener onPopupHide = new PopupHideListener();
        onPopupHide.setCallBackFunc("closePopup");
        button.setOnPopupHide(onPopupHide);
        button.setPrefSize(new Dimension(33, 35));
        checkOut.addBasicElement(button);
        button.onAttributesInitialized();
        final String id3 = "descGiveUpFightPopup";
        final PopupElement popupElement = new PopupElement();
        popupElement.onCheckOut();
        popupElement.setElementMap(elementMap);
        if (elementMap != null && id3 != null) {
            elementMap.add(id3, popupElement);
        }
        popupElement.setAlign(Alignment9.NORTH);
        popupElement.setHotSpotPosition(Alignment9.SOUTH);
        button.addBasicElement(popupElement);
        popupElement.onAttributesInitialized();
        final Container checkOut2 = Container.checkOut();
        checkOut2.setElementMap(elementMap);
        checkOut2.setPrefSize(new Dimension(10, 0));
        checkOut2.setStyle("popup");
        popupElement.addBasicElement(checkOut2);
        checkOut2.onAttributesInitialized();
        final BorderLayoutData checkOut3 = BorderLayoutData.checkOut();
        checkOut3.setElementMap(elementMap);
        checkOut3.setData(BorderLayoutData.Values.CENTER);
        checkOut2.addBasicElement(checkOut3);
        checkOut3.onAttributesInitialized();
        checkOut3.onChildrenAdded();
        final Label element4 = new Label();
        element4.onCheckOut();
        element4.setElementMap(elementMap);
        element4.setStyle("PopupInformation");
        element4.setText("%desc.giveUpFight% (".replace("%desc.giveUpFight%", Xulor.getInstance().getTranslatedString("desc.giveUpFight")));
        checkOut2.addBasicElement(element4);
        element4.onAttributesInitialized();
        final DecoratorAppearance appearance = element4.getAppearance();
        appearance.setElementMap(elementMap);
        ((TextWidgetAppearance)appearance).setAlignment(Alignment9.WEST);
        element4.addBasicElement(appearance);
        appearance.onAttributesInitialized();
        appearance.onChildrenAdded();
        element4.onChildrenAdded();
        final Label element5 = new Label();
        element5.onCheckOut();
        element5.setElementMap(elementMap);
        element5.setStyle("PopupInformation");
        checkOut2.addBasicElement(element5);
        element5.onAttributesInitialized();
        final DecoratorAppearance appearance2 = element5.getAppearance();
        appearance2.setElementMap(elementMap);
        ((TextWidgetAppearance)appearance2).setAlignment(Alignment9.WEST);
        element5.addBasicElement(appearance2);
        appearance2.onAttributesInitialized();
        appearance2.onChildrenAdded();
        final PropertyElement checkOut4 = PropertyElement.checkOut();
        checkOut4.setElementMap(elementMap);
        checkOut4.setAttribute("text");
        checkOut4.setName("shortcutsList");
        checkOut4.setField("giveUp/key");
        element5.addBasicElement(checkOut4);
        checkOut4.onAttributesInitialized();
        checkOut4.onChildrenAdded();
        element5.onChildrenAdded();
        final Label element6 = new Label();
        element6.onCheckOut();
        element6.setElementMap(elementMap);
        element6.setStyle("PopupInformation");
        element6.setText(")");
        checkOut2.addBasicElement(element6);
        element6.onAttributesInitialized();
        final DecoratorAppearance appearance3 = element6.getAppearance();
        appearance3.setElementMap(elementMap);
        ((TextWidgetAppearance)appearance3).setAlignment(Alignment9.WEST);
        element6.addBasicElement(appearance3);
        appearance3.onAttributesInitialized();
        appearance3.onChildrenAdded();
        element6.onChildrenAdded();
        checkOut2.onChildrenAdded();
        popupElement.onChildrenAdded();
        final PropertyElement checkOut5 = PropertyElement.checkOut();
        checkOut5.setElementMap(elementMap);
        checkOut5.setAttribute("enabled");
        checkOut5.setName("canGiveUpFight");
        button.addBasicElement(checkOut5);
        checkOut5.onAttributesInitialized();
        final ConditionResult element7 = new ConditionResult();
        element7.onCheckOut();
        element7.setElementMap(elementMap);
        checkOut5.addBasicElement(element7);
        element7.onAttributesInitialized();
        final AndCondition element8 = new AndCondition();
        element8.onCheckOut();
        element8.setElementMap(elementMap);
        element7.addBasicElement(element8);
        element8.onAttributesInitialized();
        final TrueCondition element9 = new TrueCondition();
        element9.onCheckOut();
        element9.setElementMap(elementMap);
        element8.addBasicElement(element9);
        element9.onAttributesInitialized();
        element9.onChildrenAdded();
        final FalseCondition element10 = new FalseCondition();
        element10.onCheckOut();
        element10.setElementMap(elementMap);
        element8.addBasicElement(element10);
        element10.onAttributesInitialized();
        final PropertyElement checkOut6 = PropertyElement.checkOut();
        checkOut6.setElementMap(elementMap);
        checkOut6.setAttribute("comparedValue");
        checkOut6.setName("giveUpDisabled");
        element10.addBasicElement(checkOut6);
        checkOut6.onAttributesInitialized();
        checkOut6.onChildrenAdded();
        element10.onChildrenAdded();
        element8.onChildrenAdded();
        element7.onChildrenAdded();
        checkOut5.onChildrenAdded();
        final Image element11 = new Image();
        element11.onCheckOut();
        element11.setElementMap(elementMap);
        element11.setNonBlocking(true);
        element11.setStyle("giveUpFlag");
        button.addBasicElement(element11);
        element11.onAttributesInitialized();
        final PropertyElement checkOut7 = PropertyElement.checkOut();
        checkOut7.setElementMap(elementMap);
        checkOut7.setAttribute("modulationColor");
        checkOut7.setName("canGiveUpFight");
        element11.addBasicElement(checkOut7);
        checkOut7.onAttributesInitialized();
        final ConditionResult element12 = new ConditionResult();
        element12.onCheckOut();
        element12.setElementMap(elementMap);
        element12.setValue("1,1,1");
        element12.setElseValue("1,1,1,0.5");
        checkOut7.addBasicElement(element12);
        element12.onAttributesInitialized();
        final AndCondition element13 = new AndCondition();
        element13.onCheckOut();
        element13.setElementMap(elementMap);
        element12.addBasicElement(element13);
        element13.onAttributesInitialized();
        final TrueCondition element14 = new TrueCondition();
        element14.onCheckOut();
        element14.setElementMap(elementMap);
        element13.addBasicElement(element14);
        element14.onAttributesInitialized();
        element14.onChildrenAdded();
        final FalseCondition element15 = new FalseCondition();
        element15.onCheckOut();
        element15.setElementMap(elementMap);
        element13.addBasicElement(element15);
        element15.onAttributesInitialized();
        final PropertyElement checkOut8 = PropertyElement.checkOut();
        checkOut8.setElementMap(elementMap);
        checkOut8.setAttribute("comparedValue");
        checkOut8.setName("giveUpDisabled");
        element15.addBasicElement(checkOut8);
        checkOut8.onAttributesInitialized();
        checkOut8.onChildrenAdded();
        element15.onChildrenAdded();
        element13.onChildrenAdded();
        element12.onChildrenAdded();
        checkOut7.onChildrenAdded();
        element11.onChildrenAdded();
        button.onChildrenAdded();
        final String id4 = "hideFightersButton";
        final ToggleButton toggleButton = new ToggleButton();
        toggleButton.onCheckOut();
        toggleButton.setElementMap(elementMap);
        if (elementMap != null && id4 != null) {
            elementMap.add(id4, toggleButton);
        }
        toggleButton.setStyle("fightBar2");
        toggleButton.setExpandable(false);
        final MouseClickedListener onClick2 = new MouseClickedListener();
        onClick2.setCallBackFunc("wakfu.fightAction:hideFighters");
        toggleButton.setOnClick(onClick2);
        final PopupDisplayListener onPopupDisplay2 = new PopupDisplayListener();
        onPopupDisplay2.setCallBackFunc("popup(descHideFightersPopup)");
        toggleButton.setOnPopupDisplay(onPopupDisplay2);
        final PopupHideListener onPopupHide2 = new PopupHideListener();
        onPopupHide2.setCallBackFunc("closePopup");
        toggleButton.setOnPopupHide(onPopupHide2);
        toggleButton.setPrefSize(new Dimension(33, 35));
        checkOut.addBasicElement(toggleButton);
        toggleButton.onAttributesInitialized();
        final PropertyElement checkOut9 = PropertyElement.checkOut();
        checkOut9.setElementMap(elementMap);
        checkOut9.setAttribute("selected");
        checkOut9.setName("gamePreferences");
        checkOut9.setField("hideFightOccludersActivated");
        toggleButton.addBasicElement(checkOut9);
        checkOut9.onAttributesInitialized();
        checkOut9.onChildrenAdded();
        final PropertyElement checkOut10 = PropertyElement.checkOut();
        checkOut10.setElementMap(elementMap);
        checkOut10.setAttribute("enabled");
        checkOut10.setName("hideFightersDisabled");
        toggleButton.addBasicElement(checkOut10);
        checkOut10.onAttributesInitialized();
        final ConditionResult element16 = new ConditionResult();
        element16.onCheckOut();
        element16.setElementMap(elementMap);
        checkOut10.addBasicElement(element16);
        element16.onAttributesInitialized();
        final FalseCondition element17 = new FalseCondition();
        element17.onCheckOut();
        element17.setElementMap(elementMap);
        element16.addBasicElement(element17);
        element17.onAttributesInitialized();
        element17.onChildrenAdded();
        element16.onChildrenAdded();
        checkOut10.onChildrenAdded();
        final String id5 = "descHideFightersPopup";
        final PopupElement popupElement2 = new PopupElement();
        popupElement2.onCheckOut();
        popupElement2.setElementMap(elementMap);
        if (elementMap != null && id5 != null) {
            elementMap.add(id5, popupElement2);
        }
        popupElement2.setAlign(Alignment9.NORTH);
        popupElement2.setHotSpotPosition(Alignment9.SOUTH);
        toggleButton.addBasicElement(popupElement2);
        popupElement2.onAttributesInitialized();
        final Container checkOut11 = Container.checkOut();
        checkOut11.setElementMap(elementMap);
        checkOut11.setPrefSize(new Dimension(10, 0));
        checkOut11.setStyle("popup");
        popupElement2.addBasicElement(checkOut11);
        checkOut11.onAttributesInitialized();
        final BorderLayoutData checkOut12 = BorderLayoutData.checkOut();
        checkOut12.setElementMap(elementMap);
        checkOut12.setData(BorderLayoutData.Values.CENTER);
        checkOut11.addBasicElement(checkOut12);
        checkOut12.onAttributesInitialized();
        checkOut12.onChildrenAdded();
        final Label element18 = new Label();
        element18.onCheckOut();
        element18.setElementMap(elementMap);
        element18.setStyle("PopupInformation");
        element18.setText("%desc.hideFighters% (".replace("%desc.hideFighters%", Xulor.getInstance().getTranslatedString("desc.hideFighters")));
        checkOut11.addBasicElement(element18);
        element18.onAttributesInitialized();
        final DecoratorAppearance appearance4 = element18.getAppearance();
        appearance4.setElementMap(elementMap);
        ((TextWidgetAppearance)appearance4).setAlignment(Alignment9.WEST);
        element18.addBasicElement(appearance4);
        appearance4.onAttributesInitialized();
        appearance4.onChildrenAdded();
        element18.onChildrenAdded();
        final Label element19 = new Label();
        element19.onCheckOut();
        element19.setElementMap(elementMap);
        element19.setStyle("PopupInformation");
        checkOut11.addBasicElement(element19);
        element19.onAttributesInitialized();
        final DecoratorAppearance appearance5 = element19.getAppearance();
        appearance5.setElementMap(elementMap);
        ((TextWidgetAppearance)appearance5).setAlignment(Alignment9.WEST);
        element19.addBasicElement(appearance5);
        appearance5.onAttributesInitialized();
        appearance5.onChildrenAdded();
        final PropertyElement checkOut13 = PropertyElement.checkOut();
        checkOut13.setElementMap(elementMap);
        checkOut13.setAttribute("text");
        checkOut13.setName("shortcutsList");
        checkOut13.setField("fighterTransparency/key");
        element19.addBasicElement(checkOut13);
        checkOut13.onAttributesInitialized();
        checkOut13.onChildrenAdded();
        element19.onChildrenAdded();
        final Label element20 = new Label();
        element20.onCheckOut();
        element20.setElementMap(elementMap);
        element20.setStyle("PopupInformation");
        element20.setText(")");
        checkOut11.addBasicElement(element20);
        element20.onAttributesInitialized();
        final DecoratorAppearance appearance6 = element20.getAppearance();
        appearance6.setElementMap(elementMap);
        ((TextWidgetAppearance)appearance6).setAlignment(Alignment9.WEST);
        element20.addBasicElement(appearance6);
        appearance6.onAttributesInitialized();
        appearance6.onChildrenAdded();
        element20.onChildrenAdded();
        checkOut11.onChildrenAdded();
        popupElement2.onChildrenAdded();
        final Image element21 = new Image();
        element21.onCheckOut();
        element21.setElementMap(elementMap);
        element21.setNonBlocking(true);
        element21.setStyle("invisibleGuy");
        toggleButton.addBasicElement(element21);
        element21.onAttributesInitialized();
        final PropertyElement checkOut14 = PropertyElement.checkOut();
        checkOut14.setElementMap(elementMap);
        checkOut14.setAttribute("modulationColor");
        checkOut14.setName("hideFightersDisabled");
        element21.addBasicElement(checkOut14);
        checkOut14.onAttributesInitialized();
        final ConditionResult element22 = new ConditionResult();
        element22.onCheckOut();
        element22.setElementMap(elementMap);
        element22.setValue("1,1,1");
        element22.setElseValue("1,1,1,0.5");
        checkOut14.addBasicElement(element22);
        element22.onAttributesInitialized();
        final FalseCondition element23 = new FalseCondition();
        element23.onCheckOut();
        element23.setElementMap(elementMap);
        element22.addBasicElement(element23);
        element23.onAttributesInitialized();
        element23.onChildrenAdded();
        element22.onChildrenAdded();
        checkOut14.onChildrenAdded();
        element21.onChildrenAdded();
        toggleButton.onChildrenAdded();
        final String id6 = "reportCellBtn";
        final Button button2 = new Button();
        button2.onCheckOut();
        button2.setElementMap(elementMap);
        if (elementMap != null && id6 != null) {
            elementMap.add(id6, button2);
        }
        button2.setStyle("fightBar2");
        button2.setExpandable(false);
        final MouseClickedListener onClick3 = new MouseClickedListener();
        onClick3.setCallBackFunc("wakfu.fightAction:reportCell(reportCellBtn)");
        button2.setOnClick(onClick3);
        final PopupDisplayListener onPopupDisplay3 = new PopupDisplayListener();
        onPopupDisplay3.setCallBackFunc("popup(descReportCellPopup)");
        button2.setOnPopupDisplay(onPopupDisplay3);
        final PopupHideListener onPopupHide3 = new PopupHideListener();
        onPopupHide3.setCallBackFunc("closePopup");
        button2.setOnPopupHide(onPopupHide3);
        button2.setPrefSize(new Dimension(33, 35));
        checkOut.addBasicElement(button2);
        button2.onAttributesInitialized();
        final PropertyElement checkOut15 = PropertyElement.checkOut();
        checkOut15.setElementMap(elementMap);
        checkOut15.setAttribute("enabled");
        checkOut15.setName("cellReportDisabled");
        button2.addBasicElement(checkOut15);
        checkOut15.onAttributesInitialized();
        final ConditionResult element24 = new ConditionResult();
        element24.onCheckOut();
        element24.setElementMap(elementMap);
        checkOut15.addBasicElement(element24);
        element24.onAttributesInitialized();
        final FalseCondition element25 = new FalseCondition();
        element25.onCheckOut();
        element25.setElementMap(elementMap);
        element24.addBasicElement(element25);
        element25.onAttributesInitialized();
        element25.onChildrenAdded();
        element24.onChildrenAdded();
        checkOut15.onChildrenAdded();
        final String id7 = "descReportCellPopup";
        final PopupElement popupElement3 = new PopupElement();
        popupElement3.onCheckOut();
        popupElement3.setElementMap(elementMap);
        if (elementMap != null && id7 != null) {
            elementMap.add(id7, popupElement3);
        }
        popupElement3.setAlign(Alignment9.NORTH);
        popupElement3.setHotSpotPosition(Alignment9.SOUTH);
        button2.addBasicElement(popupElement3);
        popupElement3.onAttributesInitialized();
        final Container checkOut16 = Container.checkOut();
        checkOut16.setElementMap(elementMap);
        checkOut16.setPrefSize(new Dimension(10, 0));
        checkOut16.setStyle("popup");
        popupElement3.addBasicElement(checkOut16);
        checkOut16.onAttributesInitialized();
        final BorderLayoutData checkOut17 = BorderLayoutData.checkOut();
        checkOut17.setElementMap(elementMap);
        checkOut17.setData(BorderLayoutData.Values.CENTER);
        checkOut16.addBasicElement(checkOut17);
        checkOut17.onAttributesInitialized();
        checkOut17.onChildrenAdded();
        final Label element26 = new Label();
        element26.onCheckOut();
        element26.setElementMap(elementMap);
        element26.setStyle("PopupInformation");
        element26.setText("%desc.reportCell% (".replace("%desc.reportCell%", Xulor.getInstance().getTranslatedString("desc.reportCell")));
        checkOut16.addBasicElement(element26);
        element26.onAttributesInitialized();
        final DecoratorAppearance appearance7 = element26.getAppearance();
        appearance7.setElementMap(elementMap);
        ((TextWidgetAppearance)appearance7).setAlignment(Alignment9.WEST);
        element26.addBasicElement(appearance7);
        appearance7.onAttributesInitialized();
        appearance7.onChildrenAdded();
        element26.onChildrenAdded();
        final Label element27 = new Label();
        element27.onCheckOut();
        element27.setElementMap(elementMap);
        element27.setStyle("PopupInformation");
        checkOut16.addBasicElement(element27);
        element27.onAttributesInitialized();
        final DecoratorAppearance appearance8 = element27.getAppearance();
        appearance8.setElementMap(elementMap);
        ((TextWidgetAppearance)appearance8).setAlignment(Alignment9.WEST);
        element27.addBasicElement(appearance8);
        appearance8.onAttributesInitialized();
        appearance8.onChildrenAdded();
        final PropertyElement checkOut18 = PropertyElement.checkOut();
        checkOut18.setElementMap(elementMap);
        checkOut18.setAttribute("text");
        checkOut18.setName("shortcutsList");
        checkOut18.setField("reportCell/key");
        element27.addBasicElement(checkOut18);
        checkOut18.onAttributesInitialized();
        checkOut18.onChildrenAdded();
        element27.onChildrenAdded();
        final Label element28 = new Label();
        element28.onCheckOut();
        element28.setElementMap(elementMap);
        element28.setStyle("PopupInformation");
        element28.setText(")");
        checkOut16.addBasicElement(element28);
        element28.onAttributesInitialized();
        final DecoratorAppearance appearance9 = element28.getAppearance();
        appearance9.setElementMap(elementMap);
        ((TextWidgetAppearance)appearance9).setAlignment(Alignment9.WEST);
        element28.addBasicElement(appearance9);
        appearance9.onAttributesInitialized();
        appearance9.onChildrenAdded();
        element28.onChildrenAdded();
        checkOut16.onChildrenAdded();
        popupElement3.onChildrenAdded();
        final Image element29 = new Image();
        element29.onCheckOut();
        element29.setElementMap(elementMap);
        element29.setNonBlocking(true);
        element29.setStyle("showTile");
        button2.addBasicElement(element29);
        element29.onAttributesInitialized();
        final PropertyElement checkOut19 = PropertyElement.checkOut();
        checkOut19.setElementMap(elementMap);
        checkOut19.setAttribute("modulationColor");
        checkOut19.setName("cellReportDisabled");
        element29.addBasicElement(checkOut19);
        checkOut19.onAttributesInitialized();
        this.method0(checkOut19);
        checkOut19.onChildrenAdded();
        element29.onChildrenAdded();
        button2.onChildrenAdded();
        this.method1(checkOut);
        this.method2(checkOut);
        this.method3(checkOut);
        this.method4(checkOut);
        checkOut.onChildrenAdded();
        element3.onChildrenAdded();
        element.onChildrenAdded();
        return element;
    }
    
    public BasicElement method0(final BasicElement basicElement) {
        final ElementMap elementMap = this.elementMaps.peek();
        final ConditionResult element = new ConditionResult();
        element.onCheckOut();
        element.setElementMap(elementMap);
        element.setValue("1,1,1");
        element.setElseValue("1,1,1,0.5");
        basicElement.addBasicElement(element);
        element.onAttributesInitialized();
        final FalseCondition element2 = new FalseCondition();
        element2.onCheckOut();
        element2.setElementMap(elementMap);
        element.addBasicElement(element2);
        element2.onAttributesInitialized();
        element2.onChildrenAdded();
        element.onChildrenAdded();
        return element;
    }
    
    public BasicElement method1(final BasicElement basicElement) {
        final ElementMap elementMap = this.elementMaps.peek();
        final String id = "lockFightBtn";
        final ToggleButton toggleButton = new ToggleButton();
        toggleButton.onCheckOut();
        toggleButton.setElementMap(elementMap);
        if (elementMap != null && id != null) {
            elementMap.add(id, toggleButton);
        }
        toggleButton.setStyle("fightBar2");
        toggleButton.setExpandable(false);
        final MouseReleasedListener onMouseRelease = new MouseReleasedListener();
        onMouseRelease.setCallBackFunc("wakfu.fightCreationOrPlacement:lockFight(lockFightBtn)");
        toggleButton.setOnMouseRelease(onMouseRelease);
        final PopupDisplayListener onPopupDisplay = new PopupDisplayListener();
        onPopupDisplay.setCallBackFunc("popup(descPadLocksPopup)");
        toggleButton.setOnPopupDisplay(onPopupDisplay);
        final PopupHideListener onPopupHide = new PopupHideListener();
        onPopupHide.setCallBackFunc("closePopup");
        toggleButton.setOnPopupHide(onPopupHide);
        toggleButton.setPrefSize(new Dimension(33, 35));
        basicElement.addBasicElement(toggleButton);
        toggleButton.onAttributesInitialized();
        final PropertyElement checkOut = PropertyElement.checkOut();
        checkOut.setElementMap(elementMap);
        checkOut.setAttribute("selected");
        checkOut.setName("currentFightLocked");
        toggleButton.addBasicElement(checkOut);
        checkOut.onAttributesInitialized();
        checkOut.onChildrenAdded();
        final PropertyElement checkOut2 = PropertyElement.checkOut();
        checkOut2.setElementMap(elementMap);
        checkOut2.setAttribute("enabled");
        checkOut2.setName("isInFightCreationOrPlacement");
        toggleButton.addBasicElement(checkOut2);
        checkOut2.onAttributesInitialized();
        final ConditionResult element = new ConditionResult();
        element.onCheckOut();
        element.setElementMap(elementMap);
        checkOut2.addBasicElement(element);
        element.onAttributesInitialized();
        final AndCondition element2 = new AndCondition();
        element2.onCheckOut();
        element2.setElementMap(elementMap);
        element.addBasicElement(element2);
        element2.onAttributesInitialized();
        final TrueCondition element3 = new TrueCondition();
        element3.onCheckOut();
        element3.setElementMap(elementMap);
        element2.addBasicElement(element3);
        element3.onAttributesInitialized();
        element3.onChildrenAdded();
        final FalseCondition element4 = new FalseCondition();
        element4.onCheckOut();
        element4.setElementMap(elementMap);
        element2.addBasicElement(element4);
        element4.onAttributesInitialized();
        final PropertyElement checkOut3 = PropertyElement.checkOut();
        checkOut3.setElementMap(elementMap);
        checkOut3.setAttribute("comparedValue");
        checkOut3.setName("lockFightDisabled");
        element4.addBasicElement(checkOut3);
        checkOut3.onAttributesInitialized();
        checkOut3.onChildrenAdded();
        element4.onChildrenAdded();
        element2.onChildrenAdded();
        element.onChildrenAdded();
        checkOut2.onChildrenAdded();
        final String id2 = "descPadLocksPopup";
        final PopupElement popupElement = new PopupElement();
        popupElement.onCheckOut();
        popupElement.setElementMap(elementMap);
        if (elementMap != null && id2 != null) {
            elementMap.add(id2, popupElement);
        }
        popupElement.setAlign(Alignment9.NORTH);
        popupElement.setHotSpotPosition(Alignment9.SOUTH);
        toggleButton.addBasicElement(popupElement);
        popupElement.onAttributesInitialized();
        final Container checkOut4 = Container.checkOut();
        checkOut4.setElementMap(elementMap);
        checkOut4.setPrefSize(new Dimension(10, 0));
        checkOut4.setStyle("popup");
        popupElement.addBasicElement(checkOut4);
        checkOut4.onAttributesInitialized();
        final BorderLayoutData checkOut5 = BorderLayoutData.checkOut();
        checkOut5.setElementMap(elementMap);
        checkOut5.setData(BorderLayoutData.Values.CENTER);
        checkOut4.addBasicElement(checkOut5);
        checkOut5.onAttributesInitialized();
        checkOut5.onChildrenAdded();
        final Label element5 = new Label();
        element5.onCheckOut();
        element5.setElementMap(elementMap);
        element5.setStyle("PopupInformation");
        checkOut4.addBasicElement(element5);
        element5.onAttributesInitialized();
        final DecoratorAppearance appearance = element5.getAppearance();
        appearance.setElementMap(elementMap);
        ((TextWidgetAppearance)appearance).setAlignment(Alignment9.WEST);
        element5.addBasicElement(appearance);
        appearance.onAttributesInitialized();
        appearance.onChildrenAdded();
        final PropertyElement checkOut6 = PropertyElement.checkOut();
        checkOut6.setElementMap(elementMap);
        checkOut6.setAttribute("text");
        checkOut6.setName("currentFightLocked");
        element5.addBasicElement(checkOut6);
        checkOut6.onAttributesInitialized();
        final ConditionResult element6 = new ConditionResult();
        element6.onCheckOut();
        element6.setElementMap(elementMap);
        element6.setValue("%desc.unlockFight% (".replace("%desc.unlockFight%", Xulor.getInstance().getTranslatedString("desc.unlockFight")));
        element6.setElseValue("%desc.lockFight% (".replace("%desc.lockFight%", Xulor.getInstance().getTranslatedString("desc.lockFight")));
        checkOut6.addBasicElement(element6);
        element6.onAttributesInitialized();
        final TrueCondition element7 = new TrueCondition();
        element7.onCheckOut();
        element7.setElementMap(elementMap);
        element6.addBasicElement(element7);
        element7.onAttributesInitialized();
        element7.onChildrenAdded();
        element6.onChildrenAdded();
        checkOut6.onChildrenAdded();
        element5.onChildrenAdded();
        final Label element8 = new Label();
        element8.onCheckOut();
        element8.setElementMap(elementMap);
        element8.setStyle("PopupInformation");
        checkOut4.addBasicElement(element8);
        element8.onAttributesInitialized();
        final DecoratorAppearance appearance2 = element8.getAppearance();
        appearance2.setElementMap(elementMap);
        ((TextWidgetAppearance)appearance2).setAlignment(Alignment9.WEST);
        element8.addBasicElement(appearance2);
        appearance2.onAttributesInitialized();
        appearance2.onChildrenAdded();
        final PropertyElement checkOut7 = PropertyElement.checkOut();
        checkOut7.setElementMap(elementMap);
        checkOut7.setAttribute("text");
        checkOut7.setName("shortcutsList");
        checkOut7.setField("lockFight/key");
        element8.addBasicElement(checkOut7);
        checkOut7.onAttributesInitialized();
        checkOut7.onChildrenAdded();
        element8.onChildrenAdded();
        final Label element9 = new Label();
        element9.onCheckOut();
        element9.setElementMap(elementMap);
        element9.setStyle("PopupInformation");
        element9.setText(")");
        checkOut4.addBasicElement(element9);
        element9.onAttributesInitialized();
        final DecoratorAppearance appearance3 = element9.getAppearance();
        appearance3.setElementMap(elementMap);
        ((TextWidgetAppearance)appearance3).setAlignment(Alignment9.WEST);
        element9.addBasicElement(appearance3);
        appearance3.onAttributesInitialized();
        appearance3.onChildrenAdded();
        element9.onChildrenAdded();
        checkOut4.onChildrenAdded();
        popupElement.onChildrenAdded();
        final Image element10 = new Image();
        element10.onCheckOut();
        element10.setElementMap(elementMap);
        element10.setNonBlocking(true);
        element10.setStyle("lock");
        toggleButton.addBasicElement(element10);
        element10.onAttributesInitialized();
        final PropertyElement checkOut8 = PropertyElement.checkOut();
        checkOut8.setElementMap(elementMap);
        checkOut8.setAttribute("modulationColor");
        checkOut8.setName("isInFightCreationOrPlacement");
        element10.addBasicElement(checkOut8);
        checkOut8.onAttributesInitialized();
        final ConditionResult element11 = new ConditionResult();
        element11.onCheckOut();
        element11.setElementMap(elementMap);
        element11.setValue("1,1,1");
        element11.setElseValue("1,1,1,0.5");
        checkOut8.addBasicElement(element11);
        element11.onAttributesInitialized();
        final AndCondition element12 = new AndCondition();
        element12.onCheckOut();
        element12.setElementMap(elementMap);
        element11.addBasicElement(element12);
        element12.onAttributesInitialized();
        final TrueCondition element13 = new TrueCondition();
        element13.onCheckOut();
        element13.setElementMap(elementMap);
        element12.addBasicElement(element13);
        element13.onAttributesInitialized();
        element13.onChildrenAdded();
        final FalseCondition element14 = new FalseCondition();
        element14.onCheckOut();
        element14.setElementMap(elementMap);
        element12.addBasicElement(element14);
        element14.onAttributesInitialized();
        final PropertyElement checkOut9 = PropertyElement.checkOut();
        checkOut9.setElementMap(elementMap);
        checkOut9.setAttribute("comparedValue");
        checkOut9.setName("lockFightDisabled");
        element14.addBasicElement(checkOut9);
        checkOut9.onAttributesInitialized();
        checkOut9.onChildrenAdded();
        element14.onChildrenAdded();
        element12.onChildrenAdded();
        element11.onChildrenAdded();
        checkOut8.onChildrenAdded();
        element10.onChildrenAdded();
        toggleButton.onChildrenAdded();
        return toggleButton;
    }
    
    public BasicElement method2(final BasicElement basicElement) {
        final ElementMap elementMap = this.elementMaps.peek();
        final String id = "callHelpBtn";
        final Button button = new Button();
        button.onCheckOut();
        button.setElementMap(elementMap);
        if (elementMap != null && id != null) {
            elementMap.add(id, button);
        }
        button.setStyle("fightBar2");
        button.setExpandable(false);
        final MouseClickedListener onClick = new MouseClickedListener();
        onClick.setCallBackFunc("wakfu.fightAction:callHelp(callHelpBtn)");
        button.setOnClick(onClick);
        final PopupDisplayListener onPopupDisplay = new PopupDisplayListener();
        onPopupDisplay.setCallBackFunc("popup(descCallHelpPopup)");
        button.setOnPopupDisplay(onPopupDisplay);
        final PopupHideListener onPopupHide = new PopupHideListener();
        onPopupHide.setCallBackFunc("closePopup");
        button.setOnPopupHide(onPopupHide);
        button.setPrefSize(new Dimension(33, 35));
        basicElement.addBasicElement(button);
        button.onAttributesInitialized();
        final PropertyElement checkOut = PropertyElement.checkOut();
        checkOut.setElementMap(elementMap);
        checkOut.setAttribute("enabled");
        checkOut.setName("isInFightCreationOrPlacement");
        button.addBasicElement(checkOut);
        checkOut.onAttributesInitialized();
        final ConditionResult element = new ConditionResult();
        element.onCheckOut();
        element.setElementMap(elementMap);
        checkOut.addBasicElement(element);
        element.onAttributesInitialized();
        final AndCondition element2 = new AndCondition();
        element2.onCheckOut();
        element2.setElementMap(elementMap);
        element.addBasicElement(element2);
        element2.onAttributesInitialized();
        final TrueCondition element3 = new TrueCondition();
        element3.onCheckOut();
        element3.setElementMap(elementMap);
        element2.addBasicElement(element3);
        element3.onAttributesInitialized();
        element3.onChildrenAdded();
        final FalseCondition element4 = new FalseCondition();
        element4.onCheckOut();
        element4.setElementMap(elementMap);
        element2.addBasicElement(element4);
        element4.onAttributesInitialized();
        final PropertyElement checkOut2 = PropertyElement.checkOut();
        checkOut2.setElementMap(elementMap);
        checkOut2.setAttribute("comparedValue");
        checkOut2.setName("callHelpDisabled");
        element4.addBasicElement(checkOut2);
        checkOut2.onAttributesInitialized();
        checkOut2.onChildrenAdded();
        element4.onChildrenAdded();
        element2.onChildrenAdded();
        element.onChildrenAdded();
        checkOut.onChildrenAdded();
        final String id2 = "descCallHelpPopup";
        final PopupElement popupElement = new PopupElement();
        popupElement.onCheckOut();
        popupElement.setElementMap(elementMap);
        if (elementMap != null && id2 != null) {
            elementMap.add(id2, popupElement);
        }
        popupElement.setAlign(Alignment9.NORTH);
        popupElement.setHotSpotPosition(Alignment9.SOUTH);
        button.addBasicElement(popupElement);
        popupElement.onAttributesInitialized();
        final Container checkOut3 = Container.checkOut();
        checkOut3.setElementMap(elementMap);
        checkOut3.setPrefSize(new Dimension(10, 0));
        checkOut3.setStyle("popup");
        popupElement.addBasicElement(checkOut3);
        checkOut3.onAttributesInitialized();
        final BorderLayoutData checkOut4 = BorderLayoutData.checkOut();
        checkOut4.setElementMap(elementMap);
        checkOut4.setData(BorderLayoutData.Values.CENTER);
        checkOut3.addBasicElement(checkOut4);
        checkOut4.onAttributesInitialized();
        checkOut4.onChildrenAdded();
        final Label element5 = new Label();
        element5.onCheckOut();
        element5.setElementMap(elementMap);
        element5.setStyle("PopupInformation");
        element5.setText("%desc.callHelp% (".replace("%desc.callHelp%", Xulor.getInstance().getTranslatedString("desc.callHelp")));
        checkOut3.addBasicElement(element5);
        element5.onAttributesInitialized();
        final DecoratorAppearance appearance = element5.getAppearance();
        appearance.setElementMap(elementMap);
        ((TextWidgetAppearance)appearance).setAlignment(Alignment9.WEST);
        element5.addBasicElement(appearance);
        appearance.onAttributesInitialized();
        appearance.onChildrenAdded();
        element5.onChildrenAdded();
        final Label element6 = new Label();
        element6.onCheckOut();
        element6.setElementMap(elementMap);
        element6.setStyle("PopupInformation");
        checkOut3.addBasicElement(element6);
        element6.onAttributesInitialized();
        final DecoratorAppearance appearance2 = element6.getAppearance();
        appearance2.setElementMap(elementMap);
        ((TextWidgetAppearance)appearance2).setAlignment(Alignment9.WEST);
        element6.addBasicElement(appearance2);
        appearance2.onAttributesInitialized();
        appearance2.onChildrenAdded();
        final PropertyElement checkOut5 = PropertyElement.checkOut();
        checkOut5.setElementMap(elementMap);
        checkOut5.setAttribute("text");
        checkOut5.setName("shortcutsList");
        checkOut5.setField("callHelp/key");
        element6.addBasicElement(checkOut5);
        checkOut5.onAttributesInitialized();
        checkOut5.onChildrenAdded();
        element6.onChildrenAdded();
        final Label element7 = new Label();
        element7.onCheckOut();
        element7.setElementMap(elementMap);
        element7.setStyle("PopupInformation");
        element7.setText(")");
        checkOut3.addBasicElement(element7);
        element7.onAttributesInitialized();
        final DecoratorAppearance appearance3 = element7.getAppearance();
        appearance3.setElementMap(elementMap);
        ((TextWidgetAppearance)appearance3).setAlignment(Alignment9.WEST);
        element7.addBasicElement(appearance3);
        appearance3.onAttributesInitialized();
        appearance3.onChildrenAdded();
        element7.onChildrenAdded();
        checkOut3.onChildrenAdded();
        popupElement.onChildrenAdded();
        final Image element8 = new Image();
        element8.onCheckOut();
        element8.setElementMap(elementMap);
        element8.setNonBlocking(true);
        element8.setStyle("exclamationMark");
        button.addBasicElement(element8);
        element8.onAttributesInitialized();
        final PropertyElement checkOut6 = PropertyElement.checkOut();
        checkOut6.setElementMap(elementMap);
        checkOut6.setAttribute("modulationColor");
        checkOut6.setName("isInFightCreationOrPlacement");
        element8.addBasicElement(checkOut6);
        checkOut6.onAttributesInitialized();
        final ConditionResult element9 = new ConditionResult();
        element9.onCheckOut();
        element9.setElementMap(elementMap);
        element9.setValue("1,1,1");
        element9.setElseValue("1,1,1,0.5");
        checkOut6.addBasicElement(element9);
        element9.onAttributesInitialized();
        final AndCondition element10 = new AndCondition();
        element10.onCheckOut();
        element10.setElementMap(elementMap);
        element9.addBasicElement(element10);
        element10.onAttributesInitialized();
        final TrueCondition element11 = new TrueCondition();
        element11.onCheckOut();
        element11.setElementMap(elementMap);
        element10.addBasicElement(element11);
        element11.onAttributesInitialized();
        element11.onChildrenAdded();
        final FalseCondition element12 = new FalseCondition();
        element12.onCheckOut();
        element12.setElementMap(elementMap);
        element10.addBasicElement(element12);
        element12.onAttributesInitialized();
        final PropertyElement checkOut7 = PropertyElement.checkOut();
        checkOut7.setElementMap(elementMap);
        checkOut7.setAttribute("comparedValue");
        checkOut7.setName("callHelpDisabled");
        element12.addBasicElement(checkOut7);
        checkOut7.onAttributesInitialized();
        checkOut7.onChildrenAdded();
        element12.onChildrenAdded();
        element10.onChildrenAdded();
        element9.onChildrenAdded();
        checkOut6.onChildrenAdded();
        element8.onChildrenAdded();
        button.onChildrenAdded();
        return button;
    }
    
    public BasicElement method3(final BasicElement basicElement) {
        final ElementMap elementMap = this.elementMaps.peek();
        final DecoratorAppearance appearance = ((Widget)basicElement).getAppearance();
        appearance.setElementMap(elementMap);
        basicElement.addBasicElement(appearance);
        appearance.onAttributesInitialized();
        final Padding element = new Padding();
        element.onCheckOut();
        element.setElementMap(elementMap);
        element.setInsets(new Insets(10, 7, 10, 7));
        appearance.addBasicElement(element);
        element.onAttributesInitialized();
        element.onChildrenAdded();
        appearance.onChildrenAdded();
        return appearance;
    }
    
    public BasicElement method4(final BasicElement basicElement) {
        final ElementMap elementMap = this.elementMaps.peek();
        final RowLayout checkOut = RowLayout.checkOut();
        checkOut.setHorizontal(false);
        checkOut.setAlign(Alignment9.NORTH);
        basicElement.addBasicElement(checkOut);
        checkOut.onAttributesInitialized();
        checkOut.onChildrenAdded();
        return null;
    }
}
