package com.ankamagames.wakfu.client.ui.dialog;

import java.util.*;
import com.ankamagames.xulor2.util.*;
import java.awt.*;
import com.ankamagames.xulor2.layout.*;
import com.ankamagames.xulor2.*;
import com.ankamagames.xulor2.nongraphical.*;
import com.ankamagames.xulor2.core.*;
import com.ankamagames.xulor2.property.*;
import com.ankamagames.xulor2.util.alignment.*;
import com.ankamagames.xulor2.appearance.spacing.*;
import com.ankamagames.framework.graphics.image.*;
import com.ankamagames.xulor2.core.form.*;
import com.ankamagames.xulor2.core.renderer.*;
import com.ankamagames.xulor2.event.listener.*;
import com.ankamagames.xulor2.component.*;
import com.ankamagames.xulor2.appearance.*;

public class ModeratorChatDialog implements BasicElementFactory
{
    private Stack<ElementMap> elementMaps;
    private Environment env;
    
    public ModeratorChatDialog() {
        super();
        this.elementMaps = new Stack<ElementMap>();
    }
    
    @Override
    public BasicElement getElement(final Environment env, final ElementMap item) {
        this.env = env;
        this.elementMaps.push(item);
        final ElementMap elementMap = this.elementMaps.peek();
        final Window window = new Window();
        window.onCheckOut();
        window.setElementMap(elementMap);
        window.setPack(true);
        window.onAttributesInitialized();
        final StaticLayoutData element = new StaticLayoutData();
        element.onCheckOut();
        element.setElementMap(elementMap);
        element.setSize(new Dimension(-2, -2));
        element.setAlign(Alignment17.EAST);
        element.setInitValue(true);
        window.addBasicElement(element);
        element.onAttributesInitialized();
        element.onChildrenAdded();
        final StaticLayout element2 = new StaticLayout();
        element2.onCheckOut();
        element2.setAdaptToContentSize(true);
        window.addBasicElement(element2);
        element2.onAttributesInitialized();
        element2.onChildrenAdded();
        final Container checkOut = Container.checkOut();
        checkOut.setElementMap(elementMap);
        checkOut.setStyle("popup");
        window.addBasicElement(checkOut);
        checkOut.onAttributesInitialized();
        final StaticLayoutData element3 = new StaticLayoutData();
        element3.onCheckOut();
        element3.setElementMap(elementMap);
        element3.setSize(new Dimension(100.0f, 100.0f));
        checkOut.addBasicElement(element3);
        element3.onAttributesInitialized();
        element3.onChildrenAdded();
        final RowLayout checkOut2 = RowLayout.checkOut();
        checkOut2.setHorizontal(false);
        checkOut.addBasicElement(checkOut2);
        checkOut2.onAttributesInitialized();
        checkOut2.onChildrenAdded();
        final WindowMovePoint element4 = new WindowMovePoint();
        element4.onCheckOut();
        element4.setElementMap(elementMap);
        checkOut.addBasicElement(element4);
        element4.onAttributesInitialized();
        final Container checkOut3 = Container.checkOut();
        checkOut3.setElementMap(elementMap);
        checkOut3.setStyle("titleBar");
        element4.addBasicElement(checkOut3);
        checkOut3.onAttributesInitialized();
        final DecoratorAppearance appearance = checkOut3.getAppearance();
        appearance.setElementMap(elementMap);
        checkOut3.addBasicElement(appearance);
        appearance.onAttributesInitialized();
        final Padding element5 = new Padding();
        element5.onCheckOut();
        element5.setElementMap(elementMap);
        element5.setInsets(new Insets(3, 20, 3, 20));
        appearance.addBasicElement(element5);
        element5.onAttributesInitialized();
        element5.onChildrenAdded();
        appearance.onChildrenAdded();
        final RowLayoutData element6 = new RowLayoutData();
        element6.onCheckOut();
        element6.setElementMap(elementMap);
        element6.setAlign(Alignment9.CENTER);
        checkOut3.addBasicElement(element6);
        element6.onAttributesInitialized();
        element6.onChildrenAdded();
        final Label element7 = new Label();
        element7.onCheckOut();
        element7.setElementMap(elementMap);
        element7.setStyle("StyledBold16White");
        element7.setNonBlocking(true);
        element7.setText("%moderator.chat%".replace("%moderator.chat%", Xulor.getInstance().getTranslatedString("moderator.chat")));
        checkOut3.addBasicElement(element7);
        element7.onAttributesInitialized();
        final DecoratorAppearance appearance2 = element7.getAppearance();
        appearance2.setElementMap(elementMap);
        ((TextWidgetAppearance)appearance2).setAlignment(Alignment9.CENTER);
        element7.addBasicElement(appearance2);
        appearance2.onAttributesInitialized();
        appearance2.onChildrenAdded();
        element7.onChildrenAdded();
        checkOut3.onChildrenAdded();
        element4.onChildrenAdded();
        final String id = "chatView";
        final Data data = new Data();
        data.onCheckOut();
        data.setElementMap(elementMap);
        if (elementMap != null && id != null) {
            elementMap.add(id, data);
        }
        checkOut.addBasicElement(data);
        data.onAttributesInitialized();
        final PropertyElement checkOut4 = PropertyElement.checkOut();
        checkOut4.setElementMap(elementMap);
        checkOut4.setName("chat");
        checkOut4.setAttribute("value");
        checkOut4.setLocal(true);
        checkOut4.setField("currentView");
        data.addBasicElement(checkOut4);
        checkOut4.onAttributesInitialized();
        checkOut4.onChildrenAdded();
        data.onChildrenAdded();
        final Container checkOut5 = Container.checkOut();
        checkOut5.setElementMap(elementMap);
        checkOut5.setPrefSize(new Dimension(400, 250));
        checkOut.addBasicElement(checkOut5);
        checkOut5.onAttributesInitialized();
        final RowLayout checkOut6 = RowLayout.checkOut();
        checkOut6.setAlign(Alignment9.NORTH);
        checkOut6.setHorizontal(false);
        checkOut5.addBasicElement(checkOut6);
        checkOut6.onAttributesInitialized();
        checkOut6.onChildrenAdded();
        final DecoratorAppearance appearance3 = checkOut5.getAppearance();
        appearance3.setElementMap(elementMap);
        checkOut5.addBasicElement(appearance3);
        appearance3.onAttributesInitialized();
        final Padding element8 = new Padding();
        element8.onCheckOut();
        element8.setElementMap(elementMap);
        element8.setInsets(new Insets(5, 5, 5, 5));
        appearance3.addBasicElement(element8);
        element8.onAttributesInitialized();
        element8.onChildrenAdded();
        appearance3.onChildrenAdded();
        final ScrollContainer element9 = new ScrollContainer();
        element9.onCheckOut();
        element9.setElementMap(elementMap);
        element9.setNonBlocking(true);
        element9.setVerticalScrollBarBehaviour(ScrollBar.ScrollBarBehaviour.FORCE_DISPLAY);
        checkOut5.addBasicElement(element9);
        element9.onAttributesInitialized();
        final String id2 = "chatTextView";
        final TextView textView = new TextView();
        textView.onCheckOut();
        textView.setElementMap(elementMap);
        if (elementMap != null && id2 != null) {
            elementMap.add(id2, textView);
        }
        textView.setEnableOnlySelectablePartInteraction(true);
        textView.setStyle("white14Bordered");
        textView.setNonBlocking(false);
        textView.setVerticalAlignment(Alignment5.SOUTH);
        final MouseClickedListener onClick = new MouseClickedListener();
        onClick.setCallBackFunc("wakfu.chat:processLinkAction(chatView)");
        textView.setOnClick(onClick);
        final MouseEnteredListener onMouseEnter = new MouseEnteredListener();
        onMouseEnter.setCallBackFunc("wakfu.chat:processLinkAction(chatView)");
        textView.setOnMouseEnter(onMouseEnter);
        final MouseExitedListener onMouseExit = new MouseExitedListener();
        onMouseExit.setCallBackFunc("wakfu.chat:onMouseExitSelectableText");
        textView.setOnMouseExit(onMouseExit);
        textView.setPrefSize(new Dimension(0, 100));
        element9.addBasicElement(textView);
        textView.onAttributesInitialized();
        final PropertyElement checkOut7 = PropertyElement.checkOut();
        checkOut7.setElementMap(elementMap);
        checkOut7.setLocal(true);
        checkOut7.setName("chat");
        checkOut7.setField("currentView/history");
        checkOut7.setAttribute("text");
        textView.addBasicElement(checkOut7);
        checkOut7.onAttributesInitialized();
        checkOut7.onChildrenAdded();
        final DecoratorAppearance appearance4 = textView.getAppearance();
        appearance4.setElementMap(elementMap);
        textView.addBasicElement(appearance4);
        appearance4.onAttributesInitialized();
        final Margin checkOut8 = Margin.checkOut();
        checkOut8.setElementMap(elementMap);
        checkOut8.setInsets(new Insets(0, 1, 0, 0));
        appearance4.addBasicElement(checkOut8);
        checkOut8.onAttributesInitialized();
        checkOut8.onChildrenAdded();
        final ColorElement checkOut9 = ColorElement.checkOut();
        checkOut9.setElementMap(elementMap);
        checkOut9.setName("text");
        checkOut9.setColor(new Color(0.0f, 0.0f, 0.0f, 1.0f));
        appearance4.addBasicElement(checkOut9);
        checkOut9.onAttributesInitialized();
        checkOut9.onChildrenAdded();
        appearance4.onChildrenAdded();
        textView.onChildrenAdded();
        element9.onChildrenAdded();
        final String id3 = "chatForm";
        final Form element10 = new Form();
        element10.onCheckOut();
        element10.setElementMap(elementMap);
        if (elementMap != null && id3 != null) {
            elementMap.add(id3, element10);
        }
        this.env.openForm(((elementMap != null) ? elementMap.getId() : "") + ".chatForm", element10);
        checkOut5.addBasicElement(element10);
        element10.onAttributesInitialized();
        final String id4 = "textEditorRenderableContainer";
        final RenderableContainer renderableContainer = new RenderableContainer();
        renderableContainer.onCheckOut();
        renderableContainer.setElementMap(elementMap);
        if (elementMap != null && id4 != null) {
            elementMap.add(id4, renderableContainer);
        }
        renderableContainer.setExpandable(false);
        element10.addBasicElement(renderableContainer);
        renderableContainer.onAttributesInitialized();
        final ItemRenderer element11 = new ItemRenderer();
        element11.onCheckOut();
        element11.setElementMap(elementMap);
        renderableContainer.addBasicElement(element11);
        element11.onAttributesInitialized();
        final DragNDropContainer element12 = new DragNDropContainer();
        element12.onCheckOut();
        element12.setElementMap(elementMap);
        final DropListener onDrop = new DropListener();
        onDrop.setCallBackFunc("wakfu.chat:addItem(chatView)");
        element12.setOnDrop(onDrop);
        element11.addBasicElement(element12);
        element12.onAttributesInitialized();
        final String id5 = "chatInput";
        final TextEditor textEditor = new TextEditor();
        textEditor.onCheckOut();
        textEditor.setElementMap(elementMap);
        if (elementMap != null && id5 != null) {
            elementMap.add(id5, textEditor);
        }
        textEditor.setAutoHorizontalScrolled(true);
        textEditor.setRestrict("[.*&[^<>]]");
        final KeyPressedListener onKeyPress = new KeyPressedListener();
        onKeyPress.setCallBackFunc("wakfu.chat:processInputKeyEvent(chatForm,chatView)");
        textEditor.setOnKeyPress(onKeyPress);
        textEditor.setMaxChars(225);
        element12.addBasicElement(textEditor);
        textEditor.onAttributesInitialized();
        final DecoratorAppearance appearance5 = textEditor.getAppearance();
        appearance5.setElementMap(elementMap);
        textEditor.addBasicElement(appearance5);
        appearance5.onAttributesInitialized();
        final Margin checkOut10 = Margin.checkOut();
        checkOut10.setElementMap(elementMap);
        checkOut10.setInsets(new Insets(5, 0, 0, 0));
        appearance5.addBasicElement(checkOut10);
        checkOut10.onAttributesInitialized();
        checkOut10.onChildrenAdded();
        appearance5.onChildrenAdded();
        final PropertyElement checkOut11 = PropertyElement.checkOut();
        checkOut11.setElementMap(elementMap);
        checkOut11.setLocal(true);
        checkOut11.setName("chat");
        checkOut11.setField("currentView/input");
        checkOut11.setAttribute("text");
        textEditor.addBasicElement(checkOut11);
        checkOut11.onAttributesInitialized();
        checkOut11.onChildrenAdded();
        textEditor.onChildrenAdded();
        element12.onChildrenAdded();
        element11.onChildrenAdded();
        renderableContainer.onChildrenAdded();
        element10.onChildrenAdded();
        this.env.closeForm(((elementMap != null) ? elementMap.getId() : "") + ".chatForm");
        checkOut5.onChildrenAdded();
        checkOut.onChildrenAdded();
        final Button element13 = new Button();
        element13.onCheckOut();
        element13.setElementMap(elementMap);
        element13.setStyle("close");
        final MouseClickedListener onClick2 = new MouseClickedListener();
        onClick2.setCallBackFunc("wakfu.moderatorChat:close");
        element13.setOnClick(onClick2);
        element13.setExpandable(false);
        window.addBasicElement(element13);
        element13.onAttributesInitialized();
        final StaticLayoutData element14 = new StaticLayoutData();
        element14.onCheckOut();
        element14.setElementMap(elementMap);
        element14.setSize(new Dimension(-2, -2));
        element14.setAlign(Alignment17.NORTH_EAST);
        element14.setXOffset(-18);
        element14.setYOffset(-16);
        element13.addBasicElement(element14);
        element14.onAttributesInitialized();
        element14.onChildrenAdded();
        element13.onChildrenAdded();
        window.onChildrenAdded();
        return window;
    }
}
