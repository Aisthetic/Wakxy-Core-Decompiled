package com.ankamagames.wakfu.client.ui.dialog;

import java.util.*;
import com.ankamagames.xulor2.core.*;
import com.ankamagames.xulor2.util.*;
import com.ankamagames.xulor2.property.*;
import com.ankamagames.xulor2.event.listener.*;
import com.ankamagames.xulor2.util.alignment.*;
import com.ankamagames.xulor2.nongraphical.*;
import com.ankamagames.xulor2.*;
import com.ankamagames.xulor2.layout.*;
import com.ankamagames.xulor2.appearance.spacing.*;
import java.awt.*;
import com.ankamagames.xulor2.core.renderer.condition.*;
import com.ankamagames.xulor2.appearance.*;
import com.ankamagames.framework.graphics.image.*;
import com.ankamagames.xulor2.component.*;

public class VerticalWorldBarDialog implements BasicElementFactory
{
    private Stack<ElementMap> elementMaps;
    private Environment env;
    
    public VerticalWorldBarDialog() {
        super();
        this.elementMaps = new Stack<ElementMap>();
    }
    
    @Override
    public BasicElement getElement(final Environment env, final ElementMap item) {
        this.env = env;
        this.elementMaps.push(item);
        final ElementMap elementMap = this.elementMaps.peek();
        final String id = "worldBar";
        final Window element = new Window();
        element.onCheckOut();
        element.setElementMap(elementMap);
        if (elementMap != null && id != null) {
            elementMap.add(id, element);
        }
        final WindowStickListener onStick = new WindowStickListener();
        onStick.setCallBackFunc("wakfu.windowStick:stickWindow");
        element.setOnStick(onStick);
        element.setPack(true);
        element.onAttributesInitialized();
        final StaticLayoutData element2 = new StaticLayoutData();
        element2.onCheckOut();
        element2.setElementMap(elementMap);
        element2.setAlign(Alignment17.NORTH);
        element2.setInitValue(true);
        element2.setXOffset(200);
        element.addBasicElement(element2);
        element2.onAttributesInitialized();
        element2.onChildrenAdded();
        final WindowMovePoint element3 = new WindowMovePoint();
        element3.onCheckOut();
        element3.setElementMap(elementMap);
        element.addBasicElement(element3);
        element3.onAttributesInitialized();
        final Container checkOut = Container.checkOut();
        checkOut.setElementMap(elementMap);
        checkOut.setPrefSize(new Dimension(0, 100));
        checkOut.setStyle("VerticalMainBackground");
        element3.addBasicElement(checkOut);
        checkOut.onAttributesInitialized();
        final Container checkOut2 = Container.checkOut();
        checkOut2.setElementMap(elementMap);
        checkOut.addBasicElement(checkOut2);
        checkOut2.onAttributesInitialized();
        final PropertyElement checkOut3 = PropertyElement.checkOut();
        checkOut3.setElementMap(elementMap);
        checkOut3.setAttribute("visible");
        checkOut3.setName("isInFight");
        checkOut2.addBasicElement(checkOut3);
        checkOut3.onAttributesInitialized();
        final ConditionResult element4 = new ConditionResult();
        element4.onCheckOut();
        element4.setElementMap(elementMap);
        checkOut3.addBasicElement(element4);
        element4.onAttributesInitialized();
        final FalseCondition element5 = new FalseCondition();
        element5.onCheckOut();
        element5.setElementMap(elementMap);
        element4.addBasicElement(element5);
        element5.onAttributesInitialized();
        element5.onChildrenAdded();
        element4.onChildrenAdded();
        checkOut3.onChildrenAdded();
        final String id2 = "fightInfoBtn";
        final Button button = new Button();
        button.onCheckOut();
        button.setElementMap(elementMap);
        if (elementMap != null && id2 != null) {
            elementMap.add(id2, button);
        }
        button.setStyle("worldBar2");
        button.setExpandable(false);
        final MouseClickedListener onClick = new MouseClickedListener();
        onClick.setCallBackFunc("wakfu.controlCenter:openCharacterSheet");
        button.setOnClick(onClick);
        final PopupDisplayListener onPopupDisplay = new PopupDisplayListener();
        onPopupDisplay.setCallBackFunc("popup(descCharacteristicsPopup)");
        button.setOnPopupDisplay(onPopupDisplay);
        final PopupHideListener onPopupHide = new PopupHideListener();
        onPopupHide.setCallBackFunc("closePopup");
        button.setOnPopupHide(onPopupHide);
        button.setPrefSize(new Dimension(33, 35));
        checkOut2.addBasicElement(button);
        button.onAttributesInitialized();
        final RowLayoutData element6 = new RowLayoutData();
        element6.onCheckOut();
        element6.setElementMap(elementMap);
        element6.setAlign(Alignment9.SOUTH);
        button.addBasicElement(element6);
        element6.onAttributesInitialized();
        element6.onChildrenAdded();
        final String id3 = "descCharacteristicsPopup";
        final PopupElement popupElement = new PopupElement();
        popupElement.onCheckOut();
        popupElement.setElementMap(elementMap);
        if (elementMap != null && id3 != null) {
            elementMap.add(id3, popupElement);
        }
        popupElement.setAlign(Alignment9.NORTH);
        popupElement.setHotSpotPosition(Alignment9.SOUTH);
        button.addBasicElement(popupElement);
        popupElement.onAttributesInitialized();
        final Container checkOut4 = Container.checkOut();
        checkOut4.setElementMap(elementMap);
        checkOut4.setPrefSize(new Dimension(10, 0));
        checkOut4.setStyle("popup");
        popupElement.addBasicElement(checkOut4);
        checkOut4.onAttributesInitialized();
        final BorderLayoutData checkOut5 = BorderLayoutData.checkOut();
        checkOut5.setElementMap(elementMap);
        checkOut5.setData(BorderLayoutData.Values.CENTER);
        checkOut4.addBasicElement(checkOut5);
        checkOut5.onAttributesInitialized();
        checkOut5.onChildrenAdded();
        final Label element7 = new Label();
        element7.onCheckOut();
        element7.setElementMap(elementMap);
        element7.setStyle("PopupInformation");
        element7.setText("%characteristics% (".replace("%characteristics%", Xulor.getInstance().getTranslatedString("characteristics")));
        checkOut4.addBasicElement(element7);
        element7.onAttributesInitialized();
        final DecoratorAppearance appearance = element7.getAppearance();
        appearance.setElementMap(elementMap);
        ((TextWidgetAppearance)appearance).setAlignment(Alignment9.WEST);
        element7.addBasicElement(appearance);
        appearance.onAttributesInitialized();
        appearance.onChildrenAdded();
        element7.onChildrenAdded();
        final Label element8 = new Label();
        element8.onCheckOut();
        element8.setElementMap(elementMap);
        element8.setStyle("PopupInformation");
        checkOut4.addBasicElement(element8);
        element8.onAttributesInitialized();
        final DecoratorAppearance appearance2 = element8.getAppearance();
        appearance2.setElementMap(elementMap);
        ((TextWidgetAppearance)appearance2).setAlignment(Alignment9.WEST);
        element8.addBasicElement(appearance2);
        appearance2.onAttributesInitialized();
        appearance2.onChildrenAdded();
        final PropertyElement checkOut6 = PropertyElement.checkOut();
        checkOut6.setElementMap(elementMap);
        checkOut6.setAttribute("text");
        checkOut6.setName("shortcutsList");
        checkOut6.setField("characterBook/key");
        element8.addBasicElement(checkOut6);
        checkOut6.onAttributesInitialized();
        checkOut6.onChildrenAdded();
        element8.onChildrenAdded();
        final Label element9 = new Label();
        element9.onCheckOut();
        element9.setElementMap(elementMap);
        element9.setStyle("PopupInformation");
        element9.setText(")");
        checkOut4.addBasicElement(element9);
        element9.onAttributesInitialized();
        final DecoratorAppearance appearance3 = element9.getAppearance();
        appearance3.setElementMap(elementMap);
        ((TextWidgetAppearance)appearance3).setAlignment(Alignment9.WEST);
        element9.addBasicElement(appearance3);
        appearance3.onAttributesInitialized();
        appearance3.onChildrenAdded();
        element9.onChildrenAdded();
        checkOut4.onChildrenAdded();
        popupElement.onChildrenAdded();
        final Image element10 = new Image();
        element10.onCheckOut();
        element10.setElementMap(elementMap);
        element10.setNonBlocking(true);
        element10.setStyle("singleCharacterIcon");
        button.addBasicElement(element10);
        element10.onAttributesInitialized();
        element10.onChildrenAdded();
        button.onChildrenAdded();
        checkOut2.onChildrenAdded();
        final String id4 = "spellButton";
        final Button button2 = new Button();
        button2.onCheckOut();
        button2.setElementMap(elementMap);
        if (elementMap != null && id4 != null) {
            elementMap.add(id4, button2);
        }
        button2.setStyle("worldBar2");
        button2.setExpandable(false);
        final MouseClickedListener onClick2 = new MouseClickedListener();
        onClick2.setCallBackFunc("wakfu.controlCenter:openSpellsPage");
        button2.setOnClick(onClick2);
        final PopupDisplayListener onPopupDisplay2 = new PopupDisplayListener();
        onPopupDisplay2.setCallBackFunc("popup(descOpenSpellsBookPopup)");
        button2.setOnPopupDisplay(onPopupDisplay2);
        final PopupHideListener onPopupHide2 = new PopupHideListener();
        onPopupHide2.setCallBackFunc("closePopup");
        button2.setOnPopupHide(onPopupHide2);
        button2.setPrefSize(new Dimension(33, 35));
        checkOut.addBasicElement(button2);
        button2.onAttributesInitialized();
        final RowLayoutData element11 = new RowLayoutData();
        element11.onCheckOut();
        element11.setElementMap(elementMap);
        element11.setAlign(Alignment9.SOUTH);
        button2.addBasicElement(element11);
        element11.onAttributesInitialized();
        element11.onChildrenAdded();
        final Image element12 = new Image();
        element12.onCheckOut();
        element12.setElementMap(elementMap);
        element12.setNonBlocking(true);
        element12.setStyle("spell");
        button2.addBasicElement(element12);
        element12.onAttributesInitialized();
        element12.onChildrenAdded();
        final String id5 = "descOpenSpellsBookPopup";
        final PopupElement popupElement2 = new PopupElement();
        popupElement2.onCheckOut();
        popupElement2.setElementMap(elementMap);
        if (elementMap != null && id5 != null) {
            elementMap.add(id5, popupElement2);
        }
        popupElement2.setAlign(Alignment9.NORTH);
        popupElement2.setHotSpotPosition(Alignment9.SOUTH);
        button2.addBasicElement(popupElement2);
        popupElement2.onAttributesInitialized();
        final Container checkOut7 = Container.checkOut();
        checkOut7.setElementMap(elementMap);
        checkOut7.setPrefSize(new Dimension(10, 0));
        checkOut7.setStyle("popup");
        popupElement2.addBasicElement(checkOut7);
        checkOut7.onAttributesInitialized();
        final BorderLayoutData checkOut8 = BorderLayoutData.checkOut();
        checkOut8.setElementMap(elementMap);
        checkOut8.setData(BorderLayoutData.Values.CENTER);
        checkOut7.addBasicElement(checkOut8);
        checkOut8.onAttributesInitialized();
        checkOut8.onChildrenAdded();
        final Label element13 = new Label();
        element13.onCheckOut();
        element13.setElementMap(elementMap);
        element13.setStyle("PopupInformation");
        element13.setText("%desc.characterBook.spellPage% (".replace("%desc.characterBook.spellPage%", Xulor.getInstance().getTranslatedString("desc.characterBook.spellPage")));
        checkOut7.addBasicElement(element13);
        element13.onAttributesInitialized();
        final DecoratorAppearance appearance4 = element13.getAppearance();
        appearance4.setElementMap(elementMap);
        ((TextWidgetAppearance)appearance4).setAlignment(Alignment9.WEST);
        element13.addBasicElement(appearance4);
        appearance4.onAttributesInitialized();
        appearance4.onChildrenAdded();
        element13.onChildrenAdded();
        final Label element14 = new Label();
        element14.onCheckOut();
        element14.setElementMap(elementMap);
        element14.setStyle("PopupInformation");
        checkOut7.addBasicElement(element14);
        element14.onAttributesInitialized();
        final DecoratorAppearance appearance5 = element14.getAppearance();
        appearance5.setElementMap(elementMap);
        ((TextWidgetAppearance)appearance5).setAlignment(Alignment9.WEST);
        element14.addBasicElement(appearance5);
        appearance5.onAttributesInitialized();
        appearance5.onChildrenAdded();
        final PropertyElement checkOut9 = PropertyElement.checkOut();
        checkOut9.setElementMap(elementMap);
        checkOut9.setAttribute("text");
        checkOut9.setName("shortcutsList");
        checkOut9.setField("spellsInventory/key");
        element14.addBasicElement(checkOut9);
        checkOut9.onAttributesInitialized();
        checkOut9.onChildrenAdded();
        element14.onChildrenAdded();
        final Label element15 = new Label();
        element15.onCheckOut();
        element15.setElementMap(elementMap);
        element15.setStyle("PopupInformation");
        element15.setText(")");
        checkOut7.addBasicElement(element15);
        element15.onAttributesInitialized();
        final DecoratorAppearance appearance6 = element15.getAppearance();
        appearance6.setElementMap(elementMap);
        ((TextWidgetAppearance)appearance6).setAlignment(Alignment9.WEST);
        element15.addBasicElement(appearance6);
        appearance6.onAttributesInitialized();
        appearance6.onChildrenAdded();
        element15.onChildrenAdded();
        checkOut7.onChildrenAdded();
        popupElement2.onChildrenAdded();
        button2.onChildrenAdded();
        final String id6 = "inventoryButton";
        final Button button3 = new Button();
        button3.onCheckOut();
        button3.setElementMap(elementMap);
        if (elementMap != null && id6 != null) {
            elementMap.add(id6, button3);
        }
        button3.setStyle("worldBar2");
        button3.setExpandable(false);
        final MouseClickedListener onClick3 = new MouseClickedListener();
        onClick3.setCallBackFunc("wakfu.controlCenter:openInventory");
        button3.setOnClick(onClick3);
        final PopupDisplayListener onPopupDisplay3 = new PopupDisplayListener();
        onPopupDisplay3.setCallBackFunc("popup(descOpenInventoryPopup)");
        button3.setOnPopupDisplay(onPopupDisplay3);
        final PopupHideListener onPopupHide3 = new PopupHideListener();
        onPopupHide3.setCallBackFunc("closePopup");
        button3.setOnPopupHide(onPopupHide3);
        button3.setPrefSize(new Dimension(33, 35));
        checkOut.addBasicElement(button3);
        button3.onAttributesInitialized();
        final RowLayoutData element16 = new RowLayoutData();
        element16.onCheckOut();
        element16.setElementMap(elementMap);
        element16.setAlign(Alignment9.SOUTH);
        button3.addBasicElement(element16);
        element16.onAttributesInitialized();
        element16.onChildrenAdded();
        final String id7 = "descOpenInventoryPopup";
        final PopupElement popupElement3 = new PopupElement();
        popupElement3.onCheckOut();
        popupElement3.setElementMap(elementMap);
        if (elementMap != null && id7 != null) {
            elementMap.add(id7, popupElement3);
        }
        popupElement3.setAlign(Alignment9.NORTH);
        popupElement3.setHotSpotPosition(Alignment9.SOUTH);
        button3.addBasicElement(popupElement3);
        popupElement3.onAttributesInitialized();
        final Container checkOut10 = Container.checkOut();
        checkOut10.setElementMap(elementMap);
        checkOut10.setPrefSize(new Dimension(10, 0));
        checkOut10.setStyle("popup");
        popupElement3.addBasicElement(checkOut10);
        checkOut10.onAttributesInitialized();
        final BorderLayoutData checkOut11 = BorderLayoutData.checkOut();
        checkOut11.setElementMap(elementMap);
        checkOut11.setData(BorderLayoutData.Values.CENTER);
        checkOut10.addBasicElement(checkOut11);
        checkOut11.onAttributesInitialized();
        checkOut11.onChildrenAdded();
        final Label element17 = new Label();
        element17.onCheckOut();
        element17.setElementMap(elementMap);
        element17.setStyle("PopupInformation");
        element17.setText("%desc.mru.openInventory% (".replace("%desc.mru.openInventory%", Xulor.getInstance().getTranslatedString("desc.mru.openInventory")));
        checkOut10.addBasicElement(element17);
        element17.onAttributesInitialized();
        final DecoratorAppearance appearance7 = element17.getAppearance();
        appearance7.setElementMap(elementMap);
        ((TextWidgetAppearance)appearance7).setAlignment(Alignment9.WEST);
        element17.addBasicElement(appearance7);
        appearance7.onAttributesInitialized();
        appearance7.onChildrenAdded();
        element17.onChildrenAdded();
        final Label element18 = new Label();
        element18.onCheckOut();
        element18.setElementMap(elementMap);
        element18.setStyle("PopupInformation");
        checkOut10.addBasicElement(element18);
        element18.onAttributesInitialized();
        final DecoratorAppearance appearance8 = element18.getAppearance();
        appearance8.setElementMap(elementMap);
        ((TextWidgetAppearance)appearance8).setAlignment(Alignment9.WEST);
        element18.addBasicElement(appearance8);
        appearance8.onAttributesInitialized();
        appearance8.onChildrenAdded();
        final PropertyElement checkOut12 = PropertyElement.checkOut();
        checkOut12.setElementMap(elementMap);
        checkOut12.setAttribute("text");
        checkOut12.setName("shortcutsList");
        checkOut12.setField("inventory/key");
        element18.addBasicElement(checkOut12);
        checkOut12.onAttributesInitialized();
        checkOut12.onChildrenAdded();
        element18.onChildrenAdded();
        final Label element19 = new Label();
        element19.onCheckOut();
        element19.setElementMap(elementMap);
        element19.setStyle("PopupInformation");
        element19.setText(")");
        checkOut10.addBasicElement(element19);
        element19.onAttributesInitialized();
        final DecoratorAppearance appearance9 = element19.getAppearance();
        appearance9.setElementMap(elementMap);
        ((TextWidgetAppearance)appearance9).setAlignment(Alignment9.WEST);
        element19.addBasicElement(appearance9);
        appearance9.onAttributesInitialized();
        appearance9.onChildrenAdded();
        element19.onChildrenAdded();
        checkOut10.onChildrenAdded();
        popupElement3.onChildrenAdded();
        final Image element20 = new Image();
        element20.onCheckOut();
        element20.setElementMap(elementMap);
        element20.setNonBlocking(true);
        element20.setStyle("bagIcon");
        button3.addBasicElement(element20);
        element20.onAttributesInitialized();
        element20.onChildrenAdded();
        button3.onChildrenAdded();
        final Container checkOut13 = Container.checkOut();
        checkOut13.setElementMap(elementMap);
        checkOut13.setExpandable(false);
        checkOut.addBasicElement(checkOut13);
        checkOut13.onAttributesInitialized();
        final PropertyElement checkOut14 = PropertyElement.checkOut();
        checkOut14.setElementMap(elementMap);
        checkOut14.setAttribute("visible");
        checkOut14.setName("isInFight");
        checkOut13.addBasicElement(checkOut14);
        checkOut14.onAttributesInitialized();
        final ConditionResult element21 = new ConditionResult();
        element21.onCheckOut();
        element21.setElementMap(elementMap);
        checkOut14.addBasicElement(element21);
        element21.onAttributesInitialized();
        final FalseCondition element22 = new FalseCondition();
        element22.onCheckOut();
        element22.setElementMap(elementMap);
        element21.addBasicElement(element22);
        element22.onAttributesInitialized();
        element22.onChildrenAdded();
        element21.onChildrenAdded();
        checkOut14.onChildrenAdded();
        final RowLayoutData element23 = new RowLayoutData();
        element23.onCheckOut();
        element23.setElementMap(elementMap);
        element23.setAlign(Alignment9.SOUTH);
        checkOut13.addBasicElement(element23);
        element23.onAttributesInitialized();
        element23.onChildrenAdded();
        final String id8 = "craftButton";
        final Button button4 = new Button();
        button4.onCheckOut();
        button4.setElementMap(elementMap);
        if (elementMap != null && id8 != null) {
            elementMap.add(id8, button4);
        }
        button4.setStyle("worldBar2");
        button4.setExpandable(false);
        final MouseClickedListener onClick4 = new MouseClickedListener();
        onClick4.setCallBackFunc("wakfu.controlCenter:openCloseCraftDialog");
        button4.setOnClick(onClick4);
        final PopupDisplayListener onPopupDisplay4 = new PopupDisplayListener();
        onPopupDisplay4.setCallBackFunc("popup(descOpenCraftPopup)");
        button4.setOnPopupDisplay(onPopupDisplay4);
        final PopupHideListener onPopupHide4 = new PopupHideListener();
        onPopupHide4.setCallBackFunc("closePopup");
        button4.setOnPopupHide(onPopupHide4);
        button4.setPrefSize(new Dimension(33, 35));
        checkOut13.addBasicElement(button4);
        button4.onAttributesInitialized();
        final RowLayoutData element24 = new RowLayoutData();
        element24.onCheckOut();
        element24.setElementMap(elementMap);
        element24.setAlign(Alignment9.CENTER);
        button4.addBasicElement(element24);
        element24.onAttributesInitialized();
        element24.onChildrenAdded();
        final String id9 = "descOpenCraftPopup";
        final PopupElement popupElement4 = new PopupElement();
        popupElement4.onCheckOut();
        popupElement4.setElementMap(elementMap);
        if (elementMap != null && id9 != null) {
            elementMap.add(id9, popupElement4);
        }
        popupElement4.setAlign(Alignment9.NORTH);
        popupElement4.setHotSpotPosition(Alignment9.SOUTH);
        button4.addBasicElement(popupElement4);
        popupElement4.onAttributesInitialized();
        final Container checkOut15 = Container.checkOut();
        checkOut15.setElementMap(elementMap);
        checkOut15.setPrefSize(new Dimension(10, 0));
        checkOut15.setStyle("popup");
        popupElement4.addBasicElement(checkOut15);
        checkOut15.onAttributesInitialized();
        final BorderLayoutData checkOut16 = BorderLayoutData.checkOut();
        checkOut16.setElementMap(elementMap);
        checkOut16.setData(BorderLayoutData.Values.CENTER);
        checkOut15.addBasicElement(checkOut16);
        checkOut16.onAttributesInitialized();
        checkOut16.onChildrenAdded();
        final Label element25 = new Label();
        element25.onCheckOut();
        element25.setElementMap(elementMap);
        element25.setStyle("PopupInformation");
        element25.setText("%desc.characterBook.craftPage% (".replace("%desc.characterBook.craftPage%", Xulor.getInstance().getTranslatedString("desc.characterBook.craftPage")));
        checkOut15.addBasicElement(element25);
        element25.onAttributesInitialized();
        final DecoratorAppearance appearance10 = element25.getAppearance();
        appearance10.setElementMap(elementMap);
        ((TextWidgetAppearance)appearance10).setAlignment(Alignment9.WEST);
        element25.addBasicElement(appearance10);
        appearance10.onAttributesInitialized();
        appearance10.onChildrenAdded();
        element25.onChildrenAdded();
        final Label element26 = new Label();
        element26.onCheckOut();
        element26.setElementMap(elementMap);
        element26.setStyle("PopupInformation");
        checkOut15.addBasicElement(element26);
        element26.onAttributesInitialized();
        this.method0(element26);
        this.method1(element26);
        element26.onChildrenAdded();
        this.method2(checkOut15);
        checkOut15.onChildrenAdded();
        popupElement4.onChildrenAdded();
        this.method3(button4);
        button4.onChildrenAdded();
        checkOut13.onChildrenAdded();
        this.method4(checkOut);
        this.method5(checkOut);
        this.method10(checkOut);
        this.method16(checkOut);
        this.method17(checkOut);
        this.method18(checkOut);
        this.method19(checkOut);
        this.method20(checkOut);
        checkOut.onChildrenAdded();
        element3.onChildrenAdded();
        element.onChildrenAdded();
        return element;
    }
    
    public BasicElement method0(final BasicElement basicElement) {
        final ElementMap elementMap = this.elementMaps.peek();
        final DecoratorAppearance appearance = ((Widget)basicElement).getAppearance();
        appearance.setElementMap(elementMap);
        ((TextWidgetAppearance)appearance).setAlignment(Alignment9.WEST);
        basicElement.addBasicElement(appearance);
        appearance.onAttributesInitialized();
        appearance.onChildrenAdded();
        return appearance;
    }
    
    public BasicElement method1(final BasicElement basicElement) {
        final ElementMap elementMap = this.elementMaps.peek();
        final PropertyElement checkOut = PropertyElement.checkOut();
        checkOut.setElementMap(elementMap);
        checkOut.setAttribute("text");
        checkOut.setName("shortcutsList");
        checkOut.setField("craft/key");
        basicElement.addBasicElement(checkOut);
        checkOut.onAttributesInitialized();
        checkOut.onChildrenAdded();
        return checkOut;
    }
    
    public BasicElement method2(final BasicElement basicElement) {
        final ElementMap elementMap = this.elementMaps.peek();
        final Label element = new Label();
        element.onCheckOut();
        element.setElementMap(elementMap);
        element.setStyle("PopupInformation");
        element.setText(")");
        basicElement.addBasicElement(element);
        element.onAttributesInitialized();
        final DecoratorAppearance appearance = element.getAppearance();
        appearance.setElementMap(elementMap);
        ((TextWidgetAppearance)appearance).setAlignment(Alignment9.WEST);
        element.addBasicElement(appearance);
        appearance.onAttributesInitialized();
        appearance.onChildrenAdded();
        element.onChildrenAdded();
        return element;
    }
    
    public BasicElement method3(final BasicElement basicElement) {
        final ElementMap elementMap = this.elementMaps.peek();
        final Image element = new Image();
        element.onCheckOut();
        element.setElementMap(elementMap);
        element.setNonBlocking(true);
        element.setStyle("optionsIcon");
        basicElement.addBasicElement(element);
        element.onAttributesInitialized();
        element.onChildrenAdded();
        return element;
    }
    
    public BasicElement method4(final BasicElement basicElement) {
        final ElementMap elementMap = this.elementMaps.peek();
        final Container checkOut = Container.checkOut();
        checkOut.setElementMap(elementMap);
        basicElement.addBasicElement(checkOut);
        checkOut.onAttributesInitialized();
        final RowLayoutData element = new RowLayoutData();
        element.onCheckOut();
        element.setElementMap(elementMap);
        element.setAlign(Alignment9.SOUTH);
        checkOut.addBasicElement(element);
        element.onAttributesInitialized();
        element.onChildrenAdded();
        final String id = "companionsButton";
        final Button button = new Button();
        button.onCheckOut();
        button.setElementMap(elementMap);
        if (elementMap != null && id != null) {
            elementMap.add(id, button);
        }
        button.setStyle("worldBar2");
        button.setExpandable(false);
        final MouseClickedListener onClick = new MouseClickedListener();
        onClick.setCallBackFunc("wakfu.controlCenter:openCompanionsManagement");
        button.setOnClick(onClick);
        final PopupDisplayListener onPopupDisplay = new PopupDisplayListener();
        onPopupDisplay.setCallBackFunc("popup(descOpenCompanionsManagementPopup)");
        button.setOnPopupDisplay(onPopupDisplay);
        final PopupHideListener onPopupHide = new PopupHideListener();
        onPopupHide.setCallBackFunc("closePopup");
        button.setOnPopupHide(onPopupHide);
        button.setPrefSize(new Dimension(33, 35));
        checkOut.addBasicElement(button);
        button.onAttributesInitialized();
        final Image element2 = new Image();
        element2.onCheckOut();
        element2.setElementMap(elementMap);
        element2.setNonBlocking(true);
        element2.setStyle("CompanionsManagement");
        button.addBasicElement(element2);
        element2.onAttributesInitialized();
        element2.onChildrenAdded();
        final String id2 = "descOpenCompanionsManagementPopup";
        final PopupElement popupElement = new PopupElement();
        popupElement.onCheckOut();
        popupElement.setElementMap(elementMap);
        if (elementMap != null && id2 != null) {
            elementMap.add(id2, popupElement);
        }
        popupElement.setAlign(Alignment9.NORTH);
        popupElement.setHotSpotPosition(Alignment9.SOUTH);
        button.addBasicElement(popupElement);
        popupElement.onAttributesInitialized();
        final Container checkOut2 = Container.checkOut();
        checkOut2.setElementMap(elementMap);
        checkOut2.setPrefSize(new Dimension(10, 0));
        checkOut2.setStyle("popup");
        popupElement.addBasicElement(checkOut2);
        checkOut2.onAttributesInitialized();
        final BorderLayoutData checkOut3 = BorderLayoutData.checkOut();
        checkOut3.setElementMap(elementMap);
        checkOut3.setData(BorderLayoutData.Values.CENTER);
        checkOut2.addBasicElement(checkOut3);
        checkOut3.onAttributesInitialized();
        checkOut3.onChildrenAdded();
        final Label element3 = new Label();
        element3.onCheckOut();
        element3.setElementMap(elementMap);
        element3.setStyle("PopupInformation");
        element3.setText("%companionsManagement% (".replace("%companionsManagement%", Xulor.getInstance().getTranslatedString("companionsManagement")));
        checkOut2.addBasicElement(element3);
        element3.onAttributesInitialized();
        final DecoratorAppearance appearance = element3.getAppearance();
        appearance.setElementMap(elementMap);
        ((TextWidgetAppearance)appearance).setAlignment(Alignment9.WEST);
        element3.addBasicElement(appearance);
        appearance.onAttributesInitialized();
        appearance.onChildrenAdded();
        element3.onChildrenAdded();
        final Label element4 = new Label();
        element4.onCheckOut();
        element4.setElementMap(elementMap);
        element4.setStyle("PopupInformation");
        checkOut2.addBasicElement(element4);
        element4.onAttributesInitialized();
        final DecoratorAppearance appearance2 = element4.getAppearance();
        appearance2.setElementMap(elementMap);
        ((TextWidgetAppearance)appearance2).setAlignment(Alignment9.WEST);
        element4.addBasicElement(appearance2);
        appearance2.onAttributesInitialized();
        appearance2.onChildrenAdded();
        final PropertyElement checkOut4 = PropertyElement.checkOut();
        checkOut4.setElementMap(elementMap);
        checkOut4.setAttribute("text");
        checkOut4.setName("shortcutsList");
        checkOut4.setField("companionManagement/key");
        element4.addBasicElement(checkOut4);
        checkOut4.onAttributesInitialized();
        checkOut4.onChildrenAdded();
        element4.onChildrenAdded();
        final Label element5 = new Label();
        element5.onCheckOut();
        element5.setElementMap(elementMap);
        element5.setStyle("PopupInformation");
        element5.setText(")");
        checkOut2.addBasicElement(element5);
        element5.onAttributesInitialized();
        final DecoratorAppearance appearance3 = element5.getAppearance();
        appearance3.setElementMap(elementMap);
        ((TextWidgetAppearance)appearance3).setAlignment(Alignment9.WEST);
        element5.addBasicElement(appearance3);
        appearance3.onAttributesInitialized();
        appearance3.onChildrenAdded();
        element5.onChildrenAdded();
        checkOut2.onChildrenAdded();
        popupElement.onChildrenAdded();
        button.onChildrenAdded();
        checkOut.onChildrenAdded();
        return checkOut;
    }
    
    public BasicElement method5(final BasicElement basicElement) {
        final ElementMap elementMap = this.elementMaps.peek();
        final String id = "communityDrawer";
        final Drawer drawer = new Drawer();
        drawer.onCheckOut();
        drawer.setElementMap(elementMap);
        if (elementMap != null && id != null) {
            elementMap.add(id, drawer);
        }
        drawer.setExpandable(false);
        drawer.setAlign(Alignment9.EAST);
        drawer.setHotSpotPosition(Alignment9.WEST);
        basicElement.addBasicElement(drawer);
        drawer.onAttributesInitialized();
        final PropertyElement checkOut = PropertyElement.checkOut();
        checkOut.setElementMap(elementMap);
        checkOut.setAttribute("visible");
        checkOut.setName("isInFight");
        drawer.addBasicElement(checkOut);
        checkOut.onAttributesInitialized();
        final ConditionResult element = new ConditionResult();
        element.onCheckOut();
        element.setElementMap(elementMap);
        checkOut.addBasicElement(element);
        element.onAttributesInitialized();
        final FalseCondition element2 = new FalseCondition();
        element2.onCheckOut();
        element2.setElementMap(elementMap);
        element.addBasicElement(element2);
        element2.onAttributesInitialized();
        element2.onChildrenAdded();
        element.onChildrenAdded();
        checkOut.onChildrenAdded();
        final RowLayoutData element3 = new RowLayoutData();
        element3.onCheckOut();
        element3.setElementMap(elementMap);
        element3.setAlign(Alignment9.SOUTH);
        drawer.addBasicElement(element3);
        element3.onAttributesInitialized();
        element3.onChildrenAdded();
        final Container checkOut2 = Container.checkOut();
        checkOut2.setElementMap(elementMap);
        checkOut2.setThemeElementName("staticContainer");
        drawer.addBasicElement(checkOut2);
        checkOut2.onAttributesInitialized();
        final String id2 = "communityButton";
        final Button button = new Button();
        button.onCheckOut();
        button.setElementMap(elementMap);
        if (elementMap != null && id2 != null) {
            elementMap.add(id2, button);
        }
        button.setStyle("worldBar2");
        button.setExpandable(false);
        final MouseClickedListener onClick = new MouseClickedListener();
        onClick.setCallBackFunc("switchDrawer(communityDrawer)");
        button.setOnClick(onClick);
        final PopupDisplayListener onPopupDisplay = new PopupDisplayListener();
        onPopupDisplay.setCallBackFunc("popup(descOpenCommunityBarPopup)");
        button.setOnPopupDisplay(onPopupDisplay);
        final PopupHideListener onPopupHide = new PopupHideListener();
        onPopupHide.setCallBackFunc("closePopup");
        button.setOnPopupHide(onPopupHide);
        button.setPrefSize(new Dimension(33, 35));
        checkOut2.addBasicElement(button);
        button.onAttributesInitialized();
        final RowLayoutData element4 = new RowLayoutData();
        element4.onCheckOut();
        element4.setElementMap(elementMap);
        element4.setAlign(Alignment9.CENTER);
        button.addBasicElement(element4);
        element4.onAttributesInitialized();
        element4.onChildrenAdded();
        final String id3 = "descOpenCommunityBarPopup";
        final PopupElement popupElement = new PopupElement();
        popupElement.onCheckOut();
        popupElement.setElementMap(elementMap);
        if (elementMap != null && id3 != null) {
            elementMap.add(id3, popupElement);
        }
        popupElement.setAlign(Alignment9.NORTH);
        popupElement.setHotSpotPosition(Alignment9.SOUTH);
        button.addBasicElement(popupElement);
        popupElement.onAttributesInitialized();
        final Container checkOut3 = Container.checkOut();
        checkOut3.setElementMap(elementMap);
        checkOut3.setPrefSize(new Dimension(10, 0));
        checkOut3.setStyle("popup");
        popupElement.addBasicElement(checkOut3);
        checkOut3.onAttributesInitialized();
        final BorderLayoutData checkOut4 = BorderLayoutData.checkOut();
        checkOut4.setElementMap(elementMap);
        checkOut4.setData(BorderLayoutData.Values.CENTER);
        checkOut3.addBasicElement(checkOut4);
        checkOut4.onAttributesInitialized();
        checkOut4.onChildrenAdded();
        final Label element5 = new Label();
        element5.onCheckOut();
        element5.setElementMap(elementMap);
        element5.setStyle("PopupInformation");
        element5.setText("%desc.community%".replace("%desc.community%", Xulor.getInstance().getTranslatedString("desc.community")));
        checkOut3.addBasicElement(element5);
        element5.onAttributesInitialized();
        final DecoratorAppearance appearance = element5.getAppearance();
        appearance.setElementMap(elementMap);
        ((TextWidgetAppearance)appearance).setAlignment(Alignment9.WEST);
        element5.addBasicElement(appearance);
        appearance.onAttributesInitialized();
        appearance.onChildrenAdded();
        element5.onChildrenAdded();
        checkOut3.onChildrenAdded();
        popupElement.onChildrenAdded();
        final Image element6 = new Image();
        element6.onCheckOut();
        element6.setElementMap(elementMap);
        element6.setNonBlocking(true);
        element6.setStyle("contactsIcon");
        button.addBasicElement(element6);
        element6.onAttributesInitialized();
        element6.onChildrenAdded();
        button.onChildrenAdded();
        checkOut2.onChildrenAdded();
        final Container checkOut5 = Container.checkOut();
        checkOut5.setElementMap(elementMap);
        checkOut5.setStyle("MainBackground");
        checkOut5.setThemeElementName("popupContainer");
        drawer.addBasicElement(checkOut5);
        checkOut5.onAttributesInitialized();
        final RowLayout checkOut6 = RowLayout.checkOut();
        checkOut6.setHorizontal(false);
        checkOut5.addBasicElement(checkOut6);
        checkOut6.onAttributesInitialized();
        checkOut6.onChildrenAdded();
        final DecoratorAppearance appearance2 = checkOut5.getAppearance();
        appearance2.setElementMap(elementMap);
        checkOut5.addBasicElement(appearance2);
        appearance2.onAttributesInitialized();
        final Padding element7 = new Padding();
        element7.onCheckOut();
        element7.setElementMap(elementMap);
        element7.setInsets(new Insets(5, 5, 5, 5));
        appearance2.addBasicElement(element7);
        element7.onAttributesInitialized();
        element7.onChildrenAdded();
        appearance2.onChildrenAdded();
        final Button element8 = new Button();
        element8.onCheckOut();
        element8.setElementMap(elementMap);
        element8.setStyle("worldBar2");
        element8.setExpandable(false);
        final MouseClickedListener onClick2 = new MouseClickedListener();
        onClick2.setCallBackFunc("wakfu:partySearch");
        element8.setOnClick(onClick2);
        final PopupDisplayListener onPopupDisplay2 = new PopupDisplayListener();
        onPopupDisplay2.setCallBackFunc("popup(partySearchPopup)");
        element8.setOnPopupDisplay(onPopupDisplay2);
        final PopupHideListener onPopupHide2 = new PopupHideListener();
        onPopupHide2.setCallBackFunc("closePopup");
        element8.setOnPopupHide(onPopupHide2);
        element8.setPrefSize(new Dimension(33, 35));
        checkOut5.addBasicElement(element8);
        element8.onAttributesInitialized();
        final RowLayoutData element9 = new RowLayoutData();
        element9.onCheckOut();
        element9.setElementMap(elementMap);
        element9.setAlign(Alignment9.CENTER);
        element8.addBasicElement(element9);
        element9.onAttributesInitialized();
        element9.onChildrenAdded();
        final String id4 = "partySearchPopup";
        final PopupElement popupElement2 = new PopupElement();
        popupElement2.onCheckOut();
        popupElement2.setElementMap(elementMap);
        if (elementMap != null && id4 != null) {
            elementMap.add(id4, popupElement2);
        }
        popupElement2.setAlign(Alignment9.EAST);
        popupElement2.setHotSpotPosition(Alignment9.WEST);
        element8.addBasicElement(popupElement2);
        popupElement2.onAttributesInitialized();
        final Container checkOut7 = Container.checkOut();
        checkOut7.setElementMap(elementMap);
        checkOut7.setPrefSize(new Dimension(10, 0));
        checkOut7.setStyle("popup");
        popupElement2.addBasicElement(checkOut7);
        checkOut7.onAttributesInitialized();
        final BorderLayoutData checkOut8 = BorderLayoutData.checkOut();
        checkOut8.setElementMap(elementMap);
        checkOut8.setData(BorderLayoutData.Values.CENTER);
        checkOut7.addBasicElement(checkOut8);
        checkOut8.onAttributesInitialized();
        checkOut8.onChildrenAdded();
        final Label element10 = new Label();
        element10.onCheckOut();
        element10.setElementMap(elementMap);
        element10.setStyle("PopupInformation");
        element10.setText("%partySearchRegistration.title% (".replace("%partySearchRegistration.title%", Xulor.getInstance().getTranslatedString("partySearchRegistration.title")));
        checkOut7.addBasicElement(element10);
        element10.onAttributesInitialized();
        final DecoratorAppearance appearance3 = element10.getAppearance();
        appearance3.setElementMap(elementMap);
        ((TextWidgetAppearance)appearance3).setAlignment(Alignment9.WEST);
        element10.addBasicElement(appearance3);
        appearance3.onAttributesInitialized();
        appearance3.onChildrenAdded();
        element10.onChildrenAdded();
        final Label element11 = new Label();
        element11.onCheckOut();
        element11.setElementMap(elementMap);
        element11.setStyle("PopupInformation");
        checkOut7.addBasicElement(element11);
        element11.onAttributesInitialized();
        final DecoratorAppearance appearance4 = element11.getAppearance();
        appearance4.setElementMap(elementMap);
        ((TextWidgetAppearance)appearance4).setAlignment(Alignment9.WEST);
        element11.addBasicElement(appearance4);
        appearance4.onAttributesInitialized();
        appearance4.onChildrenAdded();
        final PropertyElement checkOut9 = PropertyElement.checkOut();
        checkOut9.setElementMap(elementMap);
        checkOut9.setAttribute("text");
        checkOut9.setName("shortcutsList");
        checkOut9.setField("partySearch/key");
        element11.addBasicElement(checkOut9);
        checkOut9.onAttributesInitialized();
        checkOut9.onChildrenAdded();
        element11.onChildrenAdded();
        final Label element12 = new Label();
        element12.onCheckOut();
        element12.setElementMap(elementMap);
        element12.setStyle("PopupInformation");
        element12.setText(")");
        checkOut7.addBasicElement(element12);
        element12.onAttributesInitialized();
        final DecoratorAppearance appearance5 = element12.getAppearance();
        appearance5.setElementMap(elementMap);
        ((TextWidgetAppearance)appearance5).setAlignment(Alignment9.WEST);
        element12.addBasicElement(appearance5);
        appearance5.onAttributesInitialized();
        appearance5.onChildrenAdded();
        element12.onChildrenAdded();
        checkOut7.onChildrenAdded();
        popupElement2.onChildrenAdded();
        final Image element13 = new Image();
        element13.onCheckOut();
        element13.setElementMap(elementMap);
        element13.setNonBlocking(true);
        element13.setStyle("contactsIcon");
        element8.addBasicElement(element13);
        element13.onAttributesInitialized();
        element13.onChildrenAdded();
        element8.onChildrenAdded();
        final Button element14 = new Button();
        element14.onCheckOut();
        element14.setElementMap(elementMap);
        element14.setStyle("worldBar2");
        element14.setExpandable(false);
        final MouseClickedListener onClick3 = new MouseClickedListener();
        onClick3.setCallBackFunc("wakfu.controlCenter:openClosePassport");
        element14.setOnClick(onClick3);
        final PopupDisplayListener onPopupDisplay3 = new PopupDisplayListener();
        onPopupDisplay3.setCallBackFunc("popup(descPassportPopup)");
        element14.setOnPopupDisplay(onPopupDisplay3);
        final PopupHideListener onPopupHide3 = new PopupHideListener();
        onPopupHide3.setCallBackFunc("closePopup");
        element14.setOnPopupHide(onPopupHide3);
        element14.setPrefSize(new Dimension(33, 35));
        checkOut5.addBasicElement(element14);
        element14.onAttributesInitialized();
        final RowLayoutData element15 = new RowLayoutData();
        element15.onCheckOut();
        element15.setElementMap(elementMap);
        element15.setAlign(Alignment9.CENTER);
        element14.addBasicElement(element15);
        element15.onAttributesInitialized();
        element15.onChildrenAdded();
        final PropertyElement checkOut10 = PropertyElement.checkOut();
        checkOut10.setElementMap(elementMap);
        checkOut10.setAttribute("enabled");
        checkOut10.setName("localPlayer");
        checkOut10.setField("hasNation");
        element14.addBasicElement(checkOut10);
        checkOut10.onAttributesInitialized();
        checkOut10.onChildrenAdded();
        final String id5 = "descPassportPopup";
        final PopupElement popupElement3 = new PopupElement();
        popupElement3.onCheckOut();
        popupElement3.setElementMap(elementMap);
        if (elementMap != null && id5 != null) {
            elementMap.add(id5, popupElement3);
        }
        popupElement3.setAlign(Alignment9.EAST);
        popupElement3.setHotSpotPosition(Alignment9.WEST);
        element14.addBasicElement(popupElement3);
        popupElement3.onAttributesInitialized();
        final Container checkOut11 = Container.checkOut();
        checkOut11.setElementMap(elementMap);
        checkOut11.setPrefSize(new Dimension(10, 0));
        checkOut11.setStyle("popup");
        popupElement3.addBasicElement(checkOut11);
        checkOut11.onAttributesInitialized();
        final BorderLayoutData checkOut12 = BorderLayoutData.checkOut();
        checkOut12.setElementMap(elementMap);
        checkOut12.setData(BorderLayoutData.Values.CENTER);
        checkOut11.addBasicElement(checkOut12);
        checkOut12.onAttributesInitialized();
        checkOut12.onChildrenAdded();
        final Label element16 = new Label();
        element16.onCheckOut();
        element16.setElementMap(elementMap);
        element16.setStyle("PopupInformation");
        element16.setText("%passport% (".replace("%passport%", Xulor.getInstance().getTranslatedString("passport")));
        checkOut11.addBasicElement(element16);
        element16.onAttributesInitialized();
        final DecoratorAppearance appearance6 = element16.getAppearance();
        appearance6.setElementMap(elementMap);
        ((TextWidgetAppearance)appearance6).setAlignment(Alignment9.WEST);
        element16.addBasicElement(appearance6);
        appearance6.onAttributesInitialized();
        appearance6.onChildrenAdded();
        element16.onChildrenAdded();
        final Label element17 = new Label();
        element17.onCheckOut();
        element17.setElementMap(elementMap);
        element17.setStyle("PopupInformation");
        checkOut11.addBasicElement(element17);
        element17.onAttributesInitialized();
        final DecoratorAppearance appearance7 = element17.getAppearance();
        appearance7.setElementMap(elementMap);
        ((TextWidgetAppearance)appearance7).setAlignment(Alignment9.WEST);
        element17.addBasicElement(appearance7);
        appearance7.onAttributesInitialized();
        appearance7.onChildrenAdded();
        final PropertyElement checkOut13 = PropertyElement.checkOut();
        checkOut13.setElementMap(elementMap);
        checkOut13.setAttribute("text");
        checkOut13.setName("shortcutsList");
        checkOut13.setField("passport/key");
        element17.addBasicElement(checkOut13);
        checkOut13.onAttributesInitialized();
        checkOut13.onChildrenAdded();
        element17.onChildrenAdded();
        final Label element18 = new Label();
        element18.onCheckOut();
        element18.setElementMap(elementMap);
        element18.setStyle("PopupInformation");
        element18.setText(")");
        checkOut11.addBasicElement(element18);
        element18.onAttributesInitialized();
        final DecoratorAppearance appearance8 = element18.getAppearance();
        appearance8.setElementMap(elementMap);
        ((TextWidgetAppearance)appearance8).setAlignment(Alignment9.WEST);
        element18.addBasicElement(appearance8);
        appearance8.onAttributesInitialized();
        appearance8.onChildrenAdded();
        element18.onChildrenAdded();
        checkOut11.onChildrenAdded();
        popupElement3.onChildrenAdded();
        final Image element19 = new Image();
        element19.onCheckOut();
        element19.setElementMap(elementMap);
        element19.setNonBlocking(true);
        element19.setStyle("characterBookIcon");
        element14.addBasicElement(element19);
        element19.onAttributesInitialized();
        final PropertyElement checkOut14 = PropertyElement.checkOut();
        checkOut14.setElementMap(elementMap);
        checkOut14.setAttribute("modulationColor");
        checkOut14.setName("localPlayer");
        checkOut14.setField("hasNation");
        element19.addBasicElement(checkOut14);
        checkOut14.onAttributesInitialized();
        final ConditionResult element20 = new ConditionResult();
        element20.onCheckOut();
        element20.setElementMap(elementMap);
        element20.setValue("1,1,1");
        element20.setElseValue("1,1,1,0.5");
        checkOut14.addBasicElement(element20);
        element20.onAttributesInitialized();
        final TrueCondition element21 = new TrueCondition();
        element21.onCheckOut();
        element21.setElementMap(elementMap);
        element20.addBasicElement(element21);
        element21.onAttributesInitialized();
        element21.onChildrenAdded();
        element20.onChildrenAdded();
        checkOut14.onChildrenAdded();
        element19.onChildrenAdded();
        element14.onChildrenAdded();
        final String id6 = "contactListButton";
        final Button button2 = new Button();
        button2.onCheckOut();
        button2.setElementMap(elementMap);
        if (elementMap != null && id6 != null) {
            elementMap.add(id6, button2);
        }
        button2.setStyle("worldBar2");
        button2.setExpandable(false);
        final MouseClickedListener onClick4 = new MouseClickedListener();
        onClick4.setCallBackFunc("wakfu.chat:openCloseContactList");
        button2.setOnClick(onClick4);
        final PopupDisplayListener onPopupDisplay4 = new PopupDisplayListener();
        onPopupDisplay4.setCallBackFunc("popup(descContactListPopup)");
        button2.setOnPopupDisplay(onPopupDisplay4);
        final PopupHideListener onPopupHide4 = new PopupHideListener();
        onPopupHide4.setCallBackFunc("closePopup");
        button2.setOnPopupHide(onPopupHide4);
        button2.setPrefSize(new Dimension(33, 35));
        checkOut5.addBasicElement(button2);
        button2.onAttributesInitialized();
        final RowLayoutData element22 = new RowLayoutData();
        element22.onCheckOut();
        element22.setElementMap(elementMap);
        element22.setAlign(Alignment9.CENTER);
        button2.addBasicElement(element22);
        element22.onAttributesInitialized();
        element22.onChildrenAdded();
        final String id7 = "descContactListPopup";
        final PopupElement popupElement4 = new PopupElement();
        popupElement4.onCheckOut();
        popupElement4.setElementMap(elementMap);
        if (elementMap != null && id7 != null) {
            elementMap.add(id7, popupElement4);
        }
        popupElement4.setAlign(Alignment9.EAST);
        popupElement4.setHotSpotPosition(Alignment9.WEST);
        button2.addBasicElement(popupElement4);
        popupElement4.onAttributesInitialized();
        final Container checkOut15 = Container.checkOut();
        checkOut15.setElementMap(elementMap);
        checkOut15.setPrefSize(new Dimension(10, 0));
        checkOut15.setStyle("popup");
        popupElement4.addBasicElement(checkOut15);
        checkOut15.onAttributesInitialized();
        final BorderLayoutData checkOut16 = BorderLayoutData.checkOut();
        checkOut16.setElementMap(elementMap);
        checkOut16.setData(BorderLayoutData.Values.CENTER);
        checkOut15.addBasicElement(checkOut16);
        checkOut16.onAttributesInitialized();
        checkOut16.onChildrenAdded();
        final Label element23 = new Label();
        element23.onCheckOut();
        element23.setElementMap(elementMap);
        element23.setStyle("PopupInformation");
        element23.setText("%chat.contactList% (".replace("%chat.contactList%", Xulor.getInstance().getTranslatedString("chat.contactList")));
        checkOut15.addBasicElement(element23);
        element23.onAttributesInitialized();
        final DecoratorAppearance appearance9 = element23.getAppearance();
        appearance9.setElementMap(elementMap);
        ((TextWidgetAppearance)appearance9).setAlignment(Alignment9.WEST);
        element23.addBasicElement(appearance9);
        appearance9.onAttributesInitialized();
        appearance9.onChildrenAdded();
        element23.onChildrenAdded();
        final Label element24 = new Label();
        element24.onCheckOut();
        element24.setElementMap(elementMap);
        element24.setStyle("PopupInformation");
        checkOut15.addBasicElement(element24);
        element24.onAttributesInitialized();
        final DecoratorAppearance appearance10 = element24.getAppearance();
        appearance10.setElementMap(elementMap);
        ((TextWidgetAppearance)appearance10).setAlignment(Alignment9.WEST);
        element24.addBasicElement(appearance10);
        appearance10.onAttributesInitialized();
        appearance10.onChildrenAdded();
        final PropertyElement checkOut17 = PropertyElement.checkOut();
        checkOut17.setElementMap(elementMap);
        checkOut17.setAttribute("text");
        checkOut17.setName("shortcutsList");
        checkOut17.setField("contactList/key");
        element24.addBasicElement(checkOut17);
        checkOut17.onAttributesInitialized();
        checkOut17.onChildrenAdded();
        element24.onChildrenAdded();
        final Label element25 = new Label();
        element25.onCheckOut();
        element25.setElementMap(elementMap);
        element25.setStyle("PopupInformation");
        element25.setText(")");
        checkOut15.addBasicElement(element25);
        element25.onAttributesInitialized();
        final DecoratorAppearance appearance11 = element25.getAppearance();
        appearance11.setElementMap(elementMap);
        ((TextWidgetAppearance)appearance11).setAlignment(Alignment9.WEST);
        element25.addBasicElement(appearance11);
        appearance11.onAttributesInitialized();
        appearance11.onChildrenAdded();
        element25.onChildrenAdded();
        checkOut15.onChildrenAdded();
        popupElement4.onChildrenAdded();
        this.method6(button2);
        button2.onChildrenAdded();
        this.method7(checkOut5);
        this.method8(checkOut5);
        this.method9(checkOut5);
        checkOut5.onChildrenAdded();
        drawer.onChildrenAdded();
        return drawer;
    }
    
    public BasicElement method6(final BasicElement basicElement) {
        final ElementMap elementMap = this.elementMaps.peek();
        final Image element = new Image();
        element.onCheckOut();
        element.setElementMap(elementMap);
        element.setNonBlocking(true);
        element.setStyle("Biography");
        basicElement.addBasicElement(element);
        element.onAttributesInitialized();
        element.onChildrenAdded();
        return element;
    }
    
    public BasicElement method7(final BasicElement basicElement) {
        final ElementMap elementMap = this.elementMaps.peek();
        final String id = "guildButton";
        final Button button = new Button();
        button.onCheckOut();
        button.setElementMap(elementMap);
        if (elementMap != null && id != null) {
            elementMap.add(id, button);
        }
        button.setStyle("worldBar2");
        button.setExpandable(false);
        final MouseClickedListener onClick = new MouseClickedListener();
        onClick.setCallBackFunc("wakfu.controlCenter:openCloseGuildManagement");
        button.setOnClick(onClick);
        final PopupDisplayListener onPopupDisplay = new PopupDisplayListener();
        onPopupDisplay.setCallBackFunc("popup(descGuildPopup)");
        button.setOnPopupDisplay(onPopupDisplay);
        final PopupHideListener onPopupHide = new PopupHideListener();
        onPopupHide.setCallBackFunc("closePopup");
        button.setOnPopupHide(onPopupHide);
        button.setPrefSize(new Dimension(33, 35));
        basicElement.addBasicElement(button);
        button.onAttributesInitialized();
        final RowLayoutData element = new RowLayoutData();
        element.onCheckOut();
        element.setElementMap(elementMap);
        element.setAlign(Alignment9.CENTER);
        button.addBasicElement(element);
        element.onAttributesInitialized();
        element.onChildrenAdded();
        final PropertyElement checkOut = PropertyElement.checkOut();
        checkOut.setElementMap(elementMap);
        checkOut.setName("localPlayer");
        checkOut.setAttribute("enabled");
        checkOut.setField("hasGuild");
        button.addBasicElement(checkOut);
        checkOut.onAttributesInitialized();
        final ConditionResult element2 = new ConditionResult();
        element2.onCheckOut();
        element2.setElementMap(elementMap);
        checkOut.addBasicElement(element2);
        element2.onAttributesInitialized();
        final TrueCondition element3 = new TrueCondition();
        element3.onCheckOut();
        element3.setElementMap(elementMap);
        element2.addBasicElement(element3);
        element3.onAttributesInitialized();
        element3.onChildrenAdded();
        element2.onChildrenAdded();
        checkOut.onChildrenAdded();
        final String id2 = "descGuildPopup";
        final PopupElement popupElement = new PopupElement();
        popupElement.onCheckOut();
        popupElement.setElementMap(elementMap);
        if (elementMap != null && id2 != null) {
            elementMap.add(id2, popupElement);
        }
        popupElement.setAlign(Alignment9.EAST);
        popupElement.setHotSpotPosition(Alignment9.WEST);
        button.addBasicElement(popupElement);
        popupElement.onAttributesInitialized();
        final Container checkOut2 = Container.checkOut();
        checkOut2.setElementMap(elementMap);
        checkOut2.setPrefSize(new Dimension(10, 0));
        checkOut2.setStyle("popup");
        popupElement.addBasicElement(checkOut2);
        checkOut2.onAttributesInitialized();
        final RowLayout checkOut3 = RowLayout.checkOut();
        checkOut3.setHorizontal(false);
        checkOut2.addBasicElement(checkOut3);
        checkOut3.onAttributesInitialized();
        checkOut3.onChildrenAdded();
        final Container checkOut4 = Container.checkOut();
        checkOut4.setElementMap(elementMap);
        checkOut2.addBasicElement(checkOut4);
        checkOut4.onAttributesInitialized();
        final RowLayout checkOut5 = RowLayout.checkOut();
        checkOut5.setAlign(Alignment9.WEST);
        checkOut4.addBasicElement(checkOut5);
        checkOut5.onAttributesInitialized();
        checkOut5.onChildrenAdded();
        final Label element4 = new Label();
        element4.onCheckOut();
        element4.setElementMap(elementMap);
        element4.setStyle("PopupInformation");
        element4.setText("%chat.pipeName.guild% (".replace("%chat.pipeName.guild%", Xulor.getInstance().getTranslatedString("chat.pipeName.guild")));
        element4.setExpandable(false);
        checkOut4.addBasicElement(element4);
        element4.onAttributesInitialized();
        final DecoratorAppearance appearance = element4.getAppearance();
        appearance.setElementMap(elementMap);
        ((TextWidgetAppearance)appearance).setAlignment(Alignment9.WEST);
        element4.addBasicElement(appearance);
        appearance.onAttributesInitialized();
        appearance.onChildrenAdded();
        element4.onChildrenAdded();
        final Label element5 = new Label();
        element5.onCheckOut();
        element5.setElementMap(elementMap);
        element5.setStyle("PopupInformation");
        element5.setExpandable(false);
        checkOut4.addBasicElement(element5);
        element5.onAttributesInitialized();
        final DecoratorAppearance appearance2 = element5.getAppearance();
        appearance2.setElementMap(elementMap);
        ((TextWidgetAppearance)appearance2).setAlignment(Alignment9.WEST);
        element5.addBasicElement(appearance2);
        appearance2.onAttributesInitialized();
        appearance2.onChildrenAdded();
        final PropertyElement checkOut6 = PropertyElement.checkOut();
        checkOut6.setElementMap(elementMap);
        checkOut6.setAttribute("text");
        checkOut6.setName("shortcutsList");
        checkOut6.setField("guild/key");
        element5.addBasicElement(checkOut6);
        checkOut6.onAttributesInitialized();
        checkOut6.onChildrenAdded();
        element5.onChildrenAdded();
        final Label element6 = new Label();
        element6.onCheckOut();
        element6.setElementMap(elementMap);
        element6.setStyle("PopupInformation");
        element6.setText(")");
        element6.setExpandable(false);
        checkOut4.addBasicElement(element6);
        element6.onAttributesInitialized();
        final DecoratorAppearance appearance3 = element6.getAppearance();
        appearance3.setElementMap(elementMap);
        ((TextWidgetAppearance)appearance3).setAlignment(Alignment9.WEST);
        element6.addBasicElement(appearance3);
        appearance3.onAttributesInitialized();
        appearance3.onChildrenAdded();
        element6.onChildrenAdded();
        checkOut4.onChildrenAdded();
        final Label element7 = new Label();
        element7.onCheckOut();
        element7.setElementMap(elementMap);
        element7.setStyle("PopupInformation");
        element7.setText("%error.guild.notExisting%".replace("%error.guild.notExisting%", Xulor.getInstance().getTranslatedString("error.guild.notExisting")));
        checkOut2.addBasicElement(element7);
        element7.onAttributesInitialized();
        final DecoratorAppearance appearance4 = element7.getAppearance();
        appearance4.setElementMap(elementMap);
        element7.addBasicElement(appearance4);
        appearance4.onAttributesInitialized();
        final ColorElement checkOut7 = ColorElement.checkOut();
        checkOut7.setElementMap(elementMap);
        checkOut7.setName("text");
        checkOut7.setColor(new Color(1.0f, 0.0f, 0.0f, 1.0f));
        appearance4.addBasicElement(checkOut7);
        checkOut7.onAttributesInitialized();
        checkOut7.onChildrenAdded();
        appearance4.onChildrenAdded();
        final PropertyElement checkOut8 = PropertyElement.checkOut();
        checkOut8.setElementMap(elementMap);
        checkOut8.setName("localPlayer");
        checkOut8.setAttribute("visible");
        checkOut8.setField("hasGuild");
        element7.addBasicElement(checkOut8);
        checkOut8.onAttributesInitialized();
        final ConditionResult element8 = new ConditionResult();
        element8.onCheckOut();
        element8.setElementMap(elementMap);
        checkOut8.addBasicElement(element8);
        element8.onAttributesInitialized();
        final FalseCondition element9 = new FalseCondition();
        element9.onCheckOut();
        element9.setElementMap(elementMap);
        element8.addBasicElement(element9);
        element9.onAttributesInitialized();
        element9.onChildrenAdded();
        element8.onChildrenAdded();
        checkOut8.onChildrenAdded();
        element7.onChildrenAdded();
        checkOut2.onChildrenAdded();
        popupElement.onChildrenAdded();
        final Image element10 = new Image();
        element10.onCheckOut();
        element10.setElementMap(elementMap);
        element10.setNonBlocking(true);
        element10.setStyle("Guild");
        button.addBasicElement(element10);
        element10.onAttributesInitialized();
        final PropertyElement checkOut9 = PropertyElement.checkOut();
        checkOut9.setElementMap(elementMap);
        checkOut9.setAttribute("modulationColor");
        checkOut9.setName("localPlayer");
        checkOut9.setField("hasGuild");
        element10.addBasicElement(checkOut9);
        checkOut9.onAttributesInitialized();
        final ConditionResult element11 = new ConditionResult();
        element11.onCheckOut();
        element11.setElementMap(elementMap);
        element11.setValue("1,1,1");
        element11.setElseValue("1,1,1,0.5");
        checkOut9.addBasicElement(element11);
        element11.onAttributesInitialized();
        final TrueCondition element12 = new TrueCondition();
        element12.onCheckOut();
        element12.setElementMap(elementMap);
        element11.addBasicElement(element12);
        element12.onAttributesInitialized();
        element12.onChildrenAdded();
        element11.onChildrenAdded();
        checkOut9.onChildrenAdded();
        element10.onChildrenAdded();
        button.onChildrenAdded();
        return button;
    }
    
    public BasicElement method8(final BasicElement basicElement) {
        final ElementMap elementMap = this.elementMaps.peek();
        final String id = "nationButton";
        final Button button = new Button();
        button.onCheckOut();
        button.setElementMap(elementMap);
        if (elementMap != null && id != null) {
            elementMap.add(id, button);
        }
        button.setStyle("worldBar2");
        button.setExpandable(false);
        final MouseClickedListener onClick = new MouseClickedListener();
        onClick.setCallBackFunc("wakfu.controlCenter:openCloseCitizen");
        button.setOnClick(onClick);
        final PopupDisplayListener onPopupDisplay = new PopupDisplayListener();
        onPopupDisplay.setCallBackFunc("popup(descPoliticPopup)");
        button.setOnPopupDisplay(onPopupDisplay);
        button.setEnabled(true);
        final PopupHideListener onPopupHide = new PopupHideListener();
        onPopupHide.setCallBackFunc("closePopup");
        button.setOnPopupHide(onPopupHide);
        button.setPrefSize(new Dimension(33, 35));
        basicElement.addBasicElement(button);
        button.onAttributesInitialized();
        final RowLayoutData element = new RowLayoutData();
        element.onCheckOut();
        element.setElementMap(elementMap);
        element.setAlign(Alignment9.CENTER);
        button.addBasicElement(element);
        element.onAttributesInitialized();
        element.onChildrenAdded();
        final PropertyElement checkOut = PropertyElement.checkOut();
        checkOut.setElementMap(elementMap);
        checkOut.setName("localPlayer");
        checkOut.setAttribute("enabled");
        checkOut.setField("hasNation");
        button.addBasicElement(checkOut);
        checkOut.onAttributesInitialized();
        final ConditionResult element2 = new ConditionResult();
        element2.onCheckOut();
        element2.setElementMap(elementMap);
        checkOut.addBasicElement(element2);
        element2.onAttributesInitialized();
        final TrueCondition element3 = new TrueCondition();
        element3.onCheckOut();
        element3.setElementMap(elementMap);
        element2.addBasicElement(element3);
        element3.onAttributesInitialized();
        element3.onChildrenAdded();
        element2.onChildrenAdded();
        checkOut.onChildrenAdded();
        final String id2 = "descPoliticPopup";
        final PopupElement popupElement = new PopupElement();
        popupElement.onCheckOut();
        popupElement.setElementMap(elementMap);
        if (elementMap != null && id2 != null) {
            elementMap.add(id2, popupElement);
        }
        popupElement.setAlign(Alignment9.EAST);
        popupElement.setHotSpotPosition(Alignment9.WEST);
        button.addBasicElement(popupElement);
        popupElement.onAttributesInitialized();
        final Container checkOut2 = Container.checkOut();
        checkOut2.setElementMap(elementMap);
        checkOut2.setPrefSize(new Dimension(10, 0));
        checkOut2.setStyle("popup");
        popupElement.addBasicElement(checkOut2);
        checkOut2.onAttributesInitialized();
        final BorderLayoutData checkOut3 = BorderLayoutData.checkOut();
        checkOut3.setElementMap(elementMap);
        checkOut3.setData(BorderLayoutData.Values.CENTER);
        checkOut2.addBasicElement(checkOut3);
        checkOut3.onAttributesInitialized();
        checkOut3.onChildrenAdded();
        final Label element4 = new Label();
        element4.onCheckOut();
        element4.setElementMap(elementMap);
        element4.setStyle("PopupInformation");
        element4.setText("%desc.politic% (".replace("%desc.politic%", Xulor.getInstance().getTranslatedString("desc.politic")));
        checkOut2.addBasicElement(element4);
        element4.onAttributesInitialized();
        final DecoratorAppearance appearance = element4.getAppearance();
        appearance.setElementMap(elementMap);
        ((TextWidgetAppearance)appearance).setAlignment(Alignment9.WEST);
        element4.addBasicElement(appearance);
        appearance.onAttributesInitialized();
        appearance.onChildrenAdded();
        element4.onChildrenAdded();
        final Label element5 = new Label();
        element5.onCheckOut();
        element5.setElementMap(elementMap);
        element5.setStyle("PopupInformation");
        checkOut2.addBasicElement(element5);
        element5.onAttributesInitialized();
        final DecoratorAppearance appearance2 = element5.getAppearance();
        appearance2.setElementMap(elementMap);
        ((TextWidgetAppearance)appearance2).setAlignment(Alignment9.WEST);
        element5.addBasicElement(appearance2);
        appearance2.onAttributesInitialized();
        appearance2.onChildrenAdded();
        final PropertyElement checkOut4 = PropertyElement.checkOut();
        checkOut4.setElementMap(elementMap);
        checkOut4.setAttribute("text");
        checkOut4.setName("shortcutsList");
        checkOut4.setField("nation/key");
        element5.addBasicElement(checkOut4);
        checkOut4.onAttributesInitialized();
        checkOut4.onChildrenAdded();
        element5.onChildrenAdded();
        final Label element6 = new Label();
        element6.onCheckOut();
        element6.setElementMap(elementMap);
        element6.setStyle("PopupInformation");
        element6.setText(")");
        checkOut2.addBasicElement(element6);
        element6.onAttributesInitialized();
        final DecoratorAppearance appearance3 = element6.getAppearance();
        appearance3.setElementMap(elementMap);
        ((TextWidgetAppearance)appearance3).setAlignment(Alignment9.WEST);
        element6.addBasicElement(appearance3);
        appearance3.onAttributesInitialized();
        appearance3.onChildrenAdded();
        element6.onChildrenAdded();
        checkOut2.onChildrenAdded();
        popupElement.onChildrenAdded();
        final Image element7 = new Image();
        element7.onCheckOut();
        element7.setElementMap(elementMap);
        element7.setNonBlocking(true);
        element7.setStyle("balanceIcon");
        button.addBasicElement(element7);
        element7.onAttributesInitialized();
        final PropertyElement checkOut5 = PropertyElement.checkOut();
        checkOut5.setElementMap(elementMap);
        checkOut5.setAttribute("modulationColor");
        checkOut5.setName("localPlayer");
        checkOut5.setField("hasNation");
        element7.addBasicElement(checkOut5);
        checkOut5.onAttributesInitialized();
        final ConditionResult element8 = new ConditionResult();
        element8.onCheckOut();
        element8.setElementMap(elementMap);
        element8.setValue("1,1,1");
        element8.setElseValue("1,1,1,0.5");
        checkOut5.addBasicElement(element8);
        element8.onAttributesInitialized();
        final TrueCondition element9 = new TrueCondition();
        element9.onCheckOut();
        element9.setElementMap(elementMap);
        element8.addBasicElement(element9);
        element9.onAttributesInitialized();
        element9.onChildrenAdded();
        element8.onChildrenAdded();
        checkOut5.onChildrenAdded();
        element7.onChildrenAdded();
        button.onChildrenAdded();
        return button;
    }
    
    public BasicElement method9(final BasicElement basicElement) {
        final ElementMap elementMap = this.elementMaps.peek();
        final RowLayout checkOut = RowLayout.checkOut();
        checkOut.setHorizontal(true);
        basicElement.addBasicElement(checkOut);
        checkOut.onAttributesInitialized();
        checkOut.onChildrenAdded();
        return null;
    }
    
    public BasicElement method10(final BasicElement basicElement) {
        final ElementMap elementMap = this.elementMaps.peek();
        final String id = "achievementsDrawer";
        final Drawer drawer = new Drawer();
        drawer.onCheckOut();
        drawer.setElementMap(elementMap);
        if (elementMap != null && id != null) {
            elementMap.add(id, drawer);
        }
        drawer.setExpandable(false);
        drawer.setAlign(Alignment9.EAST);
        drawer.setHotSpotPosition(Alignment9.WEST);
        basicElement.addBasicElement(drawer);
        drawer.onAttributesInitialized();
        final PropertyElement checkOut = PropertyElement.checkOut();
        checkOut.setElementMap(elementMap);
        checkOut.setAttribute("visible");
        checkOut.setName("isInFight");
        drawer.addBasicElement(checkOut);
        checkOut.onAttributesInitialized();
        final ConditionResult element = new ConditionResult();
        element.onCheckOut();
        element.setElementMap(elementMap);
        checkOut.addBasicElement(element);
        element.onAttributesInitialized();
        final FalseCondition element2 = new FalseCondition();
        element2.onCheckOut();
        element2.setElementMap(elementMap);
        element.addBasicElement(element2);
        element2.onAttributesInitialized();
        element2.onChildrenAdded();
        element.onChildrenAdded();
        checkOut.onChildrenAdded();
        final RowLayoutData element3 = new RowLayoutData();
        element3.onCheckOut();
        element3.setElementMap(elementMap);
        element3.setAlign(Alignment9.SOUTH);
        drawer.addBasicElement(element3);
        element3.onAttributesInitialized();
        element3.onChildrenAdded();
        final Container checkOut2 = Container.checkOut();
        checkOut2.setElementMap(elementMap);
        checkOut2.setThemeElementName("staticContainer");
        drawer.addBasicElement(checkOut2);
        checkOut2.onAttributesInitialized();
        final String id2 = "achievementDrawerButton";
        final Button button = new Button();
        button.onCheckOut();
        button.setElementMap(elementMap);
        if (elementMap != null && id2 != null) {
            elementMap.add(id2, button);
        }
        button.setStyle("worldBar2");
        button.setExpandable(false);
        final MouseClickedListener onClick = new MouseClickedListener();
        onClick.setCallBackFunc("switchDrawer(achievementsDrawer)");
        button.setOnClick(onClick);
        final PopupDisplayListener onPopupDisplay = new PopupDisplayListener();
        onPopupDisplay.setCallBackFunc("popup(descOpenAchievementsBarPopup)");
        button.setOnPopupDisplay(onPopupDisplay);
        final PopupHideListener onPopupHide = new PopupHideListener();
        onPopupHide.setCallBackFunc("closePopup");
        button.setOnPopupHide(onPopupHide);
        button.setPrefSize(new Dimension(33, 35));
        checkOut2.addBasicElement(button);
        button.onAttributesInitialized();
        final RowLayoutData element4 = new RowLayoutData();
        element4.onCheckOut();
        element4.setElementMap(elementMap);
        element4.setAlign(Alignment9.CENTER);
        button.addBasicElement(element4);
        element4.onAttributesInitialized();
        element4.onChildrenAdded();
        final String id3 = "descOpenAchievementsBarPopup";
        final PopupElement popupElement = new PopupElement();
        popupElement.onCheckOut();
        popupElement.setElementMap(elementMap);
        if (elementMap != null && id3 != null) {
            elementMap.add(id3, popupElement);
        }
        popupElement.setAlign(Alignment9.NORTH);
        popupElement.setHotSpotPosition(Alignment9.SOUTH);
        button.addBasicElement(popupElement);
        popupElement.onAttributesInitialized();
        final Container checkOut3 = Container.checkOut();
        checkOut3.setElementMap(elementMap);
        checkOut3.setPrefSize(new Dimension(10, 0));
        checkOut3.setStyle("popup");
        popupElement.addBasicElement(checkOut3);
        checkOut3.onAttributesInitialized();
        final BorderLayoutData checkOut4 = BorderLayoutData.checkOut();
        checkOut4.setElementMap(elementMap);
        checkOut4.setData(BorderLayoutData.Values.CENTER);
        checkOut3.addBasicElement(checkOut4);
        checkOut4.onAttributesInitialized();
        checkOut4.onChildrenAdded();
        final Label element5 = new Label();
        element5.onCheckOut();
        element5.setElementMap(elementMap);
        element5.setStyle("PopupInformation");
        element5.setText("%desc.achievements%".replace("%desc.achievements%", Xulor.getInstance().getTranslatedString("desc.achievements")));
        checkOut3.addBasicElement(element5);
        element5.onAttributesInitialized();
        final DecoratorAppearance appearance = element5.getAppearance();
        appearance.setElementMap(elementMap);
        ((TextWidgetAppearance)appearance).setAlignment(Alignment9.WEST);
        element5.addBasicElement(appearance);
        appearance.onAttributesInitialized();
        appearance.onChildrenAdded();
        element5.onChildrenAdded();
        checkOut3.onChildrenAdded();
        popupElement.onChildrenAdded();
        final Image element6 = new Image();
        element6.onCheckOut();
        element6.setElementMap(elementMap);
        element6.setNonBlocking(true);
        element6.setStyle("characterBookIcon");
        button.addBasicElement(element6);
        element6.onAttributesInitialized();
        element6.onChildrenAdded();
        button.onChildrenAdded();
        checkOut2.onChildrenAdded();
        final Container checkOut5 = Container.checkOut();
        checkOut5.setElementMap(elementMap);
        checkOut5.setStyle("MainBackground");
        checkOut5.setThemeElementName("popupContainer");
        drawer.addBasicElement(checkOut5);
        checkOut5.onAttributesInitialized();
        final RowLayout checkOut6 = RowLayout.checkOut();
        checkOut6.setHorizontal(false);
        checkOut5.addBasicElement(checkOut6);
        checkOut6.onAttributesInitialized();
        checkOut6.onChildrenAdded();
        final DecoratorAppearance appearance2 = checkOut5.getAppearance();
        appearance2.setElementMap(elementMap);
        checkOut5.addBasicElement(appearance2);
        appearance2.onAttributesInitialized();
        final Padding element7 = new Padding();
        element7.onCheckOut();
        element7.setElementMap(elementMap);
        element7.setInsets(new Insets(5, 5, 5, 5));
        appearance2.addBasicElement(element7);
        element7.onAttributesInitialized();
        element7.onChildrenAdded();
        appearance2.onChildrenAdded();
        final String id4 = "almanaxButton";
        final Button button2 = new Button();
        button2.onCheckOut();
        button2.setElementMap(elementMap);
        if (elementMap != null && id4 != null) {
            elementMap.add(id4, button2);
        }
        button2.setStyle("worldBar2");
        final MouseClickedListener onClick2 = new MouseClickedListener();
        onClick2.setCallBackFunc("wakfu.controlCenter:openCloseAlmanach");
        button2.setOnClick(onClick2);
        final PopupDisplayListener onPopupDisplay2 = new PopupDisplayListener();
        onPopupDisplay2.setCallBackFunc("popup(almanachPopup)");
        button2.setOnPopupDisplay(onPopupDisplay2);
        final PopupHideListener onPopupHide2 = new PopupHideListener();
        onPopupHide2.setCallBackFunc("closePopup");
        button2.setOnPopupHide(onPopupHide2);
        button2.setPrefSize(new Dimension(33, 35));
        button2.setExpandable(false);
        checkOut5.addBasicElement(button2);
        button2.onAttributesInitialized();
        final RowLayoutData element8 = new RowLayoutData();
        element8.onCheckOut();
        element8.setElementMap(elementMap);
        element8.setAlign(Alignment9.CENTER);
        button2.addBasicElement(element8);
        element8.onAttributesInitialized();
        element8.onChildrenAdded();
        final PropertyElement checkOut7 = PropertyElement.checkOut();
        checkOut7.setElementMap(elementMap);
        checkOut7.setName("almanachUnlocked");
        checkOut7.setAttribute("enabled");
        button2.addBasicElement(checkOut7);
        checkOut7.onAttributesInitialized();
        checkOut7.onChildrenAdded();
        final String id5 = "almanachPopup";
        final PopupElement popupElement2 = new PopupElement();
        popupElement2.onCheckOut();
        popupElement2.setElementMap(elementMap);
        if (elementMap != null && id5 != null) {
            elementMap.add(id5, popupElement2);
        }
        popupElement2.setAlign(Alignment9.NORTH);
        popupElement2.setHotSpotPosition(Alignment9.SOUTH);
        button2.addBasicElement(popupElement2);
        popupElement2.onAttributesInitialized();
        final Container checkOut8 = Container.checkOut();
        checkOut8.setElementMap(elementMap);
        checkOut8.setPrefSize(new Dimension(10, 0));
        checkOut8.setStyle("popup");
        popupElement2.addBasicElement(checkOut8);
        checkOut8.onAttributesInitialized();
        final TextView element9 = new TextView();
        element9.onCheckOut();
        element9.setElementMap(elementMap);
        element9.setStyle("white");
        element9.setEnableShrinking(false);
        checkOut8.addBasicElement(element9);
        element9.onAttributesInitialized();
        final PropertyElement checkOut9 = PropertyElement.checkOut();
        checkOut9.setElementMap(elementMap);
        checkOut9.setName("almanachTooltipDescription");
        checkOut9.setAttribute("text");
        element9.addBasicElement(checkOut9);
        checkOut9.onAttributesInitialized();
        checkOut9.onChildrenAdded();
        final DecoratorAppearance appearance3 = element9.getAppearance();
        appearance3.setElementMap(elementMap);
        ((TextWidgetAppearance)appearance3).setAlignment(Alignment9.CENTER);
        element9.addBasicElement(appearance3);
        appearance3.onAttributesInitialized();
        appearance3.onChildrenAdded();
        element9.onChildrenAdded();
        checkOut8.onChildrenAdded();
        popupElement2.onChildrenAdded();
        final String id6 = "almanaxIcon";
        final Image image = new Image();
        image.onCheckOut();
        image.setElementMap(elementMap);
        if (elementMap != null && id6 != null) {
            elementMap.add(id6, image);
        }
        image.setNonBlocking(true);
        image.setStyle("almanaxIcon");
        button2.addBasicElement(image);
        image.onAttributesInitialized();
        final PropertyElement checkOut10 = PropertyElement.checkOut();
        checkOut10.setElementMap(elementMap);
        checkOut10.setAttribute("modulationColor");
        checkOut10.setName("almanachUnlocked");
        image.addBasicElement(checkOut10);
        checkOut10.onAttributesInitialized();
        final ConditionResult element10 = new ConditionResult();
        element10.onCheckOut();
        element10.setElementMap(elementMap);
        element10.setValue("1,1,1");
        element10.setElseValue("1,1,1,0.5");
        checkOut10.addBasicElement(element10);
        element10.onAttributesInitialized();
        final TrueCondition element11 = new TrueCondition();
        element11.onCheckOut();
        element11.setElementMap(elementMap);
        element10.addBasicElement(element11);
        element11.onAttributesInitialized();
        element11.onChildrenAdded();
        element10.onChildrenAdded();
        checkOut10.onChildrenAdded();
        image.onChildrenAdded();
        button2.onChildrenAdded();
        final String id7 = "questsButton";
        final Button button3 = new Button();
        button3.onCheckOut();
        button3.setElementMap(elementMap);
        if (elementMap != null && id7 != null) {
            elementMap.add(id7, button3);
        }
        button3.setStyle("worldBar2");
        button3.setExpandable(false);
        final MouseClickedListener onClick3 = new MouseClickedListener();
        onClick3.setCallBackFunc("wakfu.controlCenter:openCloseQuestsDialog");
        button3.setOnClick(onClick3);
        final PopupDisplayListener onPopupDisplay3 = new PopupDisplayListener();
        onPopupDisplay3.setCallBackFunc("popup(descQuestsPopup)");
        button3.setOnPopupDisplay(onPopupDisplay3);
        final PopupHideListener onPopupHide3 = new PopupHideListener();
        onPopupHide3.setCallBackFunc("closePopup");
        button3.setOnPopupHide(onPopupHide3);
        button3.setPrefSize(new Dimension(33, 35));
        checkOut5.addBasicElement(button3);
        button3.onAttributesInitialized();
        final RowLayoutData element12 = new RowLayoutData();
        element12.onCheckOut();
        element12.setElementMap(elementMap);
        element12.setAlign(Alignment9.CENTER);
        button3.addBasicElement(element12);
        element12.onAttributesInitialized();
        element12.onChildrenAdded();
        final String id8 = "descQuestsPopup";
        final PopupElement popupElement3 = new PopupElement();
        popupElement3.onCheckOut();
        popupElement3.setElementMap(elementMap);
        if (elementMap != null && id8 != null) {
            elementMap.add(id8, popupElement3);
        }
        popupElement3.setAlign(Alignment9.EAST);
        popupElement3.setHotSpotPosition(Alignment9.WEST);
        button3.addBasicElement(popupElement3);
        popupElement3.onAttributesInitialized();
        final Container checkOut11 = Container.checkOut();
        checkOut11.setElementMap(elementMap);
        checkOut11.setPrefSize(new Dimension(10, 0));
        checkOut11.setStyle("popup");
        popupElement3.addBasicElement(checkOut11);
        checkOut11.onAttributesInitialized();
        final BorderLayoutData checkOut12 = BorderLayoutData.checkOut();
        checkOut12.setElementMap(elementMap);
        checkOut12.setData(BorderLayoutData.Values.CENTER);
        checkOut11.addBasicElement(checkOut12);
        checkOut12.onAttributesInitialized();
        checkOut12.onChildrenAdded();
        final Label element13 = new Label();
        element13.onCheckOut();
        element13.setElementMap(elementMap);
        element13.setStyle("PopupInformation");
        element13.setText("%achievements.quests% (".replace("%achievements.quests%", Xulor.getInstance().getTranslatedString("achievements.quests")));
        checkOut11.addBasicElement(element13);
        element13.onAttributesInitialized();
        final DecoratorAppearance appearance4 = element13.getAppearance();
        appearance4.setElementMap(elementMap);
        ((TextWidgetAppearance)appearance4).setAlignment(Alignment9.WEST);
        element13.addBasicElement(appearance4);
        appearance4.onAttributesInitialized();
        appearance4.onChildrenAdded();
        element13.onChildrenAdded();
        final Label element14 = new Label();
        element14.onCheckOut();
        element14.setElementMap(elementMap);
        element14.setStyle("PopupInformation");
        checkOut11.addBasicElement(element14);
        element14.onAttributesInitialized();
        final DecoratorAppearance appearance5 = element14.getAppearance();
        appearance5.setElementMap(elementMap);
        ((TextWidgetAppearance)appearance5).setAlignment(Alignment9.WEST);
        element14.addBasicElement(appearance5);
        appearance5.onAttributesInitialized();
        appearance5.onChildrenAdded();
        final PropertyElement checkOut13 = PropertyElement.checkOut();
        checkOut13.setElementMap(elementMap);
        checkOut13.setAttribute("text");
        checkOut13.setName("shortcutsList");
        checkOut13.setField("quests/key");
        element14.addBasicElement(checkOut13);
        checkOut13.onAttributesInitialized();
        checkOut13.onChildrenAdded();
        element14.onChildrenAdded();
        final Label element15 = new Label();
        element15.onCheckOut();
        element15.setElementMap(elementMap);
        element15.setStyle("PopupInformation");
        element15.setText(")");
        checkOut11.addBasicElement(element15);
        element15.onAttributesInitialized();
        final DecoratorAppearance appearance6 = element15.getAppearance();
        appearance6.setElementMap(elementMap);
        ((TextWidgetAppearance)appearance6).setAlignment(Alignment9.WEST);
        element15.addBasicElement(appearance6);
        appearance6.onAttributesInitialized();
        appearance6.onChildrenAdded();
        element15.onChildrenAdded();
        checkOut11.onChildrenAdded();
        popupElement3.onChildrenAdded();
        final Image element16 = new Image();
        element16.onCheckOut();
        element16.setElementMap(elementMap);
        element16.setNonBlocking(true);
        element16.setStyle("characterBookIcon");
        button3.addBasicElement(element16);
        element16.onAttributesInitialized();
        element16.onChildrenAdded();
        button3.onChildrenAdded();
        final String id9 = "achievementsButton";
        final Button button4 = new Button();
        button4.onCheckOut();
        button4.setElementMap(elementMap);
        if (elementMap != null && id9 != null) {
            elementMap.add(id9, button4);
        }
        button4.setStyle("worldBar2");
        button4.setExpandable(false);
        final MouseClickedListener onClick4 = new MouseClickedListener();
        onClick4.setCallBackFunc("wakfu.controlCenter:openCloseAchievementsDialog");
        button4.setOnClick(onClick4);
        final PopupDisplayListener onPopupDisplay4 = new PopupDisplayListener();
        onPopupDisplay4.setCallBackFunc("popup(descEncyclopediaPopup)");
        button4.setOnPopupDisplay(onPopupDisplay4);
        final PopupHideListener onPopupHide4 = new PopupHideListener();
        onPopupHide4.setCallBackFunc("closePopup");
        button4.setOnPopupHide(onPopupHide4);
        button4.setPrefSize(new Dimension(33, 35));
        checkOut5.addBasicElement(button4);
        button4.onAttributesInitialized();
        final RowLayoutData element17 = new RowLayoutData();
        element17.onCheckOut();
        element17.setElementMap(elementMap);
        element17.setAlign(Alignment9.CENTER);
        button4.addBasicElement(element17);
        element17.onAttributesInitialized();
        element17.onChildrenAdded();
        final String id10 = "descEncyclopediaPopup";
        final PopupElement popupElement4 = new PopupElement();
        popupElement4.onCheckOut();
        popupElement4.setElementMap(elementMap);
        if (elementMap != null && id10 != null) {
            elementMap.add(id10, popupElement4);
        }
        popupElement4.setAlign(Alignment9.EAST);
        popupElement4.setHotSpotPosition(Alignment9.WEST);
        button4.addBasicElement(popupElement4);
        popupElement4.onAttributesInitialized();
        final Container checkOut14 = Container.checkOut();
        checkOut14.setElementMap(elementMap);
        checkOut14.setPrefSize(new Dimension(10, 0));
        checkOut14.setStyle("popup");
        popupElement4.addBasicElement(checkOut14);
        checkOut14.onAttributesInitialized();
        final BorderLayoutData checkOut15 = BorderLayoutData.checkOut();
        checkOut15.setElementMap(elementMap);
        checkOut15.setData(BorderLayoutData.Values.CENTER);
        checkOut14.addBasicElement(checkOut15);
        checkOut15.onAttributesInitialized();
        checkOut15.onChildrenAdded();
        final Label element18 = new Label();
        element18.onCheckOut();
        element18.setElementMap(elementMap);
        element18.setStyle("PopupInformation");
        element18.setText("%achievement.achievements% (".replace("%achievement.achievements%", Xulor.getInstance().getTranslatedString("achievement.achievements")));
        checkOut14.addBasicElement(element18);
        element18.onAttributesInitialized();
        final DecoratorAppearance appearance7 = element18.getAppearance();
        appearance7.setElementMap(elementMap);
        ((TextWidgetAppearance)appearance7).setAlignment(Alignment9.WEST);
        element18.addBasicElement(appearance7);
        appearance7.onAttributesInitialized();
        appearance7.onChildrenAdded();
        element18.onChildrenAdded();
        final Label element19 = new Label();
        element19.onCheckOut();
        element19.setElementMap(elementMap);
        element19.setStyle("PopupInformation");
        checkOut14.addBasicElement(element19);
        element19.onAttributesInitialized();
        final DecoratorAppearance appearance8 = element19.getAppearance();
        appearance8.setElementMap(elementMap);
        ((TextWidgetAppearance)appearance8).setAlignment(Alignment9.WEST);
        element19.addBasicElement(appearance8);
        appearance8.onAttributesInitialized();
        appearance8.onChildrenAdded();
        final PropertyElement checkOut16 = PropertyElement.checkOut();
        checkOut16.setElementMap(elementMap);
        checkOut16.setAttribute("text");
        checkOut16.setName("shortcutsList");
        checkOut16.setField("achievements/key");
        element19.addBasicElement(checkOut16);
        checkOut16.onAttributesInitialized();
        checkOut16.onChildrenAdded();
        element19.onChildrenAdded();
        final Label element20 = new Label();
        element20.onCheckOut();
        element20.setElementMap(elementMap);
        element20.setStyle("PopupInformation");
        element20.setText(")");
        checkOut14.addBasicElement(element20);
        element20.onAttributesInitialized();
        final DecoratorAppearance appearance9 = element20.getAppearance();
        appearance9.setElementMap(elementMap);
        ((TextWidgetAppearance)appearance9).setAlignment(Alignment9.WEST);
        element20.addBasicElement(appearance9);
        appearance9.onAttributesInitialized();
        appearance9.onChildrenAdded();
        element20.onChildrenAdded();
        checkOut14.onChildrenAdded();
        popupElement4.onChildrenAdded();
        final Image element21 = new Image();
        element21.onCheckOut();
        element21.setElementMap(elementMap);
        element21.setNonBlocking(true);
        element21.setStyle("smallLaurel");
        button4.addBasicElement(element21);
        element21.onAttributesInitialized();
        element21.onChildrenAdded();
        button4.onChildrenAdded();
        final String id11 = "dungeonButton";
        final Button button5 = new Button();
        button5.onCheckOut();
        button5.setElementMap(elementMap);
        if (elementMap != null && id11 != null) {
            elementMap.add(id11, button5);
        }
        button5.setStyle("worldBar2");
        button5.setExpandable(false);
        final MouseClickedListener onClick5 = new MouseClickedListener();
        onClick5.setCallBackFunc("wakfu.controlCenter:openCloseDungeonListDialog");
        button5.setOnClick(onClick5);
        final PopupDisplayListener onPopupDisplay5 = new PopupDisplayListener();
        onPopupDisplay5.setCallBackFunc("popup(descQuestsPopup)");
        button5.setOnPopupDisplay(onPopupDisplay5);
        final PopupHideListener onPopupHide5 = new PopupHideListener();
        onPopupHide5.setCallBackFunc("closePopup");
        button5.setOnPopupHide(onPopupHide5);
        button5.setPrefSize(new Dimension(33, 35));
        checkOut5.addBasicElement(button5);
        button5.onAttributesInitialized();
        this.method11(button5);
        this.method12(button5);
        this.method13(button5);
        button5.onChildrenAdded();
        this.method14(checkOut5);
        this.method15(checkOut5);
        checkOut5.onChildrenAdded();
        drawer.onChildrenAdded();
        return drawer;
    }
    
    public BasicElement method11(final BasicElement basicElement) {
        final ElementMap elementMap = this.elementMaps.peek();
        final RowLayoutData element = new RowLayoutData();
        element.onCheckOut();
        element.setElementMap(elementMap);
        element.setAlign(Alignment9.CENTER);
        basicElement.addBasicElement(element);
        element.onAttributesInitialized();
        element.onChildrenAdded();
        return element;
    }
    
    public BasicElement method12(final BasicElement basicElement) {
        final ElementMap elementMap = this.elementMaps.peek();
        final String id = "descQuestsPopup";
        final PopupElement popupElement = new PopupElement();
        popupElement.onCheckOut();
        popupElement.setElementMap(elementMap);
        if (elementMap != null && id != null) {
            elementMap.add(id, popupElement);
        }
        popupElement.setAlign(Alignment9.EAST);
        popupElement.setHotSpotPosition(Alignment9.WEST);
        basicElement.addBasicElement(popupElement);
        popupElement.onAttributesInitialized();
        final Container checkOut = Container.checkOut();
        checkOut.setElementMap(elementMap);
        checkOut.setPrefSize(new Dimension(10, 0));
        checkOut.setStyle("popup");
        popupElement.addBasicElement(checkOut);
        checkOut.onAttributesInitialized();
        final BorderLayoutData checkOut2 = BorderLayoutData.checkOut();
        checkOut2.setElementMap(elementMap);
        checkOut2.setData(BorderLayoutData.Values.CENTER);
        checkOut.addBasicElement(checkOut2);
        checkOut2.onAttributesInitialized();
        checkOut2.onChildrenAdded();
        final Label element = new Label();
        element.onCheckOut();
        element.setElementMap(elementMap);
        element.setStyle("PopupInformation");
        element.setText("%dungeonList% (".replace("%dungeonList%", Xulor.getInstance().getTranslatedString("dungeonList")));
        checkOut.addBasicElement(element);
        element.onAttributesInitialized();
        final DecoratorAppearance appearance = element.getAppearance();
        appearance.setElementMap(elementMap);
        ((TextWidgetAppearance)appearance).setAlignment(Alignment9.WEST);
        element.addBasicElement(appearance);
        appearance.onAttributesInitialized();
        appearance.onChildrenAdded();
        element.onChildrenAdded();
        final Label element2 = new Label();
        element2.onCheckOut();
        element2.setElementMap(elementMap);
        element2.setStyle("PopupInformation");
        checkOut.addBasicElement(element2);
        element2.onAttributesInitialized();
        final DecoratorAppearance appearance2 = element2.getAppearance();
        appearance2.setElementMap(elementMap);
        ((TextWidgetAppearance)appearance2).setAlignment(Alignment9.WEST);
        element2.addBasicElement(appearance2);
        appearance2.onAttributesInitialized();
        appearance2.onChildrenAdded();
        final PropertyElement checkOut3 = PropertyElement.checkOut();
        checkOut3.setElementMap(elementMap);
        checkOut3.setAttribute("text");
        checkOut3.setName("shortcutsList");
        checkOut3.setField("dungeonList/key");
        element2.addBasicElement(checkOut3);
        checkOut3.onAttributesInitialized();
        checkOut3.onChildrenAdded();
        element2.onChildrenAdded();
        final Label element3 = new Label();
        element3.onCheckOut();
        element3.setElementMap(elementMap);
        element3.setStyle("PopupInformation");
        element3.setText(")");
        checkOut.addBasicElement(element3);
        element3.onAttributesInitialized();
        final DecoratorAppearance appearance3 = element3.getAppearance();
        appearance3.setElementMap(elementMap);
        ((TextWidgetAppearance)appearance3).setAlignment(Alignment9.WEST);
        element3.addBasicElement(appearance3);
        appearance3.onAttributesInitialized();
        appearance3.onChildrenAdded();
        element3.onChildrenAdded();
        checkOut.onChildrenAdded();
        popupElement.onChildrenAdded();
        return popupElement;
    }
    
    public BasicElement method13(final BasicElement basicElement) {
        final ElementMap elementMap = this.elementMaps.peek();
        final Image element = new Image();
        element.onCheckOut();
        element.setElementMap(elementMap);
        element.setNonBlocking(true);
        element.setStyle("DungeonSmallIcon");
        basicElement.addBasicElement(element);
        element.onAttributesInitialized();
        element.onChildrenAdded();
        return element;
    }
    
    public BasicElement method14(final BasicElement basicElement) {
        final ElementMap elementMap = this.elementMaps.peek();
        final String id = "tutorialBookButton";
        final Button button = new Button();
        button.onCheckOut();
        button.setElementMap(elementMap);
        if (elementMap != null && id != null) {
            elementMap.add(id, button);
        }
        button.setStyle("worldBar2");
        button.setExpandable(false);
        final MouseClickedListener onClick = new MouseClickedListener();
        onClick.setCallBackFunc("wakfu.controlCenter:openCloseTutorialBookDialog");
        button.setOnClick(onClick);
        final PopupDisplayListener onPopupDisplay = new PopupDisplayListener();
        onPopupDisplay.setCallBackFunc("popup(descTutorialBookPopup)");
        button.setOnPopupDisplay(onPopupDisplay);
        final PopupHideListener onPopupHide = new PopupHideListener();
        onPopupHide.setCallBackFunc("closePopup");
        button.setOnPopupHide(onPopupHide);
        button.setPrefSize(new Dimension(33, 35));
        basicElement.addBasicElement(button);
        button.onAttributesInitialized();
        final RowLayoutData element = new RowLayoutData();
        element.onCheckOut();
        element.setElementMap(elementMap);
        element.setAlign(Alignment9.CENTER);
        button.addBasicElement(element);
        element.onAttributesInitialized();
        element.onChildrenAdded();
        final String id2 = "descTutorialBookPopup";
        final PopupElement popupElement = new PopupElement();
        popupElement.onCheckOut();
        popupElement.setElementMap(elementMap);
        if (elementMap != null && id2 != null) {
            elementMap.add(id2, popupElement);
        }
        popupElement.setAlign(Alignment9.EAST);
        popupElement.setHotSpotPosition(Alignment9.WEST);
        button.addBasicElement(popupElement);
        popupElement.onAttributesInitialized();
        final Container checkOut = Container.checkOut();
        checkOut.setElementMap(elementMap);
        checkOut.setPrefSize(new Dimension(10, 0));
        checkOut.setStyle("popup");
        popupElement.addBasicElement(checkOut);
        checkOut.onAttributesInitialized();
        final BorderLayoutData checkOut2 = BorderLayoutData.checkOut();
        checkOut2.setElementMap(elementMap);
        checkOut2.setData(BorderLayoutData.Values.CENTER);
        checkOut.addBasicElement(checkOut2);
        checkOut2.onAttributesInitialized();
        checkOut2.onChildrenAdded();
        final Label element2 = new Label();
        element2.onCheckOut();
        element2.setElementMap(elementMap);
        element2.setStyle("PopupInformation");
        element2.setText("%tutorials% (".replace("%tutorials%", Xulor.getInstance().getTranslatedString("tutorials")));
        checkOut.addBasicElement(element2);
        element2.onAttributesInitialized();
        final DecoratorAppearance appearance = element2.getAppearance();
        appearance.setElementMap(elementMap);
        ((TextWidgetAppearance)appearance).setAlignment(Alignment9.WEST);
        element2.addBasicElement(appearance);
        appearance.onAttributesInitialized();
        appearance.onChildrenAdded();
        element2.onChildrenAdded();
        final Label element3 = new Label();
        element3.onCheckOut();
        element3.setElementMap(elementMap);
        element3.setStyle("PopupInformation");
        checkOut.addBasicElement(element3);
        element3.onAttributesInitialized();
        final DecoratorAppearance appearance2 = element3.getAppearance();
        appearance2.setElementMap(elementMap);
        ((TextWidgetAppearance)appearance2).setAlignment(Alignment9.WEST);
        element3.addBasicElement(appearance2);
        appearance2.onAttributesInitialized();
        appearance2.onChildrenAdded();
        final PropertyElement checkOut3 = PropertyElement.checkOut();
        checkOut3.setElementMap(elementMap);
        checkOut3.setAttribute("text");
        checkOut3.setName("shortcutsList");
        checkOut3.setField("tutorialBook/key");
        element3.addBasicElement(checkOut3);
        checkOut3.onAttributesInitialized();
        checkOut3.onChildrenAdded();
        element3.onChildrenAdded();
        final Label element4 = new Label();
        element4.onCheckOut();
        element4.setElementMap(elementMap);
        element4.setStyle("PopupInformation");
        element4.setText(")");
        checkOut.addBasicElement(element4);
        element4.onAttributesInitialized();
        final DecoratorAppearance appearance3 = element4.getAppearance();
        appearance3.setElementMap(elementMap);
        ((TextWidgetAppearance)appearance3).setAlignment(Alignment9.WEST);
        element4.addBasicElement(appearance3);
        appearance3.onAttributesInitialized();
        appearance3.onChildrenAdded();
        element4.onChildrenAdded();
        checkOut.onChildrenAdded();
        popupElement.onChildrenAdded();
        final Image element5 = new Image();
        element5.onCheckOut();
        element5.setElementMap(elementMap);
        element5.setNonBlocking(true);
        element5.setStyle("TutorialIcon");
        button.addBasicElement(element5);
        element5.onAttributesInitialized();
        element5.onChildrenAdded();
        button.onChildrenAdded();
        return button;
    }
    
    public BasicElement method15(final BasicElement basicElement) {
        final ElementMap elementMap = this.elementMaps.peek();
        final RowLayout checkOut = RowLayout.checkOut();
        checkOut.setHorizontal(true);
        basicElement.addBasicElement(checkOut);
        checkOut.onAttributesInitialized();
        checkOut.onChildrenAdded();
        return null;
    }
    
    public BasicElement method16(final BasicElement basicElement) {
        final ElementMap elementMap = this.elementMaps.peek();
        final Container checkOut = Container.checkOut();
        checkOut.setElementMap(elementMap);
        checkOut.setExpandable(false);
        basicElement.addBasicElement(checkOut);
        checkOut.onAttributesInitialized();
        final PropertyElement checkOut2 = PropertyElement.checkOut();
        checkOut2.setElementMap(elementMap);
        checkOut2.setAttribute("visible");
        checkOut2.setName("isInFight");
        checkOut.addBasicElement(checkOut2);
        checkOut2.onAttributesInitialized();
        final ConditionResult element = new ConditionResult();
        element.onCheckOut();
        element.setElementMap(elementMap);
        checkOut2.addBasicElement(element);
        element.onAttributesInitialized();
        final FalseCondition element2 = new FalseCondition();
        element2.onCheckOut();
        element2.setElementMap(elementMap);
        element.addBasicElement(element2);
        element2.onAttributesInitialized();
        element2.onChildrenAdded();
        element.onChildrenAdded();
        checkOut2.onChildrenAdded();
        final RowLayoutData element3 = new RowLayoutData();
        element3.onCheckOut();
        element3.setElementMap(elementMap);
        element3.setAlign(Alignment9.SOUTH);
        checkOut.addBasicElement(element3);
        element3.onAttributesInitialized();
        element3.onChildrenAdded();
        final String id = "dimensionalBagButton";
        final Button button = new Button();
        button.onCheckOut();
        button.setElementMap(elementMap);
        if (elementMap != null && id != null) {
            elementMap.add(id, button);
        }
        button.setStyle("worldBar2");
        button.setExpandable(false);
        final MouseClickedListener onClick = new MouseClickedListener();
        onClick.setCallBackFunc("wakfu.controlCenter:openCloseDimensionalBag");
        button.setOnClick(onClick);
        final PopupDisplayListener onPopupDisplay = new PopupDisplayListener();
        onPopupDisplay.setCallBackFunc("popup(descOpenMapPopup)");
        button.setOnPopupDisplay(onPopupDisplay);
        final PopupHideListener onPopupHide = new PopupHideListener();
        onPopupHide.setCallBackFunc("closePopup");
        button.setOnPopupHide(onPopupHide);
        button.setPrefSize(new Dimension(33, 35));
        checkOut.addBasicElement(button);
        button.onAttributesInitialized();
        final RowLayoutData element4 = new RowLayoutData();
        element4.onCheckOut();
        element4.setElementMap(elementMap);
        element4.setAlign(Alignment9.CENTER);
        button.addBasicElement(element4);
        element4.onAttributesInitialized();
        element4.onChildrenAdded();
        final PropertyElement checkOut3 = PropertyElement.checkOut();
        checkOut3.setElementMap(elementMap);
        checkOut3.setName("hasUnlockedDimensionalBag");
        checkOut3.setAttribute("enabled");
        button.addBasicElement(checkOut3);
        checkOut3.onAttributesInitialized();
        checkOut3.onChildrenAdded();
        final String id2 = "descOpenMapPopup";
        final PopupElement popupElement = new PopupElement();
        popupElement.onCheckOut();
        popupElement.setElementMap(elementMap);
        if (elementMap != null && id2 != null) {
            elementMap.add(id2, popupElement);
        }
        popupElement.setAlign(Alignment9.NORTH);
        popupElement.setHotSpotPosition(Alignment9.SOUTH);
        button.addBasicElement(popupElement);
        popupElement.onAttributesInitialized();
        final Container checkOut4 = Container.checkOut();
        checkOut4.setElementMap(elementMap);
        checkOut4.setPrefSize(new Dimension(10, 0));
        checkOut4.setStyle("popup");
        popupElement.addBasicElement(checkOut4);
        checkOut4.onAttributesInitialized();
        final BorderLayoutData checkOut5 = BorderLayoutData.checkOut();
        checkOut5.setElementMap(elementMap);
        checkOut5.setData(BorderLayoutData.Values.CENTER);
        checkOut4.addBasicElement(checkOut5);
        checkOut5.onAttributesInitialized();
        checkOut5.onChildrenAdded();
        final Label element5 = new Label();
        element5.onCheckOut();
        element5.setElementMap(elementMap);
        element5.setStyle("PopupInformation");
        element5.setText("%shortcutEffect.enterLeaveBag% (".replace("%shortcutEffect.enterLeaveBag%", Xulor.getInstance().getTranslatedString("shortcutEffect.enterLeaveBag")));
        checkOut4.addBasicElement(element5);
        element5.onAttributesInitialized();
        final DecoratorAppearance appearance = element5.getAppearance();
        appearance.setElementMap(elementMap);
        ((TextWidgetAppearance)appearance).setAlignment(Alignment9.WEST);
        element5.addBasicElement(appearance);
        appearance.onAttributesInitialized();
        appearance.onChildrenAdded();
        element5.onChildrenAdded();
        final Label element6 = new Label();
        element6.onCheckOut();
        element6.setElementMap(elementMap);
        element6.setStyle("PopupInformation");
        checkOut4.addBasicElement(element6);
        element6.onAttributesInitialized();
        final DecoratorAppearance appearance2 = element6.getAppearance();
        appearance2.setElementMap(elementMap);
        ((TextWidgetAppearance)appearance2).setAlignment(Alignment9.WEST);
        element6.addBasicElement(appearance2);
        appearance2.onAttributesInitialized();
        appearance2.onChildrenAdded();
        final PropertyElement checkOut6 = PropertyElement.checkOut();
        checkOut6.setElementMap(elementMap);
        checkOut6.setAttribute("text");
        checkOut6.setName("shortcutsList");
        checkOut6.setField("enterLeaveBag/key");
        element6.addBasicElement(checkOut6);
        checkOut6.onAttributesInitialized();
        checkOut6.onChildrenAdded();
        element6.onChildrenAdded();
        final Label element7 = new Label();
        element7.onCheckOut();
        element7.setElementMap(elementMap);
        element7.setStyle("PopupInformation");
        element7.setText(")");
        checkOut4.addBasicElement(element7);
        element7.onAttributesInitialized();
        final DecoratorAppearance appearance3 = element7.getAppearance();
        appearance3.setElementMap(elementMap);
        ((TextWidgetAppearance)appearance3).setAlignment(Alignment9.WEST);
        element7.addBasicElement(appearance3);
        appearance3.onAttributesInitialized();
        appearance3.onChildrenAdded();
        element7.onChildrenAdded();
        checkOut4.onChildrenAdded();
        popupElement.onChildrenAdded();
        final Image element8 = new Image();
        element8.onCheckOut();
        element8.setElementMap(elementMap);
        element8.setNonBlocking(true);
        element8.setStyle("bagIcon");
        button.addBasicElement(element8);
        element8.onAttributesInitialized();
        final PropertyElement checkOut7 = PropertyElement.checkOut();
        checkOut7.setElementMap(elementMap);
        checkOut7.setName("isInDimensionalBag");
        checkOut7.setAttribute("style");
        element8.addBasicElement(checkOut7);
        checkOut7.onAttributesInitialized();
        final ConditionResult element9 = new ConditionResult();
        element9.onCheckOut();
        element9.setElementMap(elementMap);
        element9.setValue("enterBagIcon");
        element9.setElseValue("leaveBagIcon");
        checkOut7.addBasicElement(element9);
        element9.onAttributesInitialized();
        final FalseCondition element10 = new FalseCondition();
        element10.onCheckOut();
        element10.setElementMap(elementMap);
        element9.addBasicElement(element10);
        element10.onAttributesInitialized();
        element10.onChildrenAdded();
        element9.onChildrenAdded();
        checkOut7.onChildrenAdded();
        final PropertyElement checkOut8 = PropertyElement.checkOut();
        checkOut8.setElementMap(elementMap);
        checkOut8.setAttribute("modulationColor");
        checkOut8.setName("hasUnlockedDimensionalBag");
        element8.addBasicElement(checkOut8);
        checkOut8.onAttributesInitialized();
        final ConditionResult element11 = new ConditionResult();
        element11.onCheckOut();
        element11.setElementMap(elementMap);
        element11.setValue("1,1,1");
        element11.setElseValue("1,1,1,0.5");
        checkOut8.addBasicElement(element11);
        element11.onAttributesInitialized();
        final TrueCondition element12 = new TrueCondition();
        element12.onCheckOut();
        element12.setElementMap(elementMap);
        element11.addBasicElement(element12);
        element12.onAttributesInitialized();
        element12.onChildrenAdded();
        element11.onChildrenAdded();
        checkOut8.onChildrenAdded();
        element8.onChildrenAdded();
        button.onChildrenAdded();
        checkOut.onChildrenAdded();
        return checkOut;
    }
    
    public BasicElement method17(final BasicElement basicElement) {
        final ElementMap elementMap = this.elementMaps.peek();
        final Container checkOut = Container.checkOut();
        checkOut.setElementMap(elementMap);
        checkOut.setExpandable(false);
        basicElement.addBasicElement(checkOut);
        checkOut.onAttributesInitialized();
        final PropertyElement checkOut2 = PropertyElement.checkOut();
        checkOut2.setElementMap(elementMap);
        checkOut2.setAttribute("visible");
        checkOut2.setName("isInFight");
        checkOut.addBasicElement(checkOut2);
        checkOut2.onAttributesInitialized();
        final ConditionResult element = new ConditionResult();
        element.onCheckOut();
        element.setElementMap(elementMap);
        checkOut2.addBasicElement(element);
        element.onAttributesInitialized();
        final FalseCondition element2 = new FalseCondition();
        element2.onCheckOut();
        element2.setElementMap(elementMap);
        element.addBasicElement(element2);
        element2.onAttributesInitialized();
        element2.onChildrenAdded();
        element.onChildrenAdded();
        checkOut2.onChildrenAdded();
        final RowLayoutData element3 = new RowLayoutData();
        element3.onCheckOut();
        element3.setElementMap(elementMap);
        element3.setAlign(Alignment9.SOUTH);
        checkOut.addBasicElement(element3);
        element3.onAttributesInitialized();
        element3.onChildrenAdded();
        final String id = "mapButton";
        final Button button = new Button();
        button.onCheckOut();
        button.setElementMap(elementMap);
        if (elementMap != null && id != null) {
            elementMap.add(id, button);
        }
        button.setStyle("worldBar2");
        button.setExpandable(false);
        final MouseClickedListener onClick = new MouseClickedListener();
        onClick.setCallBackFunc("wakfu.controlCenter:openCloseGlobalMap");
        button.setOnClick(onClick);
        final PopupDisplayListener onPopupDisplay = new PopupDisplayListener();
        onPopupDisplay.setCallBackFunc("popup(descOpenMapPopup)");
        button.setOnPopupDisplay(onPopupDisplay);
        final PopupHideListener onPopupHide = new PopupHideListener();
        onPopupHide.setCallBackFunc("closePopup");
        button.setOnPopupHide(onPopupHide);
        button.setPrefSize(new Dimension(33, 35));
        checkOut.addBasicElement(button);
        button.onAttributesInitialized();
        final RowLayoutData element4 = new RowLayoutData();
        element4.onCheckOut();
        element4.setElementMap(elementMap);
        element4.setAlign(Alignment9.CENTER);
        button.addBasicElement(element4);
        element4.onAttributesInitialized();
        element4.onChildrenAdded();
        final PropertyElement checkOut3 = PropertyElement.checkOut();
        checkOut3.setElementMap(elementMap);
        checkOut3.setAttribute("enabled");
        checkOut3.setName("map");
        checkOut3.setField("isMapAvailable");
        button.addBasicElement(checkOut3);
        checkOut3.onAttributesInitialized();
        final ConditionResult element5 = new ConditionResult();
        element5.onCheckOut();
        element5.setElementMap(elementMap);
        checkOut3.addBasicElement(element5);
        element5.onAttributesInitialized();
        final TrueCondition element6 = new TrueCondition();
        element6.onCheckOut();
        element6.setElementMap(elementMap);
        element5.addBasicElement(element6);
        element6.onAttributesInitialized();
        element6.onChildrenAdded();
        element5.onChildrenAdded();
        checkOut3.onChildrenAdded();
        final String id2 = "descOpenMapPopup";
        final PopupElement popupElement = new PopupElement();
        popupElement.onCheckOut();
        popupElement.setElementMap(elementMap);
        if (elementMap != null && id2 != null) {
            elementMap.add(id2, popupElement);
        }
        popupElement.setAlign(Alignment9.NORTH);
        popupElement.setHotSpotPosition(Alignment9.SOUTH);
        button.addBasicElement(popupElement);
        popupElement.onAttributesInitialized();
        final Container checkOut4 = Container.checkOut();
        checkOut4.setElementMap(elementMap);
        checkOut4.setPrefSize(new Dimension(10, 0));
        checkOut4.setStyle("popup");
        popupElement.addBasicElement(checkOut4);
        checkOut4.onAttributesInitialized();
        final BorderLayoutData checkOut5 = BorderLayoutData.checkOut();
        checkOut5.setElementMap(elementMap);
        checkOut5.setData(BorderLayoutData.Values.CENTER);
        checkOut4.addBasicElement(checkOut5);
        checkOut5.onAttributesInitialized();
        checkOut5.onChildrenAdded();
        final Label element7 = new Label();
        element7.onCheckOut();
        element7.setElementMap(elementMap);
        element7.setStyle("PopupInformation");
        element7.setText("%desc.map% (".replace("%desc.map%", Xulor.getInstance().getTranslatedString("desc.map")));
        checkOut4.addBasicElement(element7);
        element7.onAttributesInitialized();
        final DecoratorAppearance appearance = element7.getAppearance();
        appearance.setElementMap(elementMap);
        ((TextWidgetAppearance)appearance).setAlignment(Alignment9.WEST);
        element7.addBasicElement(appearance);
        appearance.onAttributesInitialized();
        appearance.onChildrenAdded();
        element7.onChildrenAdded();
        final Label element8 = new Label();
        element8.onCheckOut();
        element8.setElementMap(elementMap);
        element8.setStyle("PopupInformation");
        checkOut4.addBasicElement(element8);
        element8.onAttributesInitialized();
        final DecoratorAppearance appearance2 = element8.getAppearance();
        appearance2.setElementMap(elementMap);
        ((TextWidgetAppearance)appearance2).setAlignment(Alignment9.WEST);
        element8.addBasicElement(appearance2);
        appearance2.onAttributesInitialized();
        appearance2.onChildrenAdded();
        final PropertyElement checkOut6 = PropertyElement.checkOut();
        checkOut6.setElementMap(elementMap);
        checkOut6.setAttribute("text");
        checkOut6.setName("shortcutsList");
        checkOut6.setField("map/key");
        element8.addBasicElement(checkOut6);
        checkOut6.onAttributesInitialized();
        checkOut6.onChildrenAdded();
        element8.onChildrenAdded();
        final Label element9 = new Label();
        element9.onCheckOut();
        element9.setElementMap(elementMap);
        element9.setStyle("PopupInformation");
        element9.setText(")");
        checkOut4.addBasicElement(element9);
        element9.onAttributesInitialized();
        final DecoratorAppearance appearance3 = element9.getAppearance();
        appearance3.setElementMap(elementMap);
        ((TextWidgetAppearance)appearance3).setAlignment(Alignment9.WEST);
        element9.addBasicElement(appearance3);
        appearance3.onAttributesInitialized();
        appearance3.onChildrenAdded();
        element9.onChildrenAdded();
        checkOut4.onChildrenAdded();
        popupElement.onChildrenAdded();
        final Image element10 = new Image();
        element10.onCheckOut();
        element10.setElementMap(elementMap);
        element10.setNonBlocking(true);
        element10.setStyle("mapIcon");
        button.addBasicElement(element10);
        element10.onAttributesInitialized();
        final PropertyElement checkOut7 = PropertyElement.checkOut();
        checkOut7.setElementMap(elementMap);
        checkOut7.setAttribute("modulationColor");
        checkOut7.setName("map");
        checkOut7.setField("isMapAvailable");
        element10.addBasicElement(checkOut7);
        checkOut7.onAttributesInitialized();
        final ConditionResult element11 = new ConditionResult();
        element11.onCheckOut();
        element11.setElementMap(elementMap);
        element11.setValue("1,1,1");
        element11.setElseValue("1,1,1,0.5");
        checkOut7.addBasicElement(element11);
        element11.onAttributesInitialized();
        final TrueCondition element12 = new TrueCondition();
        element12.onCheckOut();
        element12.setElementMap(elementMap);
        element11.addBasicElement(element12);
        element12.onAttributesInitialized();
        element12.onChildrenAdded();
        element11.onChildrenAdded();
        checkOut7.onChildrenAdded();
        element10.onChildrenAdded();
        button.onChildrenAdded();
        checkOut.onChildrenAdded();
        return checkOut;
    }
    
    public BasicElement method18(final BasicElement basicElement) {
        final ElementMap elementMap = this.elementMaps.peek();
        final Button element = new Button();
        element.onCheckOut();
        element.setElementMap(elementMap);
        element.setStyle("worldBar2");
        element.setExpandable(false);
        final MouseClickedListener onClick = new MouseClickedListener();
        onClick.setCallBackFunc("wakfu:openMenuDialog");
        element.setOnClick(onClick);
        final PopupDisplayListener onPopupDisplay = new PopupDisplayListener();
        onPopupDisplay.setCallBackFunc("popup(descOpenMenuPopup)");
        element.setOnPopupDisplay(onPopupDisplay);
        final PopupHideListener onPopupHide = new PopupHideListener();
        onPopupHide.setCallBackFunc("closePopup");
        element.setOnPopupHide(onPopupHide);
        element.setPrefSize(new Dimension(33, 35));
        basicElement.addBasicElement(element);
        element.onAttributesInitialized();
        final RowLayoutData element2 = new RowLayoutData();
        element2.onCheckOut();
        element2.setElementMap(elementMap);
        element2.setAlign(Alignment9.SOUTH);
        element.addBasicElement(element2);
        element2.onAttributesInitialized();
        element2.onChildrenAdded();
        final String id = "descOpenMenuPopup";
        final PopupElement popupElement = new PopupElement();
        popupElement.onCheckOut();
        popupElement.setElementMap(elementMap);
        if (elementMap != null && id != null) {
            elementMap.add(id, popupElement);
        }
        popupElement.setAlign(Alignment9.NORTH);
        popupElement.setHotSpotPosition(Alignment9.SOUTH);
        element.addBasicElement(popupElement);
        popupElement.onAttributesInitialized();
        final Container checkOut = Container.checkOut();
        checkOut.setElementMap(elementMap);
        checkOut.setPrefSize(new Dimension(10, 0));
        checkOut.setStyle("popup");
        popupElement.addBasicElement(checkOut);
        checkOut.onAttributesInitialized();
        final BorderLayoutData checkOut2 = BorderLayoutData.checkOut();
        checkOut2.setElementMap(elementMap);
        checkOut2.setData(BorderLayoutData.Values.CENTER);
        checkOut.addBasicElement(checkOut2);
        checkOut2.onAttributesInitialized();
        checkOut2.onChildrenAdded();
        final Label element3 = new Label();
        element3.onCheckOut();
        element3.setElementMap(elementMap);
        element3.setStyle("PopupInformation");
        element3.setText("%menu% (esc)".replace("%menu%", Xulor.getInstance().getTranslatedString("menu")));
        checkOut.addBasicElement(element3);
        element3.onAttributesInitialized();
        final DecoratorAppearance appearance = element3.getAppearance();
        appearance.setElementMap(elementMap);
        ((TextWidgetAppearance)appearance).setAlignment(Alignment9.WEST);
        element3.addBasicElement(appearance);
        appearance.onAttributesInitialized();
        appearance.onChildrenAdded();
        element3.onChildrenAdded();
        checkOut.onChildrenAdded();
        popupElement.onChildrenAdded();
        final Image element4 = new Image();
        element4.onCheckOut();
        element4.setElementMap(elementMap);
        element4.setNonBlocking(true);
        element4.setStyle("Options");
        element.addBasicElement(element4);
        element4.onAttributesInitialized();
        element4.onChildrenAdded();
        element.onChildrenAdded();
        return element;
    }
    
    public BasicElement method19(final BasicElement basicElement) {
        final ElementMap elementMap = this.elementMaps.peek();
        final DecoratorAppearance appearance = ((Widget)basicElement).getAppearance();
        appearance.setElementMap(elementMap);
        basicElement.addBasicElement(appearance);
        appearance.onAttributesInitialized();
        final Padding element = new Padding();
        element.onCheckOut();
        element.setElementMap(elementMap);
        element.setInsets(new Insets(10, 7, 10, 7));
        appearance.addBasicElement(element);
        element.onAttributesInitialized();
        element.onChildrenAdded();
        appearance.onChildrenAdded();
        return appearance;
    }
    
    public BasicElement method20(final BasicElement basicElement) {
        final ElementMap elementMap = this.elementMaps.peek();
        final RowLayout checkOut = RowLayout.checkOut();
        checkOut.setHorizontal(false);
        checkOut.setAlign(Alignment9.NORTH);
        basicElement.addBasicElement(checkOut);
        checkOut.onAttributesInitialized();
        checkOut.onChildrenAdded();
        return null;
    }
}
