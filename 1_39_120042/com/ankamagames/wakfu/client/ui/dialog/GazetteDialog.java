package com.ankamagames.wakfu.client.ui.dialog;

import java.util.*;
import com.ankamagames.xulor2.core.*;
import com.ankamagames.xulor2.util.*;
import java.awt.*;
import com.ankamagames.xulor2.appearance.spacing.*;
import com.ankamagames.xulor2.layout.*;
import com.ankamagames.xulor2.util.alignment.*;
import com.ankamagames.xulor2.core.renderer.*;
import com.ankamagames.xulor2.property.*;
import com.ankamagames.xulor2.core.renderer.condition.*;
import com.ankamagames.framework.graphics.image.*;
import com.ankamagames.xulor2.component.*;
import com.ankamagames.xulor2.event.listener.*;
import com.ankamagames.xulor2.appearance.*;

public class GazetteDialog implements BasicElementFactory
{
    private Stack<ElementMap> elementMaps;
    private Environment env;
    
    public GazetteDialog() {
        super();
        this.elementMaps = new Stack<ElementMap>();
    }
    
    @Override
    public BasicElement getElement(final Environment env, final ElementMap item) {
        this.env = env;
        this.elementMaps.push(item);
        final ElementMap elementMap = this.elementMaps.peek();
        final Container checkOut = Container.checkOut();
        checkOut.setElementMap(elementMap);
        checkOut.onAttributesInitialized();
        final StaticLayoutData element = new StaticLayoutData();
        element.onCheckOut();
        element.setElementMap(elementMap);
        element.setSize(new Dimension(-2, -2));
        element.setAlign(Alignment17.EAST);
        checkOut.addBasicElement(element);
        element.onAttributesInitialized();
        element.onChildrenAdded();
        final StaticLayout element2 = new StaticLayout();
        element2.onCheckOut();
        element2.setAdaptToContentSize(true);
        checkOut.addBasicElement(element2);
        element2.onAttributesInitialized();
        element2.onChildrenAdded();
        final Container checkOut2 = Container.checkOut();
        checkOut2.setElementMap(elementMap);
        checkOut2.setStyle("tiledScroll");
        checkOut.addBasicElement(checkOut2);
        checkOut2.onAttributesInitialized();
        final RowLayout checkOut3 = RowLayout.checkOut();
        checkOut3.setHorizontal(false);
        checkOut2.addBasicElement(checkOut3);
        checkOut3.onAttributesInitialized();
        checkOut3.onChildrenAdded();
        final DecoratorAppearance appearance = checkOut2.getAppearance();
        appearance.setElementMap(elementMap);
        checkOut2.addBasicElement(appearance);
        appearance.onAttributesInitialized();
        final Margin checkOut4 = Margin.checkOut();
        checkOut4.setElementMap(elementMap);
        checkOut4.setInsets(new Insets(25, 10, 25, 10));
        appearance.addBasicElement(checkOut4);
        checkOut4.onAttributesInitialized();
        checkOut4.onChildrenAdded();
        final Padding element3 = new Padding();
        element3.onCheckOut();
        element3.setElementMap(elementMap);
        element3.setInsets(new Insets(13, 5, 13, 5));
        appearance.addBasicElement(element3);
        element3.onAttributesInitialized();
        element3.onChildrenAdded();
        appearance.onChildrenAdded();
        final StaticLayoutData element4 = new StaticLayoutData();
        element4.onCheckOut();
        element4.setElementMap(elementMap);
        element4.setSize(new Dimension(100.0f, 100.0f));
        checkOut2.addBasicElement(element4);
        element4.onAttributesInitialized();
        element4.onChildrenAdded();
        final List element5 = new List();
        element5.onCheckOut();
        element5.setElementMap(elementMap);
        element5.setStyle("alpha");
        element5.setCellSize(new Dimension(100.0f, 65));
        element5.setHorizontal(false);
        element5.setPrefSize(new Dimension(204, 300));
        checkOut2.addBasicElement(element5);
        element5.onAttributesInitialized();
        final RowLayoutData element6 = new RowLayoutData();
        element6.onCheckOut();
        element6.setElementMap(elementMap);
        element6.setAlign(Alignment9.CENTER);
        element5.addBasicElement(element6);
        element6.onAttributesInitialized();
        element6.onChildrenAdded();
        final PropertyElement checkOut5 = PropertyElement.checkOut();
        checkOut5.setElementMap(elementMap);
        checkOut5.setName("gazettes");
        checkOut5.setAttribute("content");
        element5.addBasicElement(checkOut5);
        checkOut5.onAttributesInitialized();
        checkOut5.onChildrenAdded();
        final ItemRenderer element7 = new ItemRenderer();
        element7.onCheckOut();
        element7.setElementMap(elementMap);
        final ItemClickListener onItemClick = new ItemClickListener();
        onItemClick.setCallBackFunc("wakfu.gazette:displayGazette");
        element7.setOnItemClick(onItemClick);
        element5.addBasicElement(element7);
        element7.onAttributesInitialized();
        final ConditionResult element8 = new ConditionResult();
        element8.onCheckOut();
        element8.setElementMap(elementMap);
        element7.addBasicElement(element8);
        element8.onAttributesInitialized();
        final ItemCondition element9 = new ItemCondition();
        element9.onCheckOut();
        element9.setElementMap(elementMap);
        element8.addBasicElement(element9);
        element9.onAttributesInitialized();
        final NotNullCondition element10 = new NotNullCondition();
        element10.onCheckOut();
        element10.setElementMap(elementMap);
        element9.addBasicElement(element10);
        element10.onAttributesInitialized();
        element10.onChildrenAdded();
        element9.onChildrenAdded();
        element8.onChildrenAdded();
        final Container checkOut6 = Container.checkOut();
        checkOut6.setElementMap(elementMap);
        element7.addBasicElement(checkOut6);
        checkOut6.onAttributesInitialized();
        final StaticLayout element11 = new StaticLayout();
        element11.onCheckOut();
        checkOut6.addBasicElement(element11);
        element11.onAttributesInitialized();
        element11.onChildrenAdded();
        final Image element12 = new Image();
        element12.onCheckOut();
        element12.setElementMap(elementMap);
        element12.setStyle("GazetteItemBackground");
        checkOut6.addBasicElement(element12);
        element12.onAttributesInitialized();
        final StaticLayoutData element13 = new StaticLayoutData();
        element13.onCheckOut();
        element13.setElementMap(elementMap);
        element13.setSize(new Dimension(-2, -2));
        element13.setAlign(Alignment17.CENTER);
        element12.addBasicElement(element13);
        element13.onAttributesInitialized();
        element13.onChildrenAdded();
        final DecoratorAppearance appearance2 = element12.getAppearance();
        appearance2.setElementMap(elementMap);
        element12.addBasicElement(appearance2);
        appearance2.onAttributesInitialized();
        final ItemElement element14 = new ItemElement();
        element14.onCheckOut();
        element14.setElementMap(elementMap);
        element14.setAttribute("modulationColor");
        element14.setField("new");
        appearance2.addBasicElement(element14);
        element14.onAttributesInitialized();
        final ConditionResult element15 = new ConditionResult();
        element15.onCheckOut();
        element15.setElementMap(elementMap);
        element15.setValue("1,1,1,1");
        element15.setElseValue("0.8,0.8,0.8,1");
        element14.addBasicElement(element15);
        element15.onAttributesInitialized();
        final TrueCondition element16 = new TrueCondition();
        element16.onCheckOut();
        element16.setElementMap(elementMap);
        element15.addBasicElement(element16);
        element16.onAttributesInitialized();
        element16.onChildrenAdded();
        element15.onChildrenAdded();
        element14.onChildrenAdded();
        appearance2.onChildrenAdded();
        element12.onChildrenAdded();
        final TextView element17 = new TextView();
        element17.onCheckOut();
        element17.setElementMap(elementMap);
        element17.setStyle("StyledBoldDark10");
        element17.setMinWidth(1);
        element17.setMaxWidth(165);
        element17.setNonBlocking(true);
        checkOut6.addBasicElement(element17);
        element17.onAttributesInitialized();
        final StaticLayoutData element18 = new StaticLayoutData();
        element18.onCheckOut();
        element18.setElementMap(elementMap);
        element18.setSize(new Dimension(-2, -2));
        element18.setAlign(Alignment17.CENTER);
        element18.setXOffset(-2);
        element17.addBasicElement(element18);
        element18.onAttributesInitialized();
        element18.onChildrenAdded();
        final ItemElement element19 = new ItemElement();
        element19.onCheckOut();
        element19.setElementMap(elementMap);
        element19.setAttribute("text");
        element19.setField("title");
        element17.addBasicElement(element19);
        element19.onAttributesInitialized();
        element19.onChildrenAdded();
        element17.onChildrenAdded();
        final TextView element20 = new TextView();
        element20.onCheckOut();
        element20.setElementMap(elementMap);
        element20.setStyle("StyledBoldDark10");
        element20.setMinWidth(1);
        element20.setMaxWidth(165);
        element20.setNonBlocking(true);
        checkOut6.addBasicElement(element20);
        element20.onAttributesInitialized();
        final StaticLayoutData element21 = new StaticLayoutData();
        element21.onCheckOut();
        element21.setElementMap(elementMap);
        element21.setSize(new Dimension(-2, -2));
        element21.setAlign(Alignment17.SOUTH);
        element21.setXOffset(-2);
        element21.setYOffset(9);
        element20.addBasicElement(element21);
        element21.onAttributesInitialized();
        element21.onChildrenAdded();
        final ItemElement element22 = new ItemElement();
        element22.onCheckOut();
        element22.setElementMap(elementMap);
        element22.setAttribute("text");
        element22.setField("issueNumber");
        element20.addBasicElement(element22);
        element22.onAttributesInitialized();
        element22.onChildrenAdded();
        element20.onChildrenAdded();
        checkOut6.onChildrenAdded();
        element7.onChildrenAdded();
        final ItemRenderer element23 = new ItemRenderer();
        element23.onCheckOut();
        element23.setElementMap(elementMap);
        element5.addBasicElement(element23);
        element23.onAttributesInitialized();
        final ConditionResult element24 = new ConditionResult();
        element24.onCheckOut();
        element24.setElementMap(elementMap);
        element23.addBasicElement(element24);
        element24.onAttributesInitialized();
        final ItemCondition element25 = new ItemCondition();
        element25.onCheckOut();
        element25.setElementMap(elementMap);
        element24.addBasicElement(element25);
        element25.onAttributesInitialized();
        final NullCondition element26 = new NullCondition();
        element26.onCheckOut();
        element26.setElementMap(elementMap);
        element25.addBasicElement(element26);
        element26.onAttributesInitialized();
        element26.onChildrenAdded();
        element25.onChildrenAdded();
        element24.onChildrenAdded();
        final Image element27 = new Image();
        element27.onCheckOut();
        element27.setElementMap(elementMap);
        element27.setStyle("GazetteItemBackground");
        element23.addBasicElement(element27);
        element27.onAttributesInitialized();
        final DecoratorAppearance appearance3 = element27.getAppearance();
        appearance3.setElementMap(elementMap);
        appearance3.setModulationColor(new Color(0.8f, 0.8f, 0.8f, 1.0f));
        element27.addBasicElement(appearance3);
        appearance3.onAttributesInitialized();
        appearance3.onChildrenAdded();
        element27.onChildrenAdded();
        element23.onChildrenAdded();
        element5.onChildrenAdded();
        checkOut2.onChildrenAdded();
        final Image element28 = new Image();
        element28.onCheckOut();
        element28.setElementMap(elementMap);
        element28.setStyle("ScrollBorderTop2");
        checkOut.addBasicElement(element28);
        element28.onAttributesInitialized();
        final StaticLayoutData element29 = new StaticLayoutData();
        element29.onCheckOut();
        element29.setElementMap(elementMap);
        element29.setAlign(Alignment17.NORTH);
        element29.setSize(new Dimension(-2, -2));
        element28.addBasicElement(element29);
        element29.onAttributesInitialized();
        element29.onChildrenAdded();
        element28.onChildrenAdded();
        final Image element30 = new Image();
        element30.onCheckOut();
        element30.setElementMap(elementMap);
        element30.setStyle("ScrollBorderBottom2");
        checkOut.addBasicElement(element30);
        element30.onAttributesInitialized();
        final StaticLayoutData element31 = new StaticLayoutData();
        element31.onCheckOut();
        element31.setElementMap(elementMap);
        element31.setAlign(Alignment17.SOUTH);
        element31.setSize(new Dimension(-2, -2));
        element30.addBasicElement(element31);
        element31.onAttributesInitialized();
        element31.onChildrenAdded();
        element30.onChildrenAdded();
        final Button element32 = new Button();
        element32.onCheckOut();
        element32.setElementMap(elementMap);
        element32.setStyle("close");
        final MouseClickedListener onClick = new MouseClickedListener();
        onClick.setCallBackFunc("unloadDialog");
        element32.setOnClick(onClick);
        checkOut.addBasicElement(element32);
        element32.onAttributesInitialized();
        final StaticLayoutData element33 = new StaticLayoutData();
        element33.onCheckOut();
        element33.setElementMap(elementMap);
        element33.setAlign(Alignment17.NORTH_EAST);
        element33.setSize(new Dimension(-2, -2));
        element33.setXOffset(-16);
        element33.setYOffset(-13);
        element32.addBasicElement(element33);
        element33.onAttributesInitialized();
        element33.onChildrenAdded();
        element32.onChildrenAdded();
        checkOut.onChildrenAdded();
        return checkOut;
    }
}
