package com.ankamagames.wakfu.client.ui.dialog;

import java.util.*;
import java.awt.*;
import com.ankamagames.xulor2.*;
import com.ankamagames.xulor2.appearance.spacing.*;
import com.ankamagames.xulor2.core.*;
import com.ankamagames.xulor2.util.*;
import com.ankamagames.xulor2.util.alignment.*;
import com.ankamagames.xulor2.layout.*;
import com.ankamagames.xulor2.core.renderer.*;
import com.ankamagames.xulor2.property.*;
import com.ankamagames.xulor2.decorator.*;
import com.ankamagames.framework.graphics.image.*;
import com.ankamagames.xulor2.nongraphical.*;
import com.ankamagames.xulor2.component.*;
import com.ankamagames.xulor2.event.listener.*;
import com.ankamagames.xulor2.appearance.*;
import com.ankamagames.xulor2.core.renderer.condition.*;

public class ChatOptionsDialog implements BasicElementFactory
{
    private Stack<ElementMap> elementMaps;
    private Environment env;
    
    public ChatOptionsDialog() {
        super();
        this.elementMaps = new Stack<ElementMap>();
    }
    
    @Override
    public BasicElement getElement(final Environment env, final ElementMap item) {
        this.env = env;
        this.elementMaps.push(item);
        final ElementMap elementMap = this.elementMaps.peek();
        final Container checkOut = Container.checkOut();
        checkOut.setElementMap(elementMap);
        checkOut.setNonBlocking(false);
        checkOut.setStyle("MainBackground");
        checkOut.setPrefSize(new Dimension(480, 410));
        checkOut.onAttributesInitialized();
        final StaticLayoutData element = new StaticLayoutData();
        element.onCheckOut();
        element.setElementMap(elementMap);
        element.setAlign(Alignment17.CENTER);
        checkOut.addBasicElement(element);
        element.onAttributesInitialized();
        element.onChildrenAdded();
        final DecoratorAppearance appearance = checkOut.getAppearance();
        appearance.setElementMap(elementMap);
        checkOut.addBasicElement(appearance);
        appearance.onAttributesInitialized();
        final Padding element2 = new Padding();
        element2.onCheckOut();
        element2.setElementMap(elementMap);
        element2.setInsets(new Insets(5, 10, 10, 10));
        appearance.addBasicElement(element2);
        element2.onAttributesInitialized();
        element2.onChildrenAdded();
        appearance.onChildrenAdded();
        final StaticLayout element3 = new StaticLayout();
        element3.onCheckOut();
        checkOut.addBasicElement(element3);
        element3.onAttributesInitialized();
        element3.onChildrenAdded();
        final Container checkOut2 = Container.checkOut();
        checkOut2.setElementMap(elementMap);
        checkOut.addBasicElement(checkOut2);
        checkOut2.onAttributesInitialized();
        final StaticLayoutData element4 = new StaticLayoutData();
        element4.onCheckOut();
        element4.setElementMap(elementMap);
        element4.setAlign(Alignment17.NORTH);
        element4.setSize(new Dimension(100.0f, 30));
        checkOut2.addBasicElement(element4);
        element4.onAttributesInitialized();
        element4.onChildrenAdded();
        final StaticLayout element5 = new StaticLayout();
        element5.onCheckOut();
        element5.setAdaptToContentSize(true);
        checkOut2.addBasicElement(element5);
        element5.onAttributesInitialized();
        element5.onChildrenAdded();
        final Label element6 = new Label();
        element6.onCheckOut();
        element6.setElementMap(elementMap);
        element6.setText("%chatOptions%".replace("%chatOptions%", Xulor.getInstance().getTranslatedString("chatOptions")));
        element6.setStyle("title");
        checkOut2.addBasicElement(element6);
        element6.onAttributesInitialized();
        final StaticLayoutData element7 = new StaticLayoutData();
        element7.onCheckOut();
        element7.setElementMap(elementMap);
        element7.setAlign(Alignment17.CENTER);
        element6.addBasicElement(element7);
        element7.onAttributesInitialized();
        element7.onChildrenAdded();
        final DecoratorAppearance appearance2 = element6.getAppearance();
        appearance2.setElementMap(elementMap);
        ((TextWidgetAppearance)appearance2).setAlignment(Alignment9.CENTER);
        element6.addBasicElement(appearance2);
        appearance2.onAttributesInitialized();
        appearance2.onChildrenAdded();
        element6.onChildrenAdded();
        final Container checkOut3 = Container.checkOut();
        checkOut3.setElementMap(elementMap);
        checkOut2.addBasicElement(checkOut3);
        checkOut3.onAttributesInitialized();
        final StaticLayoutData element8 = new StaticLayoutData();
        element8.onCheckOut();
        element8.setElementMap(elementMap);
        element8.setAlign(Alignment17.EAST);
        checkOut3.addBasicElement(element8);
        element8.onAttributesInitialized();
        element8.onChildrenAdded();
        final DecoratorAppearance appearance3 = checkOut3.getAppearance();
        appearance3.setElementMap(elementMap);
        checkOut3.addBasicElement(appearance3);
        appearance3.onAttributesInitialized();
        final Margin checkOut4 = Margin.checkOut();
        checkOut4.setElementMap(elementMap);
        checkOut4.setInsets(new Insets(0, 0, 0, 5));
        appearance3.addBasicElement(checkOut4);
        checkOut4.onAttributesInitialized();
        checkOut4.onChildrenAdded();
        appearance3.onChildrenAdded();
        final Button element9 = new Button();
        element9.onCheckOut();
        element9.setElementMap(elementMap);
        element9.setExpandable(false);
        final MouseClickedListener onClick = new MouseClickedListener();
        onClick.setCallBackFunc("wakfu.chatOptions:restore");
        element9.setOnClick(onClick);
        final PopupDisplayListener onPopupDisplay = new PopupDisplayListener();
        onPopupDisplay.setCallBackFunc("popup(restorePopup)");
        element9.setOnPopupDisplay(onPopupDisplay);
        final PopupHideListener onPopupHide = new PopupHideListener();
        onPopupHide.setCallBackFunc("closePopup");
        element9.setOnPopupHide(onPopupHide);
        checkOut3.addBasicElement(element9);
        element9.onAttributesInitialized();
        final String id = "restorePopup";
        final PopupElement popupElement = new PopupElement();
        popupElement.onCheckOut();
        popupElement.setElementMap(elementMap);
        if (elementMap != null && id != null) {
            elementMap.add(id, popupElement);
        }
        popupElement.setAlign(Alignment9.NORTH);
        popupElement.setHotSpotPosition(Alignment9.SOUTH);
        element9.addBasicElement(popupElement);
        popupElement.onAttributesInitialized();
        final Container checkOut5 = Container.checkOut();
        checkOut5.setElementMap(elementMap);
        checkOut5.setPrefSize(new Dimension(10, 0));
        checkOut5.setStyle("popup");
        popupElement.addBasicElement(checkOut5);
        checkOut5.onAttributesInitialized();
        final Label element10 = new Label();
        element10.onCheckOut();
        element10.setElementMap(elementMap);
        element10.setStyle("PopupInformation");
        element10.setText("%restore%".replace("%restore%", Xulor.getInstance().getTranslatedString("restore")));
        checkOut5.addBasicElement(element10);
        element10.onAttributesInitialized();
        final DecoratorAppearance appearance4 = element10.getAppearance();
        appearance4.setElementMap(elementMap);
        ((TextWidgetAppearance)appearance4).setAlignment(Alignment9.WEST);
        element10.addBasicElement(appearance4);
        appearance4.onAttributesInitialized();
        appearance4.onChildrenAdded();
        element10.onChildrenAdded();
        checkOut5.onChildrenAdded();
        popupElement.onChildrenAdded();
        final Image element11 = new Image();
        element11.onCheckOut();
        element11.setElementMap(elementMap);
        element11.setStyle("GoBackIcon");
        element9.addBasicElement(element11);
        element11.onAttributesInitialized();
        element11.onChildrenAdded();
        element9.onChildrenAdded();
        final Button element12 = new Button();
        element12.onCheckOut();
        element12.setElementMap(elementMap);
        element12.setStyle("close");
        element12.setExpandable(false);
        final MouseClickedListener onClick2 = new MouseClickedListener();
        onClick2.setCallBackFunc("unloadDialog");
        element12.setOnClick(onClick2);
        final PopupDisplayListener onPopupDisplay2 = new PopupDisplayListener();
        onPopupDisplay2.setCallBackFunc("popup(backPopup)");
        element12.setOnPopupDisplay(onPopupDisplay2);
        final PopupHideListener onPopupHide2 = new PopupHideListener();
        onPopupHide2.setCallBackFunc("closePopup");
        element12.setOnPopupHide(onPopupHide2);
        checkOut3.addBasicElement(element12);
        element12.onAttributesInitialized();
        final String id2 = "backPopup";
        final PopupElement popupElement2 = new PopupElement();
        popupElement2.onCheckOut();
        popupElement2.setElementMap(elementMap);
        if (elementMap != null && id2 != null) {
            elementMap.add(id2, popupElement2);
        }
        popupElement2.setAlign(Alignment9.NORTH);
        popupElement2.setHotSpotPosition(Alignment9.SOUTH);
        element12.addBasicElement(popupElement2);
        popupElement2.onAttributesInitialized();
        final Container checkOut6 = Container.checkOut();
        checkOut6.setElementMap(elementMap);
        checkOut6.setPrefSize(new Dimension(10, 0));
        checkOut6.setStyle("popup");
        popupElement2.addBasicElement(checkOut6);
        checkOut6.onAttributesInitialized();
        final Label element13 = new Label();
        element13.onCheckOut();
        element13.setElementMap(elementMap);
        element13.setStyle("PopupInformation");
        element13.setText("%back%".replace("%back%", Xulor.getInstance().getTranslatedString("back")));
        checkOut6.addBasicElement(element13);
        element13.onAttributesInitialized();
        final DecoratorAppearance appearance5 = element13.getAppearance();
        appearance5.setElementMap(elementMap);
        ((TextWidgetAppearance)appearance5).setAlignment(Alignment9.WEST);
        element13.addBasicElement(appearance5);
        appearance5.onAttributesInitialized();
        appearance5.onChildrenAdded();
        element13.onChildrenAdded();
        checkOut6.onChildrenAdded();
        popupElement2.onChildrenAdded();
        final DecoratorAppearance appearance6 = element12.getAppearance();
        appearance6.setElementMap(elementMap);
        element12.addBasicElement(appearance6);
        appearance6.onAttributesInitialized();
        final Margin checkOut7 = Margin.checkOut();
        checkOut7.setElementMap(elementMap);
        checkOut7.setInsets(new Insets(0, 5, 0, 0));
        appearance6.addBasicElement(checkOut7);
        checkOut7.onAttributesInitialized();
        checkOut7.onChildrenAdded();
        appearance6.onChildrenAdded();
        element12.onChildrenAdded();
        checkOut3.onChildrenAdded();
        checkOut2.onChildrenAdded();
        final Container checkOut8 = Container.checkOut();
        checkOut8.setElementMap(elementMap);
        checkOut8.setStyle("white");
        checkOut.addBasicElement(checkOut8);
        checkOut8.onAttributesInitialized();
        final StaticLayoutData element14 = new StaticLayoutData();
        element14.onCheckOut();
        element14.setElementMap(elementMap);
        element14.setAlign(Alignment17.SOUTH);
        element14.setSize(new Dimension(100.0f, 360));
        checkOut8.addBasicElement(element14);
        element14.onAttributesInitialized();
        element14.onChildrenAdded();
        checkOut8.onChildrenAdded();
        final String id3 = "tabbedContainer";
        final TabbedContainer tabbedContainer = new TabbedContainer();
        tabbedContainer.onCheckOut();
        tabbedContainer.setElementMap(elementMap);
        if (elementMap != null && id3 != null) {
            elementMap.add(id3, tabbedContainer);
        }
        tabbedContainer.setTextOrientation(Orientation.EAST);
        tabbedContainer.setTabsLabelAlignment(Alignment9.CENTER);
        tabbedContainer.setTabsPosition(Alignment4.NORTH);
        tabbedContainer.setTabsAlignment(Alignment5.CENTER);
        checkOut.addBasicElement(tabbedContainer);
        tabbedContainer.onAttributesInitialized();
        final StaticLayoutData element15 = new StaticLayoutData();
        element15.onCheckOut();
        element15.setElementMap(elementMap);
        element15.setAlign(Alignment17.SOUTH);
        element15.setSize(new Dimension(100.0f, 380));
        element15.setYOffset(10);
        tabbedContainer.addBasicElement(element15);
        element15.onAttributesInitialized();
        element15.onChildrenAdded();
        final TabItem element16 = new TabItem();
        element16.onCheckOut();
        element16.setElementMap(elementMap);
        element16.setText("%nation.general%".replace("%nation.general%", Xulor.getInstance().getTranslatedString("nation.general")));
        tabbedContainer.addBasicElement(element16);
        element16.onAttributesInitialized();
        final ScrollContainer element17 = new ScrollContainer();
        element17.onCheckOut();
        element17.setElementMap(elementMap);
        element16.addBasicElement(element17);
        element17.onAttributesInitialized();
        final DecoratorAppearance appearance7 = element17.getAppearance();
        appearance7.setElementMap(elementMap);
        element17.addBasicElement(appearance7);
        appearance7.onAttributesInitialized();
        final Padding element18 = new Padding();
        element18.onCheckOut();
        element18.setElementMap(elementMap);
        element18.setInsets(new Insets(5, 10, 0, 10));
        appearance7.addBasicElement(element18);
        element18.onAttributesInitialized();
        element18.onChildrenAdded();
        appearance7.onChildrenAdded();
        final Container checkOut9 = Container.checkOut();
        checkOut9.setElementMap(elementMap);
        element17.addBasicElement(checkOut9);
        checkOut9.onAttributesInitialized();
        final RowLayout checkOut10 = RowLayout.checkOut();
        checkOut10.setHorizontal(false);
        checkOut10.setAlign(Alignment9.NORTH);
        checkOut9.addBasicElement(checkOut10);
        checkOut10.onAttributesInitialized();
        checkOut10.onChildrenAdded();
        final ToggleButton element19 = new ToggleButton();
        element19.onCheckOut();
        element19.setElementMap(elementMap);
        element19.setText("%options.languageControlInput%".replace("%options.languageControlInput%", Xulor.getInstance().getTranslatedString("options.languageControlInput")));
        element19.setExpandable(false);
        final MouseClickedListener onClick3 = new MouseClickedListener();
        onClick3.setCallBackFunc("wakfu.chatOptions:setInputLanguageControl");
        element19.setOnClick(onClick3);
        checkOut9.addBasicElement(element19);
        element19.onAttributesInitialized();
        final PropertyElement checkOut11 = PropertyElement.checkOut();
        checkOut11.setElementMap(elementMap);
        checkOut11.setAttribute("selected");
        checkOut11.setName("gamePreferences");
        checkOut11.setField("inputLanguageControlActivated");
        element19.addBasicElement(checkOut11);
        checkOut11.onAttributesInitialized();
        checkOut11.onChildrenAdded();
        final DecoratorAppearance appearance8 = element19.getAppearance();
        appearance8.setElementMap(elementMap);
        element19.addBasicElement(appearance8);
        appearance8.onAttributesInitialized();
        final Margin checkOut12 = Margin.checkOut();
        checkOut12.setElementMap(elementMap);
        checkOut12.setInsets(new Insets(0, 0, 10, 0));
        appearance8.addBasicElement(checkOut12);
        checkOut12.onAttributesInitialized();
        checkOut12.onChildrenAdded();
        appearance8.onChildrenAdded();
        element19.onChildrenAdded();
        final ToggleButton element20 = new ToggleButton();
        element20.onCheckOut();
        element20.setElementMap(elementMap);
        element20.setText("%options.languageControlOutput%".replace("%options.languageControlOutput%", Xulor.getInstance().getTranslatedString("options.languageControlOutput")));
        element20.setExpandable(false);
        final MouseClickedListener onClick4 = new MouseClickedListener();
        onClick4.setCallBackFunc("wakfu.chatOptions:setOutputLanguageControl");
        element20.setOnClick(onClick4);
        checkOut9.addBasicElement(element20);
        element20.onAttributesInitialized();
        final PropertyElement checkOut13 = PropertyElement.checkOut();
        checkOut13.setElementMap(elementMap);
        checkOut13.setAttribute("selected");
        checkOut13.setName("gamePreferences");
        checkOut13.setField("outputLanguageControlActivated");
        element20.addBasicElement(checkOut13);
        checkOut13.onAttributesInitialized();
        checkOut13.onChildrenAdded();
        final DecoratorAppearance appearance9 = element20.getAppearance();
        appearance9.setElementMap(elementMap);
        element20.addBasicElement(appearance9);
        appearance9.onAttributesInitialized();
        final Margin checkOut14 = Margin.checkOut();
        checkOut14.setElementMap(elementMap);
        checkOut14.setInsets(new Insets(0, 0, 10, 0));
        appearance9.addBasicElement(checkOut14);
        checkOut14.onAttributesInitialized();
        checkOut14.onChildrenAdded();
        appearance9.onChildrenAdded();
        element20.onChildrenAdded();
        final ToggleButton element21 = new ToggleButton();
        element21.onCheckOut();
        element21.setElementMap(elementMap);
        element21.setText("%options.chatBorderedText%".replace("%options.chatBorderedText%", Xulor.getInstance().getTranslatedString("options.chatBorderedText")));
        element21.setExpandable(false);
        final MouseClickedListener onClick5 = new MouseClickedListener();
        onClick5.setCallBackFunc("wakfu.chatOptions:setBorderedText");
        element21.setOnClick(onClick5);
        checkOut9.addBasicElement(element21);
        element21.onAttributesInitialized();
        final PropertyElement checkOut15 = PropertyElement.checkOut();
        checkOut15.setElementMap(elementMap);
        checkOut15.setAttribute("selected");
        checkOut15.setName("gamePreferences");
        checkOut15.setField("borderedChatText");
        element21.addBasicElement(checkOut15);
        checkOut15.onAttributesInitialized();
        checkOut15.onChildrenAdded();
        final DecoratorAppearance appearance10 = element21.getAppearance();
        appearance10.setElementMap(elementMap);
        element21.addBasicElement(appearance10);
        appearance10.onAttributesInitialized();
        final Margin checkOut16 = Margin.checkOut();
        checkOut16.setElementMap(elementMap);
        checkOut16.setInsets(new Insets(0, 0, 10, 0));
        appearance10.addBasicElement(checkOut16);
        checkOut16.onAttributesInitialized();
        checkOut16.onChildrenAdded();
        appearance10.onChildrenAdded();
        element21.onChildrenAdded();
        final Container checkOut17 = Container.checkOut();
        checkOut17.setElementMap(elementMap);
        checkOut17.setPrefSize(new Dimension(0, 26));
        checkOut17.setExpandable(false);
        checkOut9.addBasicElement(checkOut17);
        checkOut17.onAttributesInitialized();
        final DecoratorAppearance appearance11 = checkOut17.getAppearance();
        appearance11.setElementMap(elementMap);
        checkOut17.addBasicElement(appearance11);
        appearance11.onAttributesInitialized();
        final Margin checkOut18 = Margin.checkOut();
        checkOut18.setElementMap(elementMap);
        checkOut18.setInsets(new Insets(0, 0, 5, 0));
        appearance11.addBasicElement(checkOut18);
        checkOut18.onAttributesInitialized();
        checkOut18.onChildrenAdded();
        appearance11.onChildrenAdded();
        final RowLayout checkOut19 = RowLayout.checkOut();
        checkOut19.setAlign(Alignment9.WEST);
        checkOut17.addBasicElement(checkOut19);
        checkOut19.onAttributesInitialized();
        checkOut19.onChildrenAdded();
        final Label element22 = new Label();
        element22.onCheckOut();
        element22.setElementMap(elementMap);
        element22.setText("%options.chatfontSize%".replace("%options.chatfontSize%", Xulor.getInstance().getTranslatedString("options.chatfontSize")));
        element22.setExpandable(false);
        checkOut17.addBasicElement(element22);
        element22.onAttributesInitialized();
        final DecoratorAppearance appearance12 = element22.getAppearance();
        appearance12.setElementMap(elementMap);
        element22.addBasicElement(appearance12);
        appearance12.onAttributesInitialized();
        final Margin checkOut20 = Margin.checkOut();
        checkOut20.setElementMap(elementMap);
        checkOut20.setInsets(new Insets(0, 0, 0, 10));
        appearance12.addBasicElement(checkOut20);
        checkOut20.onAttributesInitialized();
        checkOut20.onChildrenAdded();
        appearance12.onChildrenAdded();
        element22.onChildrenAdded();
        final ComboBox element23 = new ComboBox();
        element23.onCheckOut();
        element23.setElementMap(elementMap);
        element23.setExpandable(false);
        element23.setPrefSize(new Dimension(150, 0));
        final ListSelectionChangedListener onListSelectionChange = new ListSelectionChangedListener();
        onListSelectionChange.setCallBackFunc("wakfu.chatOptions:setFontSize");
        element23.setOnListSelectionChange(onListSelectionChange);
        checkOut17.addBasicElement(element23);
        element23.onAttributesInitialized();
        final PropertyElement checkOut21 = PropertyElement.checkOut();
        checkOut21.setElementMap(elementMap);
        checkOut21.setAttribute("content");
        checkOut21.setName("gamePreferences");
        checkOut21.setField("chatTextFontSize/list");
        element23.addBasicElement(checkOut21);
        checkOut21.onAttributesInitialized();
        checkOut21.onChildrenAdded();
        final PropertyElement checkOut22 = PropertyElement.checkOut();
        checkOut22.setElementMap(elementMap);
        checkOut22.setAttribute("selectedValue");
        checkOut22.setName("gamePreferences");
        checkOut22.setField("chatTextFontSize/name");
        element23.addBasicElement(checkOut22);
        checkOut22.onAttributesInitialized();
        checkOut22.onChildrenAdded();
        final RenderableContainer element24 = new RenderableContainer();
        element24.onCheckOut();
        element24.setElementMap(elementMap);
        element23.addBasicElement(element24);
        element24.onAttributesInitialized();
        final ItemRenderer element25 = new ItemRenderer();
        element25.onCheckOut();
        element25.setElementMap(elementMap);
        element24.addBasicElement(element25);
        element25.onAttributesInitialized();
        final Label element26 = new Label();
        element26.onCheckOut();
        element26.setElementMap(elementMap);
        element26.setNonBlocking(true);
        element25.addBasicElement(element26);
        element26.onAttributesInitialized();
        final StaticLayoutData element27 = new StaticLayoutData();
        element27.onCheckOut();
        element27.setElementMap(elementMap);
        element27.setAlign(Alignment17.CENTER);
        element26.addBasicElement(element27);
        element27.onAttributesInitialized();
        element27.onChildrenAdded();
        final ItemElement element28 = new ItemElement();
        element28.onCheckOut();
        element28.setElementMap(elementMap);
        element28.setAttribute("text");
        element26.addBasicElement(element28);
        element28.onAttributesInitialized();
        element28.onChildrenAdded();
        element26.onChildrenAdded();
        element25.onChildrenAdded();
        element24.onChildrenAdded();
        final List element29 = new List();
        element29.onCheckOut();
        element29.setElementMap(elementMap);
        element29.setHorizontal(false);
        element29.setCellSize(new Dimension(100.0f, 16));
        element23.addBasicElement(element29);
        element29.onAttributesInitialized();
        this.method0(element29);
        element29.onChildrenAdded();
        element23.onChildrenAdded();
        checkOut17.onChildrenAdded();
        this.method1(checkOut9);
        this.method2(checkOut9);
        this.method3(checkOut9);
        checkOut9.onChildrenAdded();
        element17.onChildrenAdded();
        element16.onChildrenAdded();
        this.method12(tabbedContainer);
        tabbedContainer.onChildrenAdded();
        checkOut.onChildrenAdded();
        return checkOut;
    }
    
    public BasicElement method0(final BasicElement basicElement) {
        final ElementMap elementMap = this.elementMaps.peek();
        final ItemRenderer element = new ItemRenderer();
        element.onCheckOut();
        element.setElementMap(elementMap);
        basicElement.addBasicElement(element);
        element.onAttributesInitialized();
        final Label element2 = new Label();
        element2.onCheckOut();
        element2.setElementMap(elementMap);
        element2.setNonBlocking(true);
        element.addBasicElement(element2);
        element2.onAttributesInitialized();
        final ItemElement element3 = new ItemElement();
        element3.onCheckOut();
        element3.setElementMap(elementMap);
        element3.setAttribute("text");
        element2.addBasicElement(element3);
        element3.onAttributesInitialized();
        element3.onChildrenAdded();
        element2.onChildrenAdded();
        element.onChildrenAdded();
        return element;
    }
    
    public BasicElement method1(final BasicElement basicElement) {
        final ElementMap elementMap = this.elementMaps.peek();
        final Container checkOut = Container.checkOut();
        checkOut.setElementMap(elementMap);
        checkOut.setStyle("lineSeparator");
        checkOut.setPrefSize(new Dimension(0, 7));
        checkOut.setExpandable(false);
        basicElement.addBasicElement(checkOut);
        checkOut.onAttributesInitialized();
        final DecoratorAppearance appearance = checkOut.getAppearance();
        appearance.setElementMap(elementMap);
        checkOut.addBasicElement(appearance);
        appearance.onAttributesInitialized();
        final Margin checkOut2 = Margin.checkOut();
        checkOut2.setElementMap(elementMap);
        checkOut2.setInsets(new Insets(2, 0, 2, 0));
        appearance.addBasicElement(checkOut2);
        checkOut2.onAttributesInitialized();
        checkOut2.onChildrenAdded();
        appearance.onChildrenAdded();
        checkOut.onChildrenAdded();
        return checkOut;
    }
    
    public BasicElement method2(final BasicElement basicElement) {
        final ElementMap elementMap = this.elementMaps.peek();
        final Container checkOut = Container.checkOut();
        checkOut.setElementMap(elementMap);
        checkOut.setExpandable(false);
        basicElement.addBasicElement(checkOut);
        checkOut.onAttributesInitialized();
        final RowLayout checkOut2 = RowLayout.checkOut();
        checkOut2.setAlign(Alignment9.WEST);
        checkOut.addBasicElement(checkOut2);
        checkOut2.onAttributesInitialized();
        checkOut2.onChildrenAdded();
        final DecoratorAppearance appearance = checkOut.getAppearance();
        appearance.setElementMap(elementMap);
        checkOut.addBasicElement(appearance);
        appearance.onAttributesInitialized();
        final Margin checkOut3 = Margin.checkOut();
        checkOut3.setElementMap(elementMap);
        checkOut3.setInsets(new Insets(10, 0, 5, 0));
        appearance.addBasicElement(checkOut3);
        checkOut3.onAttributesInitialized();
        checkOut3.onChildrenAdded();
        appearance.onChildrenAdded();
        final Label element = new Label();
        element.onCheckOut();
        element.setElementMap(elementMap);
        element.setExpandable(false);
        element.setText("%options.chatWindowTransparency% 0".replace("%options.chatWindowTransparency%", Xulor.getInstance().getTranslatedString("options.chatWindowTransparency")));
        checkOut.addBasicElement(element);
        element.onAttributesInitialized();
        final DecoratorAppearance appearance2 = element.getAppearance();
        appearance2.setElementMap(elementMap);
        element.addBasicElement(appearance2);
        appearance2.onAttributesInitialized();
        final Margin checkOut4 = Margin.checkOut();
        checkOut4.setElementMap(elementMap);
        checkOut4.setInsets(new Insets(0, 0, 0, 3));
        appearance2.addBasicElement(checkOut4);
        checkOut4.onAttributesInitialized();
        checkOut4.onChildrenAdded();
        appearance2.onChildrenAdded();
        element.onChildrenAdded();
        final Slider element2 = new Slider();
        element2.onCheckOut();
        element2.setElementMap(elementMap);
        element2.setExpandable(false);
        element2.setHorizontal(true);
        element2.setStyle("volume");
        element2.setPrefSize(new Dimension(250, 0));
        final SliderMovedListener onSliderMove = new SliderMovedListener();
        onSliderMove.setCallBackFunc("wakfu.chatOptions:setChatWindowTransparency");
        element2.setOnSliderMove(onSliderMove);
        checkOut.addBasicElement(element2);
        element2.onAttributesInitialized();
        final PropertyElement checkOut5 = PropertyElement.checkOut();
        checkOut5.setElementMap(elementMap);
        checkOut5.setName("gamePreferences");
        checkOut5.setAttribute("value");
        checkOut5.setField("chatWindowTransparency");
        element2.addBasicElement(checkOut5);
        checkOut5.onAttributesInitialized();
        checkOut5.onChildrenAdded();
        element2.onChildrenAdded();
        final Label element3 = new Label();
        element3.onCheckOut();
        element3.setElementMap(elementMap);
        element3.setExpandable(false);
        element3.setText("100%");
        checkOut.addBasicElement(element3);
        element3.onAttributesInitialized();
        final DecoratorAppearance appearance3 = element3.getAppearance();
        appearance3.setElementMap(elementMap);
        element3.addBasicElement(appearance3);
        appearance3.onAttributesInitialized();
        final Margin checkOut6 = Margin.checkOut();
        checkOut6.setElementMap(elementMap);
        checkOut6.setInsets(new Insets(0, 3, 0, 0));
        appearance3.addBasicElement(checkOut6);
        checkOut6.onAttributesInitialized();
        checkOut6.onChildrenAdded();
        appearance3.onChildrenAdded();
        element3.onChildrenAdded();
        checkOut.onChildrenAdded();
        return checkOut;
    }
    
    public BasicElement method3(final BasicElement basicElement) {
        final ElementMap elementMap = this.elementMaps.peek();
        final Container checkOut = Container.checkOut();
        checkOut.setElementMap(elementMap);
        checkOut.setExpandable(false);
        basicElement.addBasicElement(checkOut);
        checkOut.onAttributesInitialized();
        final RowLayout checkOut2 = RowLayout.checkOut();
        checkOut2.setAlign(Alignment9.WEST);
        checkOut.addBasicElement(checkOut2);
        checkOut2.onAttributesInitialized();
        checkOut2.onChildrenAdded();
        final Container checkOut3 = Container.checkOut();
        checkOut3.setElementMap(elementMap);
        checkOut3.setPrefSize(new Dimension(170, 150));
        checkOut3.setExpandable(false);
        checkOut3.setStyle("caracs");
        checkOut.addBasicElement(checkOut3);
        checkOut3.onAttributesInitialized();
        final RowLayout checkOut4 = RowLayout.checkOut();
        checkOut4.setAlign(Alignment9.NORTH);
        checkOut4.setHorizontal(false);
        checkOut3.addBasicElement(checkOut4);
        checkOut4.onAttributesInitialized();
        checkOut4.onChildrenAdded();
        final Label element = new Label();
        element.onCheckOut();
        element.setElementMap(elementMap);
        element.setStyle("bold");
        element.setText("%chat.filters%%colon%".replace("%chat.filters%", Xulor.getInstance().getTranslatedString("chat.filters")).replace("%colon%", Xulor.getInstance().getTranslatedString("colon")));
        element.setExpandable(false);
        checkOut3.addBasicElement(element);
        element.onAttributesInitialized();
        final DecoratorAppearance appearance = element.getAppearance();
        appearance.setElementMap(elementMap);
        element.addBasicElement(appearance);
        appearance.onAttributesInitialized();
        final Margin checkOut5 = Margin.checkOut();
        checkOut5.setElementMap(elementMap);
        checkOut5.setInsets(new Insets(0, 0, 0, 5));
        appearance.addBasicElement(checkOut5);
        checkOut5.onAttributesInitialized();
        checkOut5.onChildrenAdded();
        appearance.onChildrenAdded();
        element.onChildrenAdded();
        final List element2 = new List();
        element2.onCheckOut();
        element2.setElementMap(elementMap);
        element2.setCellSize(new Dimension(150, 15));
        checkOut3.addBasicElement(element2);
        element2.onAttributesInitialized();
        final PropertyElement checkOut6 = PropertyElement.checkOut();
        checkOut6.setElementMap(elementMap);
        checkOut6.setAttribute("content");
        checkOut6.setName("chatManager");
        checkOut6.setField("allFiltersList");
        element2.addBasicElement(checkOut6);
        checkOut6.onAttributesInitialized();
        checkOut6.onChildrenAdded();
        final ItemRenderer element3 = new ItemRenderer();
        element3.onCheckOut();
        element3.setElementMap(elementMap);
        final ItemClickListener onItemClick = new ItemClickListener();
        onItemClick.setCallBackFunc("wakfu.chatOptions:selectFilter");
        element3.setOnItemClick(onItemClick);
        final ItemOverListener onItemOver = new ItemOverListener();
        onItemOver.setCallBackFunc("wakfu.chatOptions:onFilterOver");
        element3.setOnItemOver(onItemOver);
        final ItemOutListener onItemOut = new ItemOutListener();
        onItemOut.setCallBackFunc("wakfu.chatOptions:onFilterOut");
        element3.setOnItemOut(onItemOut);
        element2.addBasicElement(element3);
        element3.onAttributesInitialized();
        final ConditionResult element4 = new ConditionResult();
        element4.onCheckOut();
        element4.setElementMap(elementMap);
        element3.addBasicElement(element4);
        element4.onAttributesInitialized();
        final ItemCondition element5 = new ItemCondition();
        element5.onCheckOut();
        element5.setElementMap(elementMap);
        element4.addBasicElement(element5);
        element5.onAttributesInitialized();
        final NotNullCondition element6 = new NotNullCondition();
        element6.onCheckOut();
        element6.setElementMap(elementMap);
        element5.addBasicElement(element6);
        element6.onAttributesInitialized();
        element6.onChildrenAdded();
        element5.onChildrenAdded();
        element4.onChildrenAdded();
        final Container checkOut7 = Container.checkOut();
        checkOut7.setElementMap(elementMap);
        element3.addBasicElement(checkOut7);
        checkOut7.onAttributesInitialized();
        final DecoratorAppearance appearance2 = checkOut7.getAppearance();
        appearance2.setElementMap(elementMap);
        checkOut7.addBasicElement(appearance2);
        appearance2.onAttributesInitialized();
        final PlainBackground element7 = new PlainBackground();
        element7.onCheckOut();
        element7.setElementMap(elementMap);
        appearance2.addBasicElement(element7);
        element7.onAttributesInitialized();
        final PropertyElement checkOut8 = PropertyElement.checkOut();
        checkOut8.setElementMap(elementMap);
        checkOut8.setAttribute("color");
        checkOut8.setName("chat.filterOver");
        element7.addBasicElement(checkOut8);
        checkOut8.onAttributesInitialized();
        final ConditionResult element8 = new ConditionResult();
        element8.onCheckOut();
        element8.setElementMap(elementMap);
        element8.setValue("0.69,0.68,0.65,1");
        element8.setElseValue("1,1,1,0");
        checkOut8.addBasicElement(element8);
        element8.onAttributesInitialized();
        final EqualCondition element9 = new EqualCondition();
        element9.onCheckOut();
        element9.setElementMap(elementMap);
        element8.addBasicElement(element9);
        element9.onAttributesInitialized();
        final ItemElement element10 = new ItemElement();
        element10.onCheckOut();
        element10.setElementMap(elementMap);
        element10.setAttribute("value");
        element9.addBasicElement(element10);
        element10.onAttributesInitialized();
        element10.onChildrenAdded();
        element9.onChildrenAdded();
        element8.onChildrenAdded();
        checkOut8.onChildrenAdded();
        element7.onChildrenAdded();
        final PlainBorder element11 = new PlainBorder();
        element11.onCheckOut();
        element11.setElementMap(elementMap);
        element11.setSpacing(new Insets(1, 1, 1, 1));
        element11.setColor(new Color(0.0f, 0.0f, 0.0f, 0.0f));
        appearance2.addBasicElement(element11);
        element11.onAttributesInitialized();
        final PropertyElement checkOut9 = PropertyElement.checkOut();
        checkOut9.setElementMap(elementMap);
        checkOut9.setAttribute("color");
        checkOut9.setName("chat.colorEditedObject");
        checkOut9.setField("value");
        element11.addBasicElement(checkOut9);
        checkOut9.onAttributesInitialized();
        final ConditionResult element12 = new ConditionResult();
        element12.onCheckOut();
        element12.setElementMap(elementMap);
        element12.setValue("0,0,0,1");
        element12.setElseValue("1,1,1,0");
        checkOut9.addBasicElement(element12);
        element12.onAttributesInitialized();
        final EqualCondition element13 = new EqualCondition();
        element13.onCheckOut();
        element13.setElementMap(elementMap);
        element12.addBasicElement(element13);
        element13.onAttributesInitialized();
        final ItemElement element14 = new ItemElement();
        element14.onCheckOut();
        element14.setElementMap(elementMap);
        element14.setAttribute("value");
        element13.addBasicElement(element14);
        element14.onAttributesInitialized();
        element14.onChildrenAdded();
        element13.onChildrenAdded();
        element12.onChildrenAdded();
        checkOut9.onChildrenAdded();
        element11.onChildrenAdded();
        appearance2.onChildrenAdded();
        final String id = "filterName";
        final Data data = new Data();
        data.onCheckOut();
        data.setElementMap(elementMap);
        if (elementMap != null && id != null) {
            elementMap.add(id, data);
        }
        checkOut7.addBasicElement(data);
        data.onAttributesInitialized();
        final ItemElement element15 = new ItemElement();
        element15.onCheckOut();
        element15.setElementMap(elementMap);
        element15.setAttribute("value");
        element15.setField("name");
        data.addBasicElement(element15);
        element15.onAttributesInitialized();
        element15.onChildrenAdded();
        data.onChildrenAdded();
        final RowLayout checkOut10 = RowLayout.checkOut();
        checkOut10.setAlign(Alignment9.WEST);
        checkOut7.addBasicElement(checkOut10);
        checkOut10.onAttributesInitialized();
        checkOut10.onChildrenAdded();
        final Label element16 = new Label();
        element16.onCheckOut();
        element16.setElementMap(elementMap);
        element16.setExpandable(false);
        element16.setMaxWidth(150);
        checkOut7.addBasicElement(element16);
        element16.onAttributesInitialized();
        final DecoratorAppearance appearance3 = element16.getAppearance();
        appearance3.setElementMap(elementMap);
        ((TextWidgetAppearance)appearance3).setAlignment(Alignment9.WEST);
        element16.addBasicElement(appearance3);
        appearance3.onAttributesInitialized();
        appearance3.onChildrenAdded();
        final ItemElement element17 = new ItemElement();
        element17.onCheckOut();
        element17.setElementMap(elementMap);
        element17.setAttribute("text");
        element17.setField("name");
        element16.addBasicElement(element17);
        element17.onAttributesInitialized();
        element17.onChildrenAdded();
        element16.onChildrenAdded();
        final Spacer element18 = new Spacer();
        element18.onCheckOut();
        element18.setElementMap(elementMap);
        checkOut7.addBasicElement(element18);
        element18.onAttributesInitialized();
        element18.onChildrenAdded();
        final Container checkOut11 = Container.checkOut();
        checkOut11.setElementMap(elementMap);
        checkOut11.setPrefSize(new Dimension(15, 15));
        checkOut11.setExpandable(false);
        checkOut7.addBasicElement(checkOut11);
        checkOut11.onAttributesInitialized();
        final DecoratorAppearance appearance4 = checkOut11.getAppearance();
        appearance4.setElementMap(elementMap);
        checkOut11.addBasicElement(appearance4);
        appearance4.onAttributesInitialized();
        final PlainBackground element19 = new PlainBackground();
        element19.onCheckOut();
        element19.setElementMap(elementMap);
        appearance4.addBasicElement(element19);
        element19.onAttributesInitialized();
        final ItemElement element20 = new ItemElement();
        element20.onCheckOut();
        element20.setElementMap(elementMap);
        element20.setAttribute("color");
        element20.setField("color");
        element19.addBasicElement(element20);
        element20.onAttributesInitialized();
        element20.onChildrenAdded();
        element19.onChildrenAdded();
        final PlainBorder element21 = new PlainBorder();
        element21.onCheckOut();
        element21.setElementMap(elementMap);
        element21.setColor(new Color(0.0f, 0.0f, 0.0f, 1.0f));
        element21.setSpacing(new Insets(1, 1, 1, 1));
        appearance4.addBasicElement(element21);
        element21.onAttributesInitialized();
        element21.onChildrenAdded();
        appearance4.onChildrenAdded();
        checkOut11.onChildrenAdded();
        checkOut7.onChildrenAdded();
        element3.onChildrenAdded();
        element2.onChildrenAdded();
        checkOut3.onChildrenAdded();
        final Spacer element22 = new Spacer();
        element22.onCheckOut();
        element22.setElementMap(elementMap);
        checkOut.addBasicElement(element22);
        element22.onAttributesInitialized();
        element22.onChildrenAdded();
        final Container checkOut12 = Container.checkOut();
        checkOut12.setElementMap(elementMap);
        checkOut.addBasicElement(checkOut12);
        checkOut12.onAttributesInitialized();
        final RowLayout checkOut13 = RowLayout.checkOut();
        checkOut13.setHorizontal(false);
        checkOut13.setAlign(Alignment9.NORTH);
        checkOut12.addBasicElement(checkOut13);
        checkOut13.onAttributesInitialized();
        checkOut13.onChildrenAdded();
        final Container checkOut14 = Container.checkOut();
        checkOut14.setElementMap(elementMap);
        checkOut14.setPrefSize(new Dimension(0, 20));
        checkOut14.setExpandable(false);
        checkOut12.addBasicElement(checkOut14);
        checkOut14.onAttributesInitialized();
        final Label element23 = new Label();
        element23.onCheckOut();
        element23.setElementMap(elementMap);
        element23.setStyle("bold");
        element23.setExpandable(false);
        checkOut14.addBasicElement(element23);
        element23.onAttributesInitialized();
        final DecoratorAppearance appearance5 = element23.getAppearance();
        appearance5.setElementMap(elementMap);
        ((TextWidgetAppearance)appearance5).setAlignment(Alignment9.CENTER);
        element23.addBasicElement(appearance5);
        appearance5.onAttributesInitialized();
        final Margin checkOut15 = Margin.checkOut();
        checkOut15.setElementMap(elementMap);
        checkOut15.setInsets(new Insets(0, 0, 5, 0));
        appearance5.addBasicElement(checkOut15);
        checkOut15.onAttributesInitialized();
        checkOut15.onChildrenAdded();
        appearance5.onChildrenAdded();
        final PropertyElement checkOut16 = PropertyElement.checkOut();
        checkOut16.setElementMap(elementMap);
        checkOut16.setAttribute("text");
        checkOut16.setName("chat.colorEditedObject");
        checkOut16.setField("name");
        element23.addBasicElement(checkOut16);
        checkOut16.onAttributesInitialized();
        checkOut16.onChildrenAdded();
        final PropertyElement checkOut17 = PropertyElement.checkOut();
        checkOut17.setElementMap(elementMap);
        checkOut17.setAttribute("visible");
        checkOut17.setName("chat.colorEditedObject");
        element23.addBasicElement(checkOut17);
        checkOut17.onAttributesInitialized();
        final ConditionResult element24 = new ConditionResult();
        element24.onCheckOut();
        element24.setElementMap(elementMap);
        checkOut17.addBasicElement(element24);
        element24.onAttributesInitialized();
        final NotNullCondition element25 = new NotNullCondition();
        element25.onCheckOut();
        element25.setElementMap(elementMap);
        element24.addBasicElement(element25);
        element25.onAttributesInitialized();
        element25.onChildrenAdded();
        element24.onChildrenAdded();
        checkOut17.onChildrenAdded();
        element23.onChildrenAdded();
        checkOut14.onChildrenAdded();
        final Container checkOut18 = Container.checkOut();
        checkOut18.setElementMap(elementMap);
        checkOut18.setExpandable(false);
        checkOut12.addBasicElement(checkOut18);
        checkOut18.onAttributesInitialized();
        final RowLayout checkOut19 = RowLayout.checkOut();
        checkOut19.setHorizontal(false);
        checkOut19.setAlign(Alignment9.NORTH);
        checkOut18.addBasicElement(checkOut19);
        checkOut19.onAttributesInitialized();
        checkOut19.onChildrenAdded();
        final Container checkOut20 = Container.checkOut();
        checkOut20.setElementMap(elementMap);
        checkOut20.setExpandable(false);
        checkOut18.addBasicElement(checkOut20);
        checkOut20.onAttributesInitialized();
        final RowLayout checkOut21 = RowLayout.checkOut();
        checkOut21.setAlign(Alignment9.WEST);
        checkOut20.addBasicElement(checkOut21);
        checkOut21.onAttributesInitialized();
        checkOut21.onChildrenAdded();
        final Label element26 = new Label();
        element26.onCheckOut();
        element26.setElementMap(elementMap);
        element26.setExpandable(false);
        element26.setText("%red%".replace("%red%", Xulor.getInstance().getTranslatedString("red")));
        element26.setPrefSize(new Dimension(50, 0));
        checkOut20.addBasicElement(element26);
        element26.onAttributesInitialized();
        element26.onChildrenAdded();
        final Label element27 = new Label();
        element27.onCheckOut();
        element27.setElementMap(elementMap);
        element27.setExpandable(false);
        element27.setText("0");
        checkOut20.addBasicElement(element27);
        element27.onAttributesInitialized();
        element27.onChildrenAdded();
        final Slider element28 = new Slider();
        element28.onCheckOut();
        element28.setElementMap(elementMap);
        element28.setExpandable(false);
        element28.setHorizontal(true);
        element28.setStyle("volume");
        element28.setPrefSize(new Dimension(100, 0));
        final SliderMovedListener onSliderMove = new SliderMovedListener();
        onSliderMove.setCallBackFunc("wakfu.chatOptions:setFilterRed");
        element28.setOnSliderMove(onSliderMove);
        checkOut20.addBasicElement(element28);
        element28.onAttributesInitialized();
        final PropertyElement checkOut22 = PropertyElement.checkOut();
        checkOut22.setElementMap(elementMap);
        checkOut22.setAttribute("value");
        checkOut22.setName("chat.colorEditedObject");
        checkOut22.setField("red");
        element28.addBasicElement(checkOut22);
        checkOut22.onAttributesInitialized();
        checkOut22.onChildrenAdded();
        final PropertyElement checkOut23 = PropertyElement.checkOut();
        checkOut23.setElementMap(elementMap);
        checkOut23.setAttribute("enabled");
        checkOut23.setName("chat.colorEditedObject");
        element28.addBasicElement(checkOut23);
        checkOut23.onAttributesInitialized();
        final ConditionResult element29 = new ConditionResult();
        element29.onCheckOut();
        element29.setElementMap(elementMap);
        checkOut23.addBasicElement(element29);
        element29.onAttributesInitialized();
        final NotNullCondition element30 = new NotNullCondition();
        element30.onCheckOut();
        element30.setElementMap(elementMap);
        element29.addBasicElement(element30);
        element30.onAttributesInitialized();
        element30.onChildrenAdded();
        element29.onChildrenAdded();
        checkOut23.onChildrenAdded();
        final DecoratorAppearance appearance6 = element28.getAppearance();
        appearance6.setElementMap(elementMap);
        element28.addBasicElement(appearance6);
        appearance6.onAttributesInitialized();
        final Margin checkOut24 = Margin.checkOut();
        checkOut24.setElementMap(elementMap);
        checkOut24.setInsets(new Insets(0, 5, 0, 5));
        appearance6.addBasicElement(checkOut24);
        checkOut24.onAttributesInitialized();
        checkOut24.onChildrenAdded();
        appearance6.onChildrenAdded();
        element28.onChildrenAdded();
        final Label element31 = new Label();
        element31.onCheckOut();
        element31.setElementMap(elementMap);
        element31.setExpandable(false);
        element31.setText("100%");
        checkOut20.addBasicElement(element31);
        element31.onAttributesInitialized();
        element31.onChildrenAdded();
        final String id2 = "redTextEditor";
        final TextEditor textEditor = new TextEditor();
        textEditor.onCheckOut();
        textEditor.setElementMap(elementMap);
        if (elementMap != null && id2 != null) {
            elementMap.add(id2, textEditor);
        }
        textEditor.setPrefSize(new Dimension(25, 15));
        textEditor.setExpandable(false);
        textEditor.setMaxChars(3);
        textEditor.setRestrict("[0-9]+");
        final KeyTypedListener onKeyType = new KeyTypedListener();
        onKeyType.setCallBackFunc("wakfu.chatOptions:setFilterRed(redTextEditor)");
        textEditor.setOnKeyType(onKeyType);
        checkOut20.addBasicElement(textEditor);
        textEditor.onAttributesInitialized();
        final PropertyElement checkOut25 = PropertyElement.checkOut();
        checkOut25.setElementMap(elementMap);
        checkOut25.setAttribute("text");
        checkOut25.setName("chat.colorEditedObject");
        checkOut25.setField("red255");
        textEditor.addBasicElement(checkOut25);
        checkOut25.onAttributesInitialized();
        checkOut25.onChildrenAdded();
        final DecoratorAppearance appearance7 = textEditor.getAppearance();
        appearance7.setElementMap(elementMap);
        ((TextWidgetAppearance)appearance7).setAlign(Alignment9.EAST);
        textEditor.addBasicElement(appearance7);
        appearance7.onAttributesInitialized();
        appearance7.onChildrenAdded();
        final PropertyElement checkOut26 = PropertyElement.checkOut();
        checkOut26.setElementMap(elementMap);
        checkOut26.setAttribute("editable");
        checkOut26.setName("chat.colorEditedObject");
        textEditor.addBasicElement(checkOut26);
        checkOut26.onAttributesInitialized();
        final ConditionResult element32 = new ConditionResult();
        element32.onCheckOut();
        element32.setElementMap(elementMap);
        checkOut26.addBasicElement(element32);
        element32.onAttributesInitialized();
        final NotNullCondition element33 = new NotNullCondition();
        element33.onCheckOut();
        element33.setElementMap(elementMap);
        element32.addBasicElement(element33);
        element33.onAttributesInitialized();
        element33.onChildrenAdded();
        element32.onChildrenAdded();
        checkOut26.onChildrenAdded();
        final DecoratorAppearance appearance8 = textEditor.getAppearance();
        appearance8.setElementMap(elementMap);
        textEditor.addBasicElement(appearance8);
        appearance8.onAttributesInitialized();
        final Margin checkOut27 = Margin.checkOut();
        checkOut27.setElementMap(elementMap);
        checkOut27.setInsets(new Insets(0, 5, 0, 0));
        appearance8.addBasicElement(checkOut27);
        checkOut27.onAttributesInitialized();
        checkOut27.onChildrenAdded();
        appearance8.onChildrenAdded();
        textEditor.onChildrenAdded();
        checkOut20.onChildrenAdded();
        final Container checkOut28 = Container.checkOut();
        checkOut28.setElementMap(elementMap);
        checkOut28.setExpandable(false);
        checkOut18.addBasicElement(checkOut28);
        checkOut28.onAttributesInitialized();
        this.method4(checkOut28);
        this.method5(checkOut28);
        this.method6(checkOut28);
        this.method7(checkOut28);
        this.method8(checkOut28);
        this.method9(checkOut28);
        checkOut28.onChildrenAdded();
        this.method10(checkOut18);
        checkOut18.onChildrenAdded();
        this.method11(checkOut12);
        checkOut12.onChildrenAdded();
        checkOut.onChildrenAdded();
        return checkOut;
    }
    
    public BasicElement method4(final BasicElement basicElement) {
        final ElementMap elementMap = this.elementMaps.peek();
        final RowLayout checkOut = RowLayout.checkOut();
        checkOut.setAlign(Alignment9.WEST);
        basicElement.addBasicElement(checkOut);
        checkOut.onAttributesInitialized();
        checkOut.onChildrenAdded();
        return null;
    }
    
    public BasicElement method5(final BasicElement basicElement) {
        final ElementMap elementMap = this.elementMaps.peek();
        final Label element = new Label();
        element.onCheckOut();
        element.setElementMap(elementMap);
        element.setExpandable(false);
        element.setText("%green%".replace("%green%", Xulor.getInstance().getTranslatedString("green")));
        element.setPrefSize(new Dimension(50, 0));
        basicElement.addBasicElement(element);
        element.onAttributesInitialized();
        element.onChildrenAdded();
        return element;
    }
    
    public BasicElement method6(final BasicElement basicElement) {
        final ElementMap elementMap = this.elementMaps.peek();
        final Label element = new Label();
        element.onCheckOut();
        element.setElementMap(elementMap);
        element.setExpandable(false);
        element.setText("0");
        basicElement.addBasicElement(element);
        element.onAttributesInitialized();
        element.onChildrenAdded();
        return element;
    }
    
    public BasicElement method7(final BasicElement basicElement) {
        final ElementMap elementMap = this.elementMaps.peek();
        final Slider element = new Slider();
        element.onCheckOut();
        element.setElementMap(elementMap);
        element.setExpandable(false);
        element.setHorizontal(true);
        element.setStyle("volume");
        element.setPrefSize(new Dimension(100, 0));
        final SliderMovedListener onSliderMove = new SliderMovedListener();
        onSliderMove.setCallBackFunc("wakfu.chatOptions:setFilterGreen");
        element.setOnSliderMove(onSliderMove);
        basicElement.addBasicElement(element);
        element.onAttributesInitialized();
        final PropertyElement checkOut = PropertyElement.checkOut();
        checkOut.setElementMap(elementMap);
        checkOut.setAttribute("value");
        checkOut.setName("chat.colorEditedObject");
        checkOut.setField("green");
        element.addBasicElement(checkOut);
        checkOut.onAttributesInitialized();
        checkOut.onChildrenAdded();
        final PropertyElement checkOut2 = PropertyElement.checkOut();
        checkOut2.setElementMap(elementMap);
        checkOut2.setAttribute("enabled");
        checkOut2.setName("chat.colorEditedObject");
        element.addBasicElement(checkOut2);
        checkOut2.onAttributesInitialized();
        final ConditionResult element2 = new ConditionResult();
        element2.onCheckOut();
        element2.setElementMap(elementMap);
        checkOut2.addBasicElement(element2);
        element2.onAttributesInitialized();
        final NotNullCondition element3 = new NotNullCondition();
        element3.onCheckOut();
        element3.setElementMap(elementMap);
        element2.addBasicElement(element3);
        element3.onAttributesInitialized();
        element3.onChildrenAdded();
        element2.onChildrenAdded();
        checkOut2.onChildrenAdded();
        final DecoratorAppearance appearance = element.getAppearance();
        appearance.setElementMap(elementMap);
        element.addBasicElement(appearance);
        appearance.onAttributesInitialized();
        final Margin checkOut3 = Margin.checkOut();
        checkOut3.setElementMap(elementMap);
        checkOut3.setInsets(new Insets(0, 5, 0, 5));
        appearance.addBasicElement(checkOut3);
        checkOut3.onAttributesInitialized();
        checkOut3.onChildrenAdded();
        appearance.onChildrenAdded();
        element.onChildrenAdded();
        return element;
    }
    
    public BasicElement method8(final BasicElement basicElement) {
        final ElementMap elementMap = this.elementMaps.peek();
        final Label element = new Label();
        element.onCheckOut();
        element.setElementMap(elementMap);
        element.setExpandable(false);
        element.setText("100%");
        basicElement.addBasicElement(element);
        element.onAttributesInitialized();
        element.onChildrenAdded();
        return element;
    }
    
    public BasicElement method9(final BasicElement basicElement) {
        final ElementMap elementMap = this.elementMaps.peek();
        final String id = "greenTextEditor";
        final TextEditor textEditor = new TextEditor();
        textEditor.onCheckOut();
        textEditor.setElementMap(elementMap);
        if (elementMap != null && id != null) {
            elementMap.add(id, textEditor);
        }
        textEditor.setPrefSize(new Dimension(25, 15));
        textEditor.setExpandable(false);
        textEditor.setMaxChars(3);
        textEditor.setRestrict("[0-9]+");
        final KeyTypedListener onKeyType = new KeyTypedListener();
        onKeyType.setCallBackFunc("wakfu.chatOptions:setFilterGreen(greenTextEditor)");
        textEditor.setOnKeyType(onKeyType);
        basicElement.addBasicElement(textEditor);
        textEditor.onAttributesInitialized();
        final PropertyElement checkOut = PropertyElement.checkOut();
        checkOut.setElementMap(elementMap);
        checkOut.setAttribute("text");
        checkOut.setName("chat.colorEditedObject");
        checkOut.setField("green255");
        textEditor.addBasicElement(checkOut);
        checkOut.onAttributesInitialized();
        checkOut.onChildrenAdded();
        final DecoratorAppearance appearance = textEditor.getAppearance();
        appearance.setElementMap(elementMap);
        ((TextWidgetAppearance)appearance).setAlign(Alignment9.EAST);
        textEditor.addBasicElement(appearance);
        appearance.onAttributesInitialized();
        appearance.onChildrenAdded();
        final PropertyElement checkOut2 = PropertyElement.checkOut();
        checkOut2.setElementMap(elementMap);
        checkOut2.setAttribute("editable");
        checkOut2.setName("chat.colorEditedObject");
        textEditor.addBasicElement(checkOut2);
        checkOut2.onAttributesInitialized();
        final ConditionResult element = new ConditionResult();
        element.onCheckOut();
        element.setElementMap(elementMap);
        checkOut2.addBasicElement(element);
        element.onAttributesInitialized();
        final NotNullCondition element2 = new NotNullCondition();
        element2.onCheckOut();
        element2.setElementMap(elementMap);
        element.addBasicElement(element2);
        element2.onAttributesInitialized();
        element2.onChildrenAdded();
        element.onChildrenAdded();
        checkOut2.onChildrenAdded();
        final DecoratorAppearance appearance2 = textEditor.getAppearance();
        appearance2.setElementMap(elementMap);
        textEditor.addBasicElement(appearance2);
        appearance2.onAttributesInitialized();
        final Margin checkOut3 = Margin.checkOut();
        checkOut3.setElementMap(elementMap);
        checkOut3.setInsets(new Insets(0, 5, 0, 0));
        appearance2.addBasicElement(checkOut3);
        checkOut3.onAttributesInitialized();
        checkOut3.onChildrenAdded();
        appearance2.onChildrenAdded();
        textEditor.onChildrenAdded();
        return textEditor;
    }
    
    public BasicElement method10(final BasicElement basicElement) {
        final ElementMap elementMap = this.elementMaps.peek();
        final Container checkOut = Container.checkOut();
        checkOut.setElementMap(elementMap);
        checkOut.setExpandable(false);
        basicElement.addBasicElement(checkOut);
        checkOut.onAttributesInitialized();
        final RowLayout checkOut2 = RowLayout.checkOut();
        checkOut2.setAlign(Alignment9.WEST);
        checkOut.addBasicElement(checkOut2);
        checkOut2.onAttributesInitialized();
        checkOut2.onChildrenAdded();
        final Label element = new Label();
        element.onCheckOut();
        element.setElementMap(elementMap);
        element.setExpandable(false);
        element.setText("%blue%".replace("%blue%", Xulor.getInstance().getTranslatedString("blue")));
        element.setPrefSize(new Dimension(50, 0));
        checkOut.addBasicElement(element);
        element.onAttributesInitialized();
        element.onChildrenAdded();
        final Label element2 = new Label();
        element2.onCheckOut();
        element2.setElementMap(elementMap);
        element2.setExpandable(false);
        element2.setText("0");
        checkOut.addBasicElement(element2);
        element2.onAttributesInitialized();
        element2.onChildrenAdded();
        final Slider element3 = new Slider();
        element3.onCheckOut();
        element3.setElementMap(elementMap);
        element3.setExpandable(false);
        element3.setHorizontal(true);
        element3.setStyle("volume");
        element3.setPrefSize(new Dimension(100, 0));
        final SliderMovedListener onSliderMove = new SliderMovedListener();
        onSliderMove.setCallBackFunc("wakfu.chatOptions:setFilterBlue");
        element3.setOnSliderMove(onSliderMove);
        checkOut.addBasicElement(element3);
        element3.onAttributesInitialized();
        final PropertyElement checkOut3 = PropertyElement.checkOut();
        checkOut3.setElementMap(elementMap);
        checkOut3.setAttribute("value");
        checkOut3.setName("chat.colorEditedObject");
        checkOut3.setField("blue");
        element3.addBasicElement(checkOut3);
        checkOut3.onAttributesInitialized();
        checkOut3.onChildrenAdded();
        final PropertyElement checkOut4 = PropertyElement.checkOut();
        checkOut4.setElementMap(elementMap);
        checkOut4.setAttribute("enabled");
        checkOut4.setName("chat.colorEditedObject");
        element3.addBasicElement(checkOut4);
        checkOut4.onAttributesInitialized();
        final ConditionResult element4 = new ConditionResult();
        element4.onCheckOut();
        element4.setElementMap(elementMap);
        checkOut4.addBasicElement(element4);
        element4.onAttributesInitialized();
        final NotNullCondition element5 = new NotNullCondition();
        element5.onCheckOut();
        element5.setElementMap(elementMap);
        element4.addBasicElement(element5);
        element5.onAttributesInitialized();
        element5.onChildrenAdded();
        element4.onChildrenAdded();
        checkOut4.onChildrenAdded();
        final DecoratorAppearance appearance = element3.getAppearance();
        appearance.setElementMap(elementMap);
        element3.addBasicElement(appearance);
        appearance.onAttributesInitialized();
        final Margin checkOut5 = Margin.checkOut();
        checkOut5.setElementMap(elementMap);
        checkOut5.setInsets(new Insets(0, 5, 0, 5));
        appearance.addBasicElement(checkOut5);
        checkOut5.onAttributesInitialized();
        checkOut5.onChildrenAdded();
        appearance.onChildrenAdded();
        element3.onChildrenAdded();
        final Label element6 = new Label();
        element6.onCheckOut();
        element6.setElementMap(elementMap);
        element6.setExpandable(false);
        element6.setText("100%");
        checkOut.addBasicElement(element6);
        element6.onAttributesInitialized();
        element6.onChildrenAdded();
        final String id = "blueTextEditor";
        final TextEditor textEditor = new TextEditor();
        textEditor.onCheckOut();
        textEditor.setElementMap(elementMap);
        if (elementMap != null && id != null) {
            elementMap.add(id, textEditor);
        }
        textEditor.setPrefSize(new Dimension(25, 15));
        textEditor.setExpandable(false);
        textEditor.setMaxChars(3);
        textEditor.setRestrict("[0-9]+");
        final KeyTypedListener onKeyType = new KeyTypedListener();
        onKeyType.setCallBackFunc("wakfu.chatOptions:setFilterBlue(blueTextEditor)");
        textEditor.setOnKeyType(onKeyType);
        checkOut.addBasicElement(textEditor);
        textEditor.onAttributesInitialized();
        final PropertyElement checkOut6 = PropertyElement.checkOut();
        checkOut6.setElementMap(elementMap);
        checkOut6.setAttribute("text");
        checkOut6.setName("chat.colorEditedObject");
        checkOut6.setField("blue255");
        textEditor.addBasicElement(checkOut6);
        checkOut6.onAttributesInitialized();
        checkOut6.onChildrenAdded();
        final DecoratorAppearance appearance2 = textEditor.getAppearance();
        appearance2.setElementMap(elementMap);
        ((TextWidgetAppearance)appearance2).setAlign(Alignment9.EAST);
        textEditor.addBasicElement(appearance2);
        appearance2.onAttributesInitialized();
        appearance2.onChildrenAdded();
        final PropertyElement checkOut7 = PropertyElement.checkOut();
        checkOut7.setElementMap(elementMap);
        checkOut7.setAttribute("editable");
        checkOut7.setName("chat.colorEditedObject");
        textEditor.addBasicElement(checkOut7);
        checkOut7.onAttributesInitialized();
        final ConditionResult element7 = new ConditionResult();
        element7.onCheckOut();
        element7.setElementMap(elementMap);
        checkOut7.addBasicElement(element7);
        element7.onAttributesInitialized();
        final NotNullCondition element8 = new NotNullCondition();
        element8.onCheckOut();
        element8.setElementMap(elementMap);
        element7.addBasicElement(element8);
        element8.onAttributesInitialized();
        element8.onChildrenAdded();
        element7.onChildrenAdded();
        checkOut7.onChildrenAdded();
        final DecoratorAppearance appearance3 = textEditor.getAppearance();
        appearance3.setElementMap(elementMap);
        textEditor.addBasicElement(appearance3);
        appearance3.onAttributesInitialized();
        final Margin checkOut8 = Margin.checkOut();
        checkOut8.setElementMap(elementMap);
        checkOut8.setInsets(new Insets(0, 5, 0, 0));
        appearance3.addBasicElement(checkOut8);
        checkOut8.onAttributesInitialized();
        checkOut8.onChildrenAdded();
        appearance3.onChildrenAdded();
        textEditor.onChildrenAdded();
        checkOut.onChildrenAdded();
        return checkOut;
    }
    
    public BasicElement method11(final BasicElement basicElement) {
        final ElementMap elementMap = this.elementMaps.peek();
        final Container checkOut = Container.checkOut();
        checkOut.setElementMap(elementMap);
        checkOut.setExpandable(false);
        basicElement.addBasicElement(checkOut);
        checkOut.onAttributesInitialized();
        final RowLayout checkOut2 = RowLayout.checkOut();
        checkOut2.setHorizontal(false);
        checkOut.addBasicElement(checkOut2);
        checkOut2.onAttributesInitialized();
        checkOut2.onChildrenAdded();
        final Container checkOut3 = Container.checkOut();
        checkOut3.setElementMap(elementMap);
        checkOut3.setPrefSize(new Dimension(0, 40));
        checkOut3.setExpandable(false);
        checkOut.addBasicElement(checkOut3);
        checkOut3.onAttributesInitialized();
        final DecoratorAppearance appearance = checkOut3.getAppearance();
        appearance.setElementMap(elementMap);
        checkOut3.addBasicElement(appearance);
        appearance.onAttributesInitialized();
        final Margin checkOut4 = Margin.checkOut();
        checkOut4.setElementMap(elementMap);
        checkOut4.setInsets(new Insets(0, 0, 5, 0));
        appearance.addBasicElement(checkOut4);
        checkOut4.onAttributesInitialized();
        checkOut4.onChildrenAdded();
        appearance.onChildrenAdded();
        final Container checkOut5 = Container.checkOut();
        checkOut5.setElementMap(elementMap);
        checkOut5.setPrefSize(new Dimension(40, 0));
        checkOut5.setExpandable(false);
        checkOut3.addBasicElement(checkOut5);
        checkOut5.onAttributesInitialized();
        final DecoratorAppearance appearance2 = checkOut5.getAppearance();
        appearance2.setElementMap(elementMap);
        checkOut5.addBasicElement(appearance2);
        appearance2.onAttributesInitialized();
        final PropertyElement checkOut6 = PropertyElement.checkOut();
        checkOut6.setElementMap(elementMap);
        checkOut6.setAttribute("modulationColor");
        checkOut6.setName("chat.colorEditedObject");
        checkOut6.setField("color");
        appearance2.addBasicElement(checkOut6);
        checkOut6.onAttributesInitialized();
        checkOut6.onChildrenAdded();
        final Margin checkOut7 = Margin.checkOut();
        checkOut7.setElementMap(elementMap);
        checkOut7.setInsets(new Insets(0, 0, 0, 5));
        appearance2.addBasicElement(checkOut7);
        checkOut7.onAttributesInitialized();
        checkOut7.onChildrenAdded();
        appearance2.onChildrenAdded();
        final PropertyElement checkOut8 = PropertyElement.checkOut();
        checkOut8.setElementMap(elementMap);
        checkOut8.setAttribute("style");
        checkOut8.setName("chat.colorEditedObject");
        checkOut8.setField("isWindow");
        checkOut5.addBasicElement(checkOut8);
        checkOut8.onAttributesInitialized();
        final ConditionResult element = new ConditionResult();
        element.onCheckOut();
        element.setElementMap(elementMap);
        element.setValue("white");
        element.setElseValue("popup");
        checkOut8.addBasicElement(element);
        element.onAttributesInitialized();
        final OrCondition element2 = new OrCondition();
        element2.onCheckOut();
        element2.setElementMap(elementMap);
        element.addBasicElement(element2);
        element2.onAttributesInitialized();
        final FalseCondition element3 = new FalseCondition();
        element3.onCheckOut();
        element3.setElementMap(elementMap);
        element2.addBasicElement(element3);
        element3.onAttributesInitialized();
        element3.onChildrenAdded();
        final FalseCondition element4 = new FalseCondition();
        element4.onCheckOut();
        element4.setElementMap(elementMap);
        element2.addBasicElement(element4);
        element4.onAttributesInitialized();
        final PropertyElement checkOut9 = PropertyElement.checkOut();
        checkOut9.setElementMap(elementMap);
        checkOut9.setAttribute("comparedValue");
        checkOut9.setName("chat.colorEditedObject");
        element4.addBasicElement(checkOut9);
        checkOut9.onAttributesInitialized();
        final ConditionResult element5 = new ConditionResult();
        element5.onCheckOut();
        element5.setElementMap(elementMap);
        checkOut9.addBasicElement(element5);
        element5.onAttributesInitialized();
        final NotNullCondition element6 = new NotNullCondition();
        element6.onCheckOut();
        element6.setElementMap(elementMap);
        element5.addBasicElement(element6);
        element6.onAttributesInitialized();
        element6.onChildrenAdded();
        element5.onChildrenAdded();
        checkOut9.onChildrenAdded();
        element4.onChildrenAdded();
        element2.onChildrenAdded();
        element.onChildrenAdded();
        checkOut8.onChildrenAdded();
        checkOut5.onChildrenAdded();
        final Container checkOut10 = Container.checkOut();
        checkOut10.setElementMap(elementMap);
        checkOut10.setPrefSize(new Dimension(40, 0));
        checkOut10.setExpandable(false);
        checkOut3.addBasicElement(checkOut10);
        checkOut10.onAttributesInitialized();
        final DecoratorAppearance appearance3 = checkOut10.getAppearance();
        appearance3.setElementMap(elementMap);
        checkOut10.addBasicElement(appearance3);
        appearance3.onAttributesInitialized();
        final PropertyElement checkOut11 = PropertyElement.checkOut();
        checkOut11.setElementMap(elementMap);
        checkOut11.setAttribute("modulationColor");
        checkOut11.setName("chat.colorEditedObject");
        checkOut11.setField("currentColor");
        appearance3.addBasicElement(checkOut11);
        checkOut11.onAttributesInitialized();
        checkOut11.onChildrenAdded();
        appearance3.onChildrenAdded();
        final PropertyElement checkOut12 = PropertyElement.checkOut();
        checkOut12.setElementMap(elementMap);
        checkOut12.setAttribute("style");
        checkOut12.setName("chat.colorEditedObject");
        checkOut12.setField("isWindow");
        checkOut10.addBasicElement(checkOut12);
        checkOut12.onAttributesInitialized();
        final ConditionResult element7 = new ConditionResult();
        element7.onCheckOut();
        element7.setElementMap(elementMap);
        element7.setValue("white");
        element7.setElseValue("popup");
        checkOut12.addBasicElement(element7);
        element7.onAttributesInitialized();
        final OrCondition element8 = new OrCondition();
        element8.onCheckOut();
        element8.setElementMap(elementMap);
        element7.addBasicElement(element8);
        element8.onAttributesInitialized();
        final FalseCondition element9 = new FalseCondition();
        element9.onCheckOut();
        element9.setElementMap(elementMap);
        element8.addBasicElement(element9);
        element9.onAttributesInitialized();
        element9.onChildrenAdded();
        final FalseCondition element10 = new FalseCondition();
        element10.onCheckOut();
        element10.setElementMap(elementMap);
        element8.addBasicElement(element10);
        element10.onAttributesInitialized();
        final PropertyElement checkOut13 = PropertyElement.checkOut();
        checkOut13.setElementMap(elementMap);
        checkOut13.setAttribute("comparedValue");
        checkOut13.setName("chat.colorEditedObject");
        element10.addBasicElement(checkOut13);
        checkOut13.onAttributesInitialized();
        final ConditionResult element11 = new ConditionResult();
        element11.onCheckOut();
        element11.setElementMap(elementMap);
        checkOut13.addBasicElement(element11);
        element11.onAttributesInitialized();
        final NotNullCondition element12 = new NotNullCondition();
        element12.onCheckOut();
        element12.setElementMap(elementMap);
        element11.addBasicElement(element12);
        element12.onAttributesInitialized();
        element12.onChildrenAdded();
        element11.onChildrenAdded();
        checkOut13.onChildrenAdded();
        element10.onChildrenAdded();
        element8.onChildrenAdded();
        element7.onChildrenAdded();
        checkOut12.onChildrenAdded();
        checkOut10.onChildrenAdded();
        checkOut3.onChildrenAdded();
        final Container checkOut14 = Container.checkOut();
        checkOut14.setElementMap(elementMap);
        checkOut14.setExpandable(false);
        checkOut.addBasicElement(checkOut14);
        checkOut14.onAttributesInitialized();
        final RowLayout checkOut15 = RowLayout.checkOut();
        checkOut15.setAlign(Alignment9.EAST);
        checkOut14.addBasicElement(checkOut15);
        checkOut15.onAttributesInitialized();
        checkOut15.onChildrenAdded();
        final DecoratorAppearance appearance4 = checkOut14.getAppearance();
        appearance4.setElementMap(elementMap);
        checkOut14.addBasicElement(appearance4);
        appearance4.onAttributesInitialized();
        final Margin checkOut16 = Margin.checkOut();
        checkOut16.setElementMap(elementMap);
        checkOut16.setInsets(new Insets(0, 0, 0, 10));
        appearance4.addBasicElement(checkOut16);
        checkOut16.onAttributesInitialized();
        checkOut16.onChildrenAdded();
        appearance4.onChildrenAdded();
        final Button element13 = new Button();
        element13.onCheckOut();
        element13.setElementMap(elementMap);
        element13.setExpandable(false);
        element13.setStyle("flat");
        element13.setText("%chat.changeWindowColor%".replace("%chat.changeWindowColor%", Xulor.getInstance().getTranslatedString("chat.changeWindowColor")));
        final MouseClickedListener onClick = new MouseClickedListener();
        onClick.setCallBackFunc("wakfu.chatOptions:changeWindowColor");
        element13.setOnClick(onClick);
        checkOut14.addBasicElement(element13);
        element13.onAttributesInitialized();
        final DecoratorAppearance appearance5 = element13.getAppearance();
        appearance5.setElementMap(elementMap);
        element13.addBasicElement(appearance5);
        appearance5.onAttributesInitialized();
        final Margin checkOut17 = Margin.checkOut();
        checkOut17.setElementMap(elementMap);
        checkOut17.setInsets(new Insets(0, 0, 0, 10));
        appearance5.addBasicElement(checkOut17);
        checkOut17.onAttributesInitialized();
        checkOut17.onChildrenAdded();
        final Padding element14 = new Padding();
        element14.onCheckOut();
        element14.setElementMap(elementMap);
        element14.setInsets(new Insets(0, 3, 0, 3));
        appearance5.addBasicElement(element14);
        element14.onAttributesInitialized();
        element14.onChildrenAdded();
        appearance5.onChildrenAdded();
        element13.onChildrenAdded();
        final String id = "applyColorButton";
        final Button button = new Button();
        button.onCheckOut();
        button.setElementMap(elementMap);
        if (elementMap != null && id != null) {
            elementMap.add(id, button);
        }
        button.setStyle("flat");
        button.setText("%apply%".replace("%apply%", Xulor.getInstance().getTranslatedString("apply")));
        button.setExpandable(false);
        final MouseClickedListener onClick2 = new MouseClickedListener();
        onClick2.setCallBackFunc("wakfu.chatOptions:applyColor");
        button.setOnClick(onClick2);
        checkOut14.addBasicElement(button);
        button.onAttributesInitialized();
        final DecoratorAppearance appearance6 = button.getAppearance();
        appearance6.setElementMap(elementMap);
        button.addBasicElement(appearance6);
        appearance6.onAttributesInitialized();
        final Padding element15 = new Padding();
        element15.onCheckOut();
        element15.setElementMap(elementMap);
        element15.setInsets(new Insets(3, 3, 3, 3));
        appearance6.addBasicElement(element15);
        element15.onAttributesInitialized();
        element15.onChildrenAdded();
        appearance6.onChildrenAdded();
        final PropertyElement checkOut18 = PropertyElement.checkOut();
        checkOut18.setElementMap(elementMap);
        checkOut18.setAttribute("enabled");
        checkOut18.setName("chat.colorEditedObject");
        button.addBasicElement(checkOut18);
        checkOut18.onAttributesInitialized();
        final ConditionResult element16 = new ConditionResult();
        element16.onCheckOut();
        element16.setElementMap(elementMap);
        checkOut18.addBasicElement(element16);
        element16.onAttributesInitialized();
        final NotNullCondition element17 = new NotNullCondition();
        element17.onCheckOut();
        element17.setElementMap(elementMap);
        element16.addBasicElement(element17);
        element17.onAttributesInitialized();
        element17.onChildrenAdded();
        element16.onChildrenAdded();
        checkOut18.onChildrenAdded();
        button.onChildrenAdded();
        checkOut14.onChildrenAdded();
        checkOut.onChildrenAdded();
        return checkOut;
    }
    
    public BasicElement method12(final BasicElement basicElement) {
        final ElementMap elementMap = this.elementMaps.peek();
        final TabItem element = new TabItem();
        element.onCheckOut();
        element.setElementMap(elementMap);
        element.setText("%views%".replace("%views%", Xulor.getInstance().getTranslatedString("views")));
        basicElement.addBasicElement(element);
        element.onAttributesInitialized();
        final ScrollContainer element2 = new ScrollContainer();
        element2.onCheckOut();
        element2.setElementMap(elementMap);
        element2.setVerticalScrollBarPosition(50.0f);
        element.addBasicElement(element2);
        element2.onAttributesInitialized();
        final DecoratorAppearance appearance = element2.getAppearance();
        appearance.setElementMap(elementMap);
        element2.addBasicElement(appearance);
        appearance.onAttributesInitialized();
        final Padding element3 = new Padding();
        element3.onCheckOut();
        element3.setElementMap(elementMap);
        element3.setInsets(new Insets(10, 10, 10, 10));
        appearance.addBasicElement(element3);
        element3.onAttributesInitialized();
        element3.onChildrenAdded();
        appearance.onChildrenAdded();
        final Container checkOut = Container.checkOut();
        checkOut.setElementMap(elementMap);
        element2.addBasicElement(checkOut);
        checkOut.onAttributesInitialized();
        final RowLayout checkOut2 = RowLayout.checkOut();
        checkOut2.setAlign(Alignment9.WEST);
        checkOut.addBasicElement(checkOut2);
        checkOut2.onAttributesInitialized();
        checkOut2.onChildrenAdded();
        final Container checkOut3 = Container.checkOut();
        checkOut3.setElementMap(elementMap);
        checkOut3.setStyle("white");
        checkOut3.setPrefSize(new Dimension(150, 0));
        checkOut3.setExpandable(false);
        checkOut.addBasicElement(checkOut3);
        checkOut3.onAttributesInitialized();
        final RowLayout checkOut4 = RowLayout.checkOut();
        checkOut4.setAlign(Alignment9.NORTH);
        checkOut4.setHorizontal(false);
        checkOut3.addBasicElement(checkOut4);
        checkOut4.onAttributesInitialized();
        checkOut4.onChildrenAdded();
        final DecoratorAppearance appearance2 = checkOut3.getAppearance();
        appearance2.setElementMap(elementMap);
        checkOut3.addBasicElement(appearance2);
        appearance2.onAttributesInitialized();
        final Padding element4 = new Padding();
        element4.onCheckOut();
        element4.setElementMap(elementMap);
        element4.setInsets(new Insets(10, 10, 10, 10));
        appearance2.addBasicElement(element4);
        element4.onAttributesInitialized();
        element4.onChildrenAdded();
        appearance2.onChildrenAdded();
        final Container checkOut5 = Container.checkOut();
        checkOut5.setElementMap(elementMap);
        checkOut5.setExpandable(false);
        checkOut5.setStyle("caracs");
        checkOut3.addBasicElement(checkOut5);
        checkOut5.onAttributesInitialized();
        final RowLayout checkOut6 = RowLayout.checkOut();
        checkOut6.setAlign(Alignment9.WEST);
        checkOut5.addBasicElement(checkOut6);
        checkOut6.onAttributesInitialized();
        checkOut6.onChildrenAdded();
        final DecoratorAppearance appearance3 = checkOut5.getAppearance();
        appearance3.setElementMap(elementMap);
        checkOut5.addBasicElement(appearance3);
        appearance3.onAttributesInitialized();
        final Margin checkOut7 = Margin.checkOut();
        checkOut7.setElementMap(elementMap);
        checkOut7.setInsets(new Insets(0, 0, 10, 0));
        appearance3.addBasicElement(checkOut7);
        checkOut7.onAttributesInitialized();
        checkOut7.onChildrenAdded();
        appearance3.onChildrenAdded();
        final Button element5 = new Button();
        element5.onCheckOut();
        element5.setElementMap(elementMap);
        element5.setText("+");
        element5.setPrefSize(new Dimension(20, 20));
        final MouseClickedListener onClick = new MouseClickedListener();
        onClick.setCallBackFunc("wakfu.chatOptions:createView");
        element5.setOnClick(onClick);
        element5.setExpandable(false);
        final PopupDisplayListener onPopupDisplay = new PopupDisplayListener();
        onPopupDisplay.setCallBackFunc("popup(createViewPopup)");
        element5.setOnPopupDisplay(onPopupDisplay);
        final PopupHideListener onPopupHide = new PopupHideListener();
        onPopupHide.setCallBackFunc("closePopup");
        element5.setOnPopupHide(onPopupHide);
        checkOut5.addBasicElement(element5);
        element5.onAttributesInitialized();
        final String id = "createViewPopup";
        final PopupElement popupElement = new PopupElement();
        popupElement.onCheckOut();
        popupElement.setElementMap(elementMap);
        if (elementMap != null && id != null) {
            elementMap.add(id, popupElement);
        }
        popupElement.setAlign(Alignment9.NORTH);
        popupElement.setHotSpotPosition(Alignment9.SOUTH);
        element5.addBasicElement(popupElement);
        popupElement.onAttributesInitialized();
        final Container checkOut8 = Container.checkOut();
        checkOut8.setElementMap(elementMap);
        checkOut8.setPrefSize(new Dimension(10, 0));
        checkOut8.setStyle("popup");
        popupElement.addBasicElement(checkOut8);
        checkOut8.onAttributesInitialized();
        final Label element6 = new Label();
        element6.onCheckOut();
        element6.setElementMap(elementMap);
        element6.setStyle("PopupInformation");
        element6.setText("%chat.createView%".replace("%chat.createView%", Xulor.getInstance().getTranslatedString("chat.createView")));
        checkOut8.addBasicElement(element6);
        element6.onAttributesInitialized();
        final DecoratorAppearance appearance4 = element6.getAppearance();
        appearance4.setElementMap(elementMap);
        ((TextWidgetAppearance)appearance4).setAlignment(Alignment9.WEST);
        element6.addBasicElement(appearance4);
        appearance4.onAttributesInitialized();
        appearance4.onChildrenAdded();
        element6.onChildrenAdded();
        checkOut8.onChildrenAdded();
        popupElement.onChildrenAdded();
        final PropertyElement checkOut9 = PropertyElement.checkOut();
        checkOut9.setElementMap(elementMap);
        checkOut9.setAttribute("enabled");
        checkOut9.setName("chatManager");
        checkOut9.setField("canAddView");
        element5.addBasicElement(checkOut9);
        checkOut9.onAttributesInitialized();
        checkOut9.onChildrenAdded();
        element5.onChildrenAdded();
        final Spacer element7 = new Spacer();
        element7.onCheckOut();
        element7.setElementMap(elementMap);
        checkOut5.addBasicElement(element7);
        element7.onAttributesInitialized();
        element7.onChildrenAdded();
        final Container checkOut10 = Container.checkOut();
        checkOut10.setElementMap(elementMap);
        checkOut10.setPrefSize(new Dimension(0, 26));
        checkOut10.setExpandable(false);
        checkOut5.addBasicElement(checkOut10);
        checkOut10.onAttributesInitialized();
        final RowLayout checkOut11 = RowLayout.checkOut();
        checkOut11.setAlign(Alignment9.WEST);
        checkOut10.addBasicElement(checkOut11);
        checkOut11.onAttributesInitialized();
        checkOut11.onChildrenAdded();
        final Label element8 = new Label();
        element8.onCheckOut();
        element8.setElementMap(elementMap);
        element8.setText("%options.windowNumber%".replace("%options.windowNumber%", Xulor.getInstance().getTranslatedString("options.windowNumber")));
        element8.setExpandable(false);
        checkOut10.addBasicElement(element8);
        element8.onAttributesInitialized();
        final DecoratorAppearance appearance5 = element8.getAppearance();
        appearance5.setElementMap(elementMap);
        element8.addBasicElement(appearance5);
        appearance5.onAttributesInitialized();
        final Margin checkOut12 = Margin.checkOut();
        checkOut12.setElementMap(elementMap);
        checkOut12.setInsets(new Insets(0, 5, 0, 5));
        appearance5.addBasicElement(checkOut12);
        checkOut12.onAttributesInitialized();
        checkOut12.onChildrenAdded();
        appearance5.onChildrenAdded();
        element8.onChildrenAdded();
        final String id2 = "windowsComboBox";
        final ComboBox comboBox = new ComboBox();
        comboBox.onCheckOut();
        comboBox.setElementMap(elementMap);
        if (elementMap != null && id2 != null) {
            elementMap.add(id2, comboBox);
        }
        comboBox.setExpandable(false);
        final PopupDisplayListener onPopupDisplay2 = new PopupDisplayListener();
        onPopupDisplay2.setCallBackFunc("popup(selectChatToCreateViewPopup)");
        comboBox.setOnPopupDisplay(onPopupDisplay2);
        final PopupHideListener onPopupHide2 = new PopupHideListener();
        onPopupHide2.setCallBackFunc("closePopup");
        comboBox.setOnPopupHide(onPopupHide2);
        checkOut10.addBasicElement(comboBox);
        comboBox.onAttributesInitialized();
        final String id3 = "selectChatToCreateViewPopup";
        final PopupElement popupElement2 = new PopupElement();
        popupElement2.onCheckOut();
        popupElement2.setElementMap(elementMap);
        if (elementMap != null && id3 != null) {
            elementMap.add(id3, popupElement2);
        }
        popupElement2.setAlign(Alignment9.NORTH);
        popupElement2.setHotSpotPosition(Alignment9.SOUTH);
        comboBox.addBasicElement(popupElement2);
        popupElement2.onAttributesInitialized();
        final Container checkOut13 = Container.checkOut();
        checkOut13.setElementMap(elementMap);
        checkOut13.setPrefSize(new Dimension(10, 0));
        checkOut13.setStyle("popup");
        popupElement2.addBasicElement(checkOut13);
        checkOut13.onAttributesInitialized();
        final Label element9 = new Label();
        element9.onCheckOut();
        element9.setElementMap(elementMap);
        element9.setStyle("PopupInformation");
        element9.setText("%chat.selectChatToCreateView%".replace("%chat.selectChatToCreateView%", Xulor.getInstance().getTranslatedString("chat.selectChatToCreateView")));
        checkOut13.addBasicElement(element9);
        element9.onAttributesInitialized();
        final DecoratorAppearance appearance6 = element9.getAppearance();
        appearance6.setElementMap(elementMap);
        ((TextWidgetAppearance)appearance6).setAlignment(Alignment9.WEST);
        element9.addBasicElement(appearance6);
        appearance6.onAttributesInitialized();
        appearance6.onChildrenAdded();
        element9.onChildrenAdded();
        checkOut13.onChildrenAdded();
        popupElement2.onChildrenAdded();
        final PropertyElement checkOut14 = PropertyElement.checkOut();
        checkOut14.setElementMap(elementMap);
        checkOut14.setAttribute("content");
        checkOut14.setName("chatManager");
        checkOut14.setField("windowsIds");
        comboBox.addBasicElement(checkOut14);
        checkOut14.onAttributesInitialized();
        checkOut14.onChildrenAdded();
        final RenderableContainer element10 = new RenderableContainer();
        element10.onCheckOut();
        element10.setElementMap(elementMap);
        comboBox.addBasicElement(element10);
        element10.onAttributesInitialized();
        final ItemRenderer element11 = new ItemRenderer();
        element11.onCheckOut();
        element11.setElementMap(elementMap);
        element10.addBasicElement(element11);
        element11.onAttributesInitialized();
        final Label element12 = new Label();
        element12.onCheckOut();
        element12.setElementMap(elementMap);
        element12.setNonBlocking(true);
        element11.addBasicElement(element12);
        element12.onAttributesInitialized();
        final ItemElement element13 = new ItemElement();
        element13.onCheckOut();
        element13.setElementMap(elementMap);
        element13.setAttribute("text");
        element12.addBasicElement(element13);
        element13.onAttributesInitialized();
        element13.onChildrenAdded();
        element12.onChildrenAdded();
        element11.onChildrenAdded();
        element10.onChildrenAdded();
        final List element14 = new List();
        element14.onCheckOut();
        element14.setElementMap(elementMap);
        element14.setHorizontal(false);
        element14.setCellSize(new Dimension(100.0f, 16));
        comboBox.addBasicElement(element14);
        element14.onAttributesInitialized();
        final ItemRenderer element15 = new ItemRenderer();
        element15.onCheckOut();
        element15.setElementMap(elementMap);
        element14.addBasicElement(element15);
        element15.onAttributesInitialized();
        final Label element16 = new Label();
        element16.onCheckOut();
        element16.setElementMap(elementMap);
        element16.setNonBlocking(true);
        element15.addBasicElement(element16);
        element16.onAttributesInitialized();
        final ItemElement element17 = new ItemElement();
        element17.onCheckOut();
        element17.setElementMap(elementMap);
        element17.setAttribute("text");
        element16.addBasicElement(element17);
        element17.onAttributesInitialized();
        element17.onChildrenAdded();
        element16.onChildrenAdded();
        element15.onChildrenAdded();
        element14.onChildrenAdded();
        comboBox.onChildrenAdded();
        checkOut10.onChildrenAdded();
        checkOut5.onChildrenAdded();
        final List element18 = new List();
        element18.onCheckOut();
        element18.setElementMap(elementMap);
        element18.setCellSize(new Dimension(140, 20));
        element18.setHorizontal(false);
        checkOut3.addBasicElement(element18);
        element18.onAttributesInitialized();
        final PropertyElement checkOut15 = PropertyElement.checkOut();
        checkOut15.setElementMap(elementMap);
        checkOut15.setAttribute("content");
        checkOut15.setName("chatManager");
        checkOut15.setField("allViews");
        element18.addBasicElement(checkOut15);
        checkOut15.onAttributesInitialized();
        checkOut15.onChildrenAdded();
        final ItemRenderer element19 = new ItemRenderer();
        element19.onCheckOut();
        element19.setElementMap(elementMap);
        final ItemClickListener onItemClick = new ItemClickListener();
        onItemClick.setCallBackFunc("wakfu.chatOptions:selectView");
        element19.setOnItemClick(onItemClick);
        final ItemOverListener onItemOver = new ItemOverListener();
        onItemOver.setCallBackFunc("wakfu.chatOptions:onViewOver");
        element19.setOnItemOver(onItemOver);
        final ItemOutListener onItemOut = new ItemOutListener();
        onItemOut.setCallBackFunc("wakfu.chatOptions:onViewOut");
        element19.setOnItemOut(onItemOut);
        element18.addBasicElement(element19);
        element19.onAttributesInitialized();
        final ConditionResult element20 = new ConditionResult();
        element20.onCheckOut();
        element20.setElementMap(elementMap);
        element19.addBasicElement(element20);
        element20.onAttributesInitialized();
        final ItemCondition element21 = new ItemCondition();
        element21.onCheckOut();
        element21.setElementMap(elementMap);
        element20.addBasicElement(element21);
        element21.onAttributesInitialized();
        final NotNullCondition element22 = new NotNullCondition();
        element22.onCheckOut();
        element22.setElementMap(elementMap);
        element21.addBasicElement(element22);
        element22.onAttributesInitialized();
        element22.onChildrenAdded();
        element21.onChildrenAdded();
        element20.onChildrenAdded();
        final Container checkOut16 = Container.checkOut();
        checkOut16.setElementMap(elementMap);
        element19.addBasicElement(checkOut16);
        checkOut16.onAttributesInitialized();
        final RowLayout checkOut17 = RowLayout.checkOut();
        checkOut17.setAlign(Alignment9.WEST);
        checkOut16.addBasicElement(checkOut17);
        checkOut17.onAttributesInitialized();
        checkOut17.onChildrenAdded();
        final DecoratorAppearance appearance7 = checkOut16.getAppearance();
        appearance7.setElementMap(elementMap);
        checkOut16.addBasicElement(appearance7);
        appearance7.onAttributesInitialized();
        final PlainBackground element23 = new PlainBackground();
        element23.onCheckOut();
        element23.setElementMap(elementMap);
        appearance7.addBasicElement(element23);
        element23.onAttributesInitialized();
        final PropertyElement checkOut18 = PropertyElement.checkOut();
        checkOut18.setElementMap(elementMap);
        checkOut18.setAttribute("color");
        checkOut18.setName("chat.viewOver");
        element23.addBasicElement(checkOut18);
        checkOut18.onAttributesInitialized();
        final ConditionResult element24 = new ConditionResult();
        element24.onCheckOut();
        element24.setElementMap(elementMap);
        element24.setValue("0.69,0.68,0.65,1");
        element24.setElseValue("1,1,1,0");
        checkOut18.addBasicElement(element24);
        element24.onAttributesInitialized();
        final EqualCondition element25 = new EqualCondition();
        element25.onCheckOut();
        element25.setElementMap(elementMap);
        element24.addBasicElement(element25);
        element25.onAttributesInitialized();
        final ItemElement element26 = new ItemElement();
        element26.onCheckOut();
        element26.setElementMap(elementMap);
        element26.setAttribute("value");
        element25.addBasicElement(element26);
        element26.onAttributesInitialized();
        element26.onChildrenAdded();
        element25.onChildrenAdded();
        element24.onChildrenAdded();
        checkOut18.onChildrenAdded();
        element23.onChildrenAdded();
        final PlainBorder element27 = new PlainBorder();
        element27.onCheckOut();
        element27.setElementMap(elementMap);
        element27.setSpacing(new Insets(1, 1, 1, 1));
        element27.setColor(new Color(0.0f, 0.0f, 0.0f, 0.0f));
        appearance7.addBasicElement(element27);
        element27.onAttributesInitialized();
        final PropertyElement checkOut19 = PropertyElement.checkOut();
        checkOut19.setElementMap(elementMap);
        checkOut19.setAttribute("color");
        checkOut19.setName("chat.editedView");
        element27.addBasicElement(checkOut19);
        checkOut19.onAttributesInitialized();
        final ConditionResult element28 = new ConditionResult();
        element28.onCheckOut();
        element28.setElementMap(elementMap);
        element28.setValue("0,0,0,1");
        element28.setElseValue("1,1,1,0");
        checkOut19.addBasicElement(element28);
        element28.onAttributesInitialized();
        final EqualCondition element29 = new EqualCondition();
        element29.onCheckOut();
        element29.setElementMap(elementMap);
        element28.addBasicElement(element29);
        element29.onAttributesInitialized();
        final ItemElement element30 = new ItemElement();
        element30.onCheckOut();
        element30.setElementMap(elementMap);
        element30.setAttribute("value");
        element29.addBasicElement(element30);
        element30.onAttributesInitialized();
        element30.onChildrenAdded();
        element29.onChildrenAdded();
        element28.onChildrenAdded();
        checkOut19.onChildrenAdded();
        element27.onChildrenAdded();
        appearance7.onChildrenAdded();
        final Label element31 = new Label();
        element31.onCheckOut();
        element31.setElementMap(elementMap);
        element31.setExpandable(false);
        element31.setPrefSize(new Dimension(120, 20));
        element31.setMaxWidth(120);
        checkOut16.addBasicElement(element31);
        element31.onAttributesInitialized();
        final ItemElement element32 = new ItemElement();
        element32.onCheckOut();
        element32.setElementMap(elementMap);
        element32.setAttribute("text");
        element32.setField("name");
        element31.addBasicElement(element32);
        element32.onAttributesInitialized();
        element32.onChildrenAdded();
        element31.onChildrenAdded();
        final Label element33 = new Label();
        element33.onCheckOut();
        element33.setElementMap(elementMap);
        element33.setExpandable(false);
        element33.setPrefSize(new Dimension(10, 20));
        checkOut16.addBasicElement(element33);
        element33.onAttributesInitialized();
        final ItemElement element34 = new ItemElement();
        element34.onCheckOut();
        element34.setElementMap(elementMap);
        element34.setAttribute("text");
        element34.setField("windowId");
        element33.addBasicElement(element34);
        element34.onAttributesInitialized();
        element34.onChildrenAdded();
        final DecoratorAppearance appearance8 = element33.getAppearance();
        appearance8.setElementMap(elementMap);
        ((TextWidgetAppearance)appearance8).setAlignment(Alignment9.EAST);
        element33.addBasicElement(appearance8);
        appearance8.onAttributesInitialized();
        appearance8.onChildrenAdded();
        element33.onChildrenAdded();
        checkOut16.onChildrenAdded();
        element19.onChildrenAdded();
        final ItemRenderer element35 = new ItemRenderer();
        element35.onCheckOut();
        element35.setElementMap(elementMap);
        element18.addBasicElement(element35);
        element35.onAttributesInitialized();
        final ConditionResult element36 = new ConditionResult();
        element36.onCheckOut();
        element36.setElementMap(elementMap);
        element35.addBasicElement(element36);
        element36.onAttributesInitialized();
        final ItemCondition element37 = new ItemCondition();
        element37.onCheckOut();
        element37.setElementMap(elementMap);
        element36.addBasicElement(element37);
        element37.onAttributesInitialized();
        final NullCondition element38 = new NullCondition();
        element38.onCheckOut();
        element38.setElementMap(elementMap);
        element37.addBasicElement(element38);
        element38.onAttributesInitialized();
        element38.onChildrenAdded();
        element37.onChildrenAdded();
        element36.onChildrenAdded();
        final Container checkOut20 = Container.checkOut();
        checkOut20.setElementMap(elementMap);
        element35.addBasicElement(checkOut20);
        checkOut20.onAttributesInitialized();
        checkOut20.onChildrenAdded();
        element35.onChildrenAdded();
        element18.onChildrenAdded();
        checkOut3.onChildrenAdded();
        this.method13(checkOut);
        checkOut.onChildrenAdded();
        element2.onChildrenAdded();
        element.onChildrenAdded();
        return element;
    }
    
    public BasicElement method13(final BasicElement basicElement) {
        final ElementMap elementMap = this.elementMaps.peek();
        final Container checkOut = Container.checkOut();
        checkOut.setElementMap(elementMap);
        basicElement.addBasicElement(checkOut);
        checkOut.onAttributesInitialized();
        final DecoratorAppearance appearance = checkOut.getAppearance();
        appearance.setElementMap(elementMap);
        checkOut.addBasicElement(appearance);
        appearance.onAttributesInitialized();
        final Margin checkOut2 = Margin.checkOut();
        checkOut2.setElementMap(elementMap);
        checkOut2.setInsets(new Insets(0, 5, 0, 0));
        appearance.addBasicElement(checkOut2);
        checkOut2.onAttributesInitialized();
        checkOut2.onChildrenAdded();
        appearance.onChildrenAdded();
        final RowLayout checkOut3 = RowLayout.checkOut();
        checkOut3.setAlign(Alignment9.NORTH);
        checkOut3.setHorizontal(false);
        checkOut.addBasicElement(checkOut3);
        checkOut3.onAttributesInitialized();
        checkOut3.onChildrenAdded();
        final Container checkOut4 = Container.checkOut();
        checkOut4.setElementMap(elementMap);
        checkOut4.setExpandable(false);
        checkOut.addBasicElement(checkOut4);
        checkOut4.onAttributesInitialized();
        final RowLayout checkOut5 = RowLayout.checkOut();
        checkOut5.setAlign(Alignment9.WEST);
        checkOut4.addBasicElement(checkOut5);
        checkOut5.onAttributesInitialized();
        checkOut5.onChildrenAdded();
        final DecoratorAppearance appearance2 = checkOut4.getAppearance();
        appearance2.setElementMap(elementMap);
        checkOut4.addBasicElement(appearance2);
        appearance2.onAttributesInitialized();
        final Margin checkOut6 = Margin.checkOut();
        checkOut6.setElementMap(elementMap);
        checkOut6.setInsets(new Insets(0, 0, 3, 0));
        appearance2.addBasicElement(checkOut6);
        checkOut6.onAttributesInitialized();
        checkOut6.onChildrenAdded();
        appearance2.onChildrenAdded();
        final Label element = new Label();
        element.onCheckOut();
        element.setElementMap(elementMap);
        element.setStyle("bold");
        element.setText("%name%%colon%".replace("%name%", Xulor.getInstance().getTranslatedString("name")).replace("%colon%", Xulor.getInstance().getTranslatedString("colon")));
        element.setExpandable(false);
        checkOut4.addBasicElement(element);
        element.onAttributesInitialized();
        final DecoratorAppearance appearance3 = element.getAppearance();
        appearance3.setElementMap(elementMap);
        element.addBasicElement(appearance3);
        appearance3.onAttributesInitialized();
        final Margin checkOut7 = Margin.checkOut();
        checkOut7.setElementMap(elementMap);
        checkOut7.setInsets(new Insets(0, 0, 0, 5));
        appearance3.addBasicElement(checkOut7);
        checkOut7.onAttributesInitialized();
        checkOut7.onChildrenAdded();
        appearance3.onChildrenAdded();
        element.onChildrenAdded();
        final String id = "nameEditor";
        final TextEditor textEditor = new TextEditor();
        textEditor.onCheckOut();
        textEditor.setElementMap(elementMap);
        if (elementMap != null && id != null) {
            elementMap.add(id, textEditor);
        }
        textEditor.setExpandable(false);
        textEditor.setPrefSize(new Dimension(150, 0));
        textEditor.setMaxWidth(150);
        final KeyTypedListener onKeyType = new KeyTypedListener();
        onKeyType.setCallBackFunc("wakfu.chatOptions:setViewName(nameEditor)");
        textEditor.setOnKeyType(onKeyType);
        final PopupDisplayListener onPopupDisplay = new PopupDisplayListener();
        onPopupDisplay.setCallBackFunc("popup(viewNamePopup)");
        textEditor.setOnPopupDisplay(onPopupDisplay);
        final PopupHideListener onPopupHide = new PopupHideListener();
        onPopupHide.setCallBackFunc("closePopup");
        textEditor.setOnPopupHide(onPopupHide);
        checkOut4.addBasicElement(textEditor);
        textEditor.onAttributesInitialized();
        final String id2 = "viewNamePopup";
        final PopupElement popupElement = new PopupElement();
        popupElement.onCheckOut();
        popupElement.setElementMap(elementMap);
        if (elementMap != null && id2 != null) {
            elementMap.add(id2, popupElement);
        }
        popupElement.setAlign(Alignment9.NORTH);
        popupElement.setHotSpotPosition(Alignment9.SOUTH);
        textEditor.addBasicElement(popupElement);
        popupElement.onAttributesInitialized();
        final Container checkOut8 = Container.checkOut();
        checkOut8.setElementMap(elementMap);
        checkOut8.setPrefSize(new Dimension(10, 0));
        checkOut8.setStyle("popup");
        popupElement.addBasicElement(checkOut8);
        checkOut8.onAttributesInitialized();
        final Label element2 = new Label();
        element2.onCheckOut();
        element2.setElementMap(elementMap);
        element2.setStyle("PopupInformation");
        element2.setText("%chat.editViewName%".replace("%chat.editViewName%", Xulor.getInstance().getTranslatedString("chat.editViewName")));
        checkOut8.addBasicElement(element2);
        element2.onAttributesInitialized();
        final DecoratorAppearance appearance4 = element2.getAppearance();
        appearance4.setElementMap(elementMap);
        ((TextWidgetAppearance)appearance4).setAlignment(Alignment9.WEST);
        element2.addBasicElement(appearance4);
        appearance4.onAttributesInitialized();
        appearance4.onChildrenAdded();
        element2.onChildrenAdded();
        checkOut8.onChildrenAdded();
        popupElement.onChildrenAdded();
        final PropertyElement checkOut9 = PropertyElement.checkOut();
        checkOut9.setElementMap(elementMap);
        checkOut9.setAttribute("text");
        checkOut9.setName("chat.editedView");
        checkOut9.setField("name");
        textEditor.addBasicElement(checkOut9);
        checkOut9.onAttributesInitialized();
        checkOut9.onChildrenAdded();
        final PropertyElement checkOut10 = PropertyElement.checkOut();
        checkOut10.setElementMap(elementMap);
        checkOut10.setAttribute("editable");
        checkOut10.setName("chat.editedView");
        textEditor.addBasicElement(checkOut10);
        checkOut10.onAttributesInitialized();
        final ConditionResult element3 = new ConditionResult();
        element3.onCheckOut();
        element3.setElementMap(elementMap);
        checkOut10.addBasicElement(element3);
        element3.onAttributesInitialized();
        final NotNullCondition element4 = new NotNullCondition();
        element4.onCheckOut();
        element4.setElementMap(elementMap);
        element3.addBasicElement(element4);
        element4.onAttributesInitialized();
        element4.onChildrenAdded();
        element3.onChildrenAdded();
        checkOut10.onChildrenAdded();
        textEditor.onChildrenAdded();
        checkOut4.onChildrenAdded();
        final Container checkOut11 = Container.checkOut();
        checkOut11.setElementMap(elementMap);
        checkOut11.setExpandable(false);
        checkOut11.setPrefSize(new Dimension(0, 30));
        checkOut.addBasicElement(checkOut11);
        checkOut11.onAttributesInitialized();
        final DecoratorAppearance appearance5 = checkOut11.getAppearance();
        appearance5.setElementMap(elementMap);
        checkOut11.addBasicElement(appearance5);
        appearance5.onAttributesInitialized();
        final Margin checkOut12 = Margin.checkOut();
        checkOut12.setElementMap(elementMap);
        checkOut12.setInsets(new Insets(0, 0, 3, 0));
        appearance5.addBasicElement(checkOut12);
        checkOut12.onAttributesInitialized();
        checkOut12.onChildrenAdded();
        appearance5.onChildrenAdded();
        final RowLayout checkOut13 = RowLayout.checkOut();
        checkOut13.setAlign(Alignment9.WEST);
        checkOut11.addBasicElement(checkOut13);
        checkOut13.onAttributesInitialized();
        checkOut13.onChildrenAdded();
        final Label element5 = new Label();
        element5.onCheckOut();
        element5.setElementMap(elementMap);
        element5.setStyle("bold");
        element5.setText("%options.windowNumber%%colon%".replace("%options.windowNumber%", Xulor.getInstance().getTranslatedString("options.windowNumber")).replace("%colon%", Xulor.getInstance().getTranslatedString("colon")));
        element5.setExpandable(false);
        checkOut11.addBasicElement(element5);
        element5.onAttributesInitialized();
        final DecoratorAppearance appearance6 = element5.getAppearance();
        appearance6.setElementMap(elementMap);
        element5.addBasicElement(appearance6);
        appearance6.onAttributesInitialized();
        final Margin checkOut14 = Margin.checkOut();
        checkOut14.setElementMap(elementMap);
        checkOut14.setInsets(new Insets(0, 0, 0, 5));
        appearance6.addBasicElement(checkOut14);
        checkOut14.onAttributesInitialized();
        checkOut14.onChildrenAdded();
        appearance6.onChildrenAdded();
        element5.onChildrenAdded();
        final ComboBox element6 = new ComboBox();
        element6.onCheckOut();
        element6.setElementMap(elementMap);
        element6.setExpandable(false);
        element6.setPrefSize(new Dimension(0, 16));
        final ListSelectionChangedListener onListSelectionChange = new ListSelectionChangedListener();
        onListSelectionChange.setCallBackFunc("wakfu.chatOptions:transferView");
        element6.setOnListSelectionChange(onListSelectionChange);
        final PopupDisplayListener onPopupDisplay2 = new PopupDisplayListener();
        onPopupDisplay2.setCallBackFunc("popup(selectChatToTransferPopup)");
        element6.setOnPopupDisplay(onPopupDisplay2);
        final PopupHideListener onPopupHide2 = new PopupHideListener();
        onPopupHide2.setCallBackFunc("closePopup");
        element6.setOnPopupHide(onPopupHide2);
        checkOut11.addBasicElement(element6);
        element6.onAttributesInitialized();
        final String id3 = "selectChatToTransferPopup";
        final PopupElement popupElement2 = new PopupElement();
        popupElement2.onCheckOut();
        popupElement2.setElementMap(elementMap);
        if (elementMap != null && id3 != null) {
            elementMap.add(id3, popupElement2);
        }
        popupElement2.setAlign(Alignment9.NORTH);
        popupElement2.setHotSpotPosition(Alignment9.SOUTH);
        element6.addBasicElement(popupElement2);
        popupElement2.onAttributesInitialized();
        final Container checkOut15 = Container.checkOut();
        checkOut15.setElementMap(elementMap);
        checkOut15.setPrefSize(new Dimension(10, 0));
        checkOut15.setStyle("popup");
        popupElement2.addBasicElement(checkOut15);
        checkOut15.onAttributesInitialized();
        final Label element7 = new Label();
        element7.onCheckOut();
        element7.setElementMap(elementMap);
        element7.setStyle("PopupInformation");
        element7.setText("%chat.selectChatToTransfer%".replace("%chat.selectChatToTransfer%", Xulor.getInstance().getTranslatedString("chat.selectChatToTransfer")));
        checkOut15.addBasicElement(element7);
        element7.onAttributesInitialized();
        final DecoratorAppearance appearance7 = element7.getAppearance();
        appearance7.setElementMap(elementMap);
        ((TextWidgetAppearance)appearance7).setAlignment(Alignment9.WEST);
        element7.addBasicElement(appearance7);
        appearance7.onAttributesInitialized();
        appearance7.onChildrenAdded();
        element7.onChildrenAdded();
        checkOut15.onChildrenAdded();
        popupElement2.onChildrenAdded();
        final PropertyElement checkOut16 = PropertyElement.checkOut();
        checkOut16.setElementMap(elementMap);
        checkOut16.setAttribute("content");
        checkOut16.setName("chatManager");
        checkOut16.setField("windowsIds");
        element6.addBasicElement(checkOut16);
        checkOut16.onAttributesInitialized();
        checkOut16.onChildrenAdded();
        final PropertyElement checkOut17 = PropertyElement.checkOut();
        checkOut17.setElementMap(elementMap);
        checkOut17.setAttribute("selectedValue");
        checkOut17.setName("chat.editedView");
        checkOut17.setField("windowId");
        element6.addBasicElement(checkOut17);
        checkOut17.onAttributesInitialized();
        checkOut17.onChildrenAdded();
        final PropertyElement checkOut18 = PropertyElement.checkOut();
        checkOut18.setElementMap(elementMap);
        checkOut18.setAttribute("visible");
        checkOut18.setName("chat.editedView");
        element6.addBasicElement(checkOut18);
        checkOut18.onAttributesInitialized();
        final ConditionResult element8 = new ConditionResult();
        element8.onCheckOut();
        element8.setElementMap(elementMap);
        checkOut18.addBasicElement(element8);
        element8.onAttributesInitialized();
        final NotNullCondition element9 = new NotNullCondition();
        element9.onCheckOut();
        element9.setElementMap(elementMap);
        element8.addBasicElement(element9);
        element9.onAttributesInitialized();
        element9.onChildrenAdded();
        element8.onChildrenAdded();
        checkOut18.onChildrenAdded();
        final RenderableContainer element10 = new RenderableContainer();
        element10.onCheckOut();
        element10.setElementMap(elementMap);
        element6.addBasicElement(element10);
        element10.onAttributesInitialized();
        final ItemRenderer element11 = new ItemRenderer();
        element11.onCheckOut();
        element11.setElementMap(elementMap);
        element10.addBasicElement(element11);
        element11.onAttributesInitialized();
        final Label element12 = new Label();
        element12.onCheckOut();
        element12.setElementMap(elementMap);
        element12.setNonBlocking(true);
        element11.addBasicElement(element12);
        element12.onAttributesInitialized();
        final ItemElement element13 = new ItemElement();
        element13.onCheckOut();
        element13.setElementMap(elementMap);
        element13.setAttribute("text");
        element12.addBasicElement(element13);
        element13.onAttributesInitialized();
        element13.onChildrenAdded();
        element12.onChildrenAdded();
        element11.onChildrenAdded();
        element10.onChildrenAdded();
        final List element14 = new List();
        element14.onCheckOut();
        element14.setElementMap(elementMap);
        element14.setHorizontal(false);
        element14.setCellSize(new Dimension(100.0f, 16));
        element6.addBasicElement(element14);
        element14.onAttributesInitialized();
        final ItemRenderer element15 = new ItemRenderer();
        element15.onCheckOut();
        element15.setElementMap(elementMap);
        element14.addBasicElement(element15);
        element15.onAttributesInitialized();
        final Label element16 = new Label();
        element16.onCheckOut();
        element16.setElementMap(elementMap);
        element16.setNonBlocking(true);
        element15.addBasicElement(element16);
        element16.onAttributesInitialized();
        final ItemElement element17 = new ItemElement();
        element17.onCheckOut();
        element17.setElementMap(elementMap);
        element17.setAttribute("text");
        element16.addBasicElement(element17);
        element17.onAttributesInitialized();
        element17.onChildrenAdded();
        element16.onChildrenAdded();
        element15.onChildrenAdded();
        element14.onChildrenAdded();
        element6.onChildrenAdded();
        checkOut11.onChildrenAdded();
        final Container checkOut19 = Container.checkOut();
        checkOut19.setElementMap(elementMap);
        checkOut19.setExpandable(false);
        checkOut19.setPrefSize(new Dimension(0, 35));
        checkOut.addBasicElement(checkOut19);
        checkOut19.onAttributesInitialized();
        final DecoratorAppearance appearance8 = checkOut19.getAppearance();
        appearance8.setElementMap(elementMap);
        checkOut19.addBasicElement(appearance8);
        appearance8.onAttributesInitialized();
        final Margin checkOut20 = Margin.checkOut();
        checkOut20.setElementMap(elementMap);
        checkOut20.setInsets(new Insets(0, 0, 3, 0));
        appearance8.addBasicElement(checkOut20);
        checkOut20.onAttributesInitialized();
        checkOut20.onChildrenAdded();
        appearance8.onChildrenAdded();
        final RowLayout checkOut21 = RowLayout.checkOut();
        checkOut21.setAlign(Alignment9.WEST);
        checkOut19.addBasicElement(checkOut21);
        checkOut21.onAttributesInitialized();
        checkOut21.onChildrenAdded();
        final Label element18 = new Label();
        element18.onCheckOut();
        element18.setElementMap(elementMap);
        element18.setStyle("bold");
        element18.setText("%icon%%colon%".replace("%icon%", Xulor.getInstance().getTranslatedString("icon")).replace("%colon%", Xulor.getInstance().getTranslatedString("colon")));
        element18.setExpandable(false);
        checkOut19.addBasicElement(element18);
        element18.onAttributesInitialized();
        final DecoratorAppearance appearance9 = element18.getAppearance();
        appearance9.setElementMap(elementMap);
        element18.addBasicElement(appearance9);
        appearance9.onAttributesInitialized();
        final Margin checkOut22 = Margin.checkOut();
        checkOut22.setElementMap(elementMap);
        checkOut22.setInsets(new Insets(0, 0, 0, 5));
        appearance9.addBasicElement(checkOut22);
        checkOut22.onAttributesInitialized();
        checkOut22.onChildrenAdded();
        appearance9.onChildrenAdded();
        element18.onChildrenAdded();
        final ComboBox element19 = new ComboBox();
        element19.onCheckOut();
        element19.setElementMap(elementMap);
        element19.setExpandable(false);
        element19.setPrefSize(new Dimension(0, 20));
        final ListSelectionChangedListener onListSelectionChange2 = new ListSelectionChangedListener();
        onListSelectionChange2.setCallBackFunc("wakfu.chatOptions:changeIcon");
        element19.setOnListSelectionChange(onListSelectionChange2);
        final PopupDisplayListener onPopupDisplay3 = new PopupDisplayListener();
        onPopupDisplay3.setCallBackFunc("popup(selectIconPopup)");
        element19.setOnPopupDisplay(onPopupDisplay3);
        final PopupHideListener onPopupHide3 = new PopupHideListener();
        onPopupHide3.setCallBackFunc("closePopup");
        element19.setOnPopupHide(onPopupHide3);
        checkOut19.addBasicElement(element19);
        element19.onAttributesInitialized();
        final String id4 = "selectIconPopup";
        final PopupElement popupElement3 = new PopupElement();
        popupElement3.onCheckOut();
        popupElement3.setElementMap(elementMap);
        if (elementMap != null && id4 != null) {
            elementMap.add(id4, popupElement3);
        }
        popupElement3.setAlign(Alignment9.NORTH);
        popupElement3.setHotSpotPosition(Alignment9.SOUTH);
        element19.addBasicElement(popupElement3);
        popupElement3.onAttributesInitialized();
        final Container checkOut23 = Container.checkOut();
        checkOut23.setElementMap(elementMap);
        checkOut23.setPrefSize(new Dimension(10, 0));
        checkOut23.setStyle("popup");
        popupElement3.addBasicElement(checkOut23);
        checkOut23.onAttributesInitialized();
        final Label element20 = new Label();
        element20.onCheckOut();
        element20.setElementMap(elementMap);
        element20.setStyle("PopupInformation");
        element20.setText("%chat.selectIcon%".replace("%chat.selectIcon%", Xulor.getInstance().getTranslatedString("chat.selectIcon")));
        checkOut23.addBasicElement(element20);
        element20.onAttributesInitialized();
        final DecoratorAppearance appearance10 = element20.getAppearance();
        appearance10.setElementMap(elementMap);
        ((TextWidgetAppearance)appearance10).setAlignment(Alignment9.WEST);
        element20.addBasicElement(appearance10);
        appearance10.onAttributesInitialized();
        appearance10.onChildrenAdded();
        element20.onChildrenAdded();
        checkOut23.onChildrenAdded();
        popupElement3.onChildrenAdded();
        final PropertyElement checkOut24 = PropertyElement.checkOut();
        checkOut24.setElementMap(elementMap);
        checkOut24.setAttribute("content");
        checkOut24.setName("chatManager");
        checkOut24.setField("viewIconsList");
        element19.addBasicElement(checkOut24);
        checkOut24.onAttributesInitialized();
        checkOut24.onChildrenAdded();
        final PropertyElement checkOut25 = PropertyElement.checkOut();
        checkOut25.setElementMap(elementMap);
        checkOut25.setAttribute("selectedValue");
        checkOut25.setName("chat.editedView");
        checkOut25.setField("iconUrl");
        element19.addBasicElement(checkOut25);
        checkOut25.onAttributesInitialized();
        checkOut25.onChildrenAdded();
        final PropertyElement checkOut26 = PropertyElement.checkOut();
        checkOut26.setElementMap(elementMap);
        checkOut26.setAttribute("visible");
        checkOut26.setName("chat.editedView");
        element19.addBasicElement(checkOut26);
        checkOut26.onAttributesInitialized();
        final ConditionResult element21 = new ConditionResult();
        element21.onCheckOut();
        element21.setElementMap(elementMap);
        checkOut26.addBasicElement(element21);
        element21.onAttributesInitialized();
        final NotNullCondition element22 = new NotNullCondition();
        element22.onCheckOut();
        element22.setElementMap(elementMap);
        element21.addBasicElement(element22);
        element22.onAttributesInitialized();
        element22.onChildrenAdded();
        element21.onChildrenAdded();
        checkOut26.onChildrenAdded();
        final RenderableContainer element23 = new RenderableContainer();
        element23.onCheckOut();
        element23.setElementMap(elementMap);
        element19.addBasicElement(element23);
        element23.onAttributesInitialized();
        final ItemRenderer element24 = new ItemRenderer();
        element24.onCheckOut();
        element24.setElementMap(elementMap);
        element23.addBasicElement(element24);
        element24.onAttributesInitialized();
        final Container checkOut27 = Container.checkOut();
        checkOut27.setElementMap(elementMap);
        element24.addBasicElement(checkOut27);
        checkOut27.onAttributesInitialized();
        final StaticLayout element25 = new StaticLayout();
        element25.onCheckOut();
        element25.setAdaptToContentSize(true);
        checkOut27.addBasicElement(element25);
        element25.onAttributesInitialized();
        element25.onChildrenAdded();
        final Image element26 = new Image();
        element26.onCheckOut();
        element26.setElementMap(elementMap);
        element26.setDisplaySize(new Dimension(20, 20));
        element26.setNonBlocking(true);
        element26.setStyle("chatView");
        checkOut27.addBasicElement(element26);
        element26.onAttributesInitialized();
        this.method14(element26);
        element26.onChildrenAdded();
        this.method15(checkOut27);
        checkOut27.onChildrenAdded();
        element24.onChildrenAdded();
        element23.onChildrenAdded();
        this.method16(element19);
        element19.onChildrenAdded();
        checkOut19.onChildrenAdded();
        this.method17(checkOut);
        this.method18(checkOut);
        this.method19(checkOut);
        this.method20(checkOut);
        checkOut.onChildrenAdded();
        return checkOut;
    }
    
    public BasicElement method14(final BasicElement basicElement) {
        final ElementMap elementMap = this.elementMaps.peek();
        final StaticLayoutData element = new StaticLayoutData();
        element.onCheckOut();
        element.setElementMap(elementMap);
        element.setAlign(Alignment17.CENTER);
        basicElement.addBasicElement(element);
        element.onAttributesInitialized();
        element.onChildrenAdded();
        return element;
    }
    
    public BasicElement method15(final BasicElement basicElement) {
        final ElementMap elementMap = this.elementMaps.peek();
        final Image element = new Image();
        element.onCheckOut();
        element.setElementMap(elementMap);
        element.setDisplaySize(new Dimension(16, 16));
        element.setNonBlocking(true);
        basicElement.addBasicElement(element);
        element.onAttributesInitialized();
        final StaticLayoutData element2 = new StaticLayoutData();
        element2.onCheckOut();
        element2.setElementMap(elementMap);
        element2.setAlign(Alignment17.CENTER);
        element.addBasicElement(element2);
        element2.onAttributesInitialized();
        element2.onChildrenAdded();
        final PixmapElement checkOut = PixmapElement.checkOut();
        checkOut.setElementMap(elementMap);
        element.addBasicElement(checkOut);
        checkOut.onAttributesInitialized();
        final ItemElement element3 = new ItemElement();
        element3.onCheckOut();
        element3.setElementMap(elementMap);
        element3.setAttribute("texture");
        checkOut.addBasicElement(element3);
        element3.onAttributesInitialized();
        element3.onChildrenAdded();
        checkOut.onChildrenAdded();
        element.onChildrenAdded();
        return element;
    }
    
    public BasicElement method16(final BasicElement basicElement) {
        final ElementMap elementMap = this.elementMaps.peek();
        final List element = new List();
        element.onCheckOut();
        element.setElementMap(elementMap);
        element.setHorizontal(false);
        element.setCellSize(new Dimension(100.0f, 16));
        basicElement.addBasicElement(element);
        element.onAttributesInitialized();
        final ItemRenderer element2 = new ItemRenderer();
        element2.onCheckOut();
        element2.setElementMap(elementMap);
        element.addBasicElement(element2);
        element2.onAttributesInitialized();
        final Container checkOut = Container.checkOut();
        checkOut.setElementMap(elementMap);
        element2.addBasicElement(checkOut);
        checkOut.onAttributesInitialized();
        final StaticLayout element3 = new StaticLayout();
        element3.onCheckOut();
        element3.setAdaptToContentSize(true);
        checkOut.addBasicElement(element3);
        element3.onAttributesInitialized();
        element3.onChildrenAdded();
        final Image element4 = new Image();
        element4.onCheckOut();
        element4.setElementMap(elementMap);
        element4.setDisplaySize(new Dimension(20, 20));
        element4.setNonBlocking(true);
        element4.setStyle("chatView");
        checkOut.addBasicElement(element4);
        element4.onAttributesInitialized();
        final StaticLayoutData element5 = new StaticLayoutData();
        element5.onCheckOut();
        element5.setElementMap(elementMap);
        element5.setAlign(Alignment17.CENTER);
        element4.addBasicElement(element5);
        element5.onAttributesInitialized();
        element5.onChildrenAdded();
        element4.onChildrenAdded();
        final Image element6 = new Image();
        element6.onCheckOut();
        element6.setElementMap(elementMap);
        element6.setDisplaySize(new Dimension(16, 16));
        element6.setNonBlocking(true);
        checkOut.addBasicElement(element6);
        element6.onAttributesInitialized();
        final StaticLayoutData element7 = new StaticLayoutData();
        element7.onCheckOut();
        element7.setElementMap(elementMap);
        element7.setAlign(Alignment17.CENTER);
        element6.addBasicElement(element7);
        element7.onAttributesInitialized();
        element7.onChildrenAdded();
        final PixmapElement checkOut2 = PixmapElement.checkOut();
        checkOut2.setElementMap(elementMap);
        element6.addBasicElement(checkOut2);
        checkOut2.onAttributesInitialized();
        final ItemElement element8 = new ItemElement();
        element8.onCheckOut();
        element8.setElementMap(elementMap);
        element8.setAttribute("texture");
        checkOut2.addBasicElement(element8);
        element8.onAttributesInitialized();
        element8.onChildrenAdded();
        checkOut2.onChildrenAdded();
        element6.onChildrenAdded();
        checkOut.onChildrenAdded();
        element2.onChildrenAdded();
        element.onChildrenAdded();
        return element;
    }
    
    public BasicElement method17(final BasicElement basicElement) {
        final ElementMap elementMap = this.elementMaps.peek();
        final Container checkOut = Container.checkOut();
        checkOut.setElementMap(elementMap);
        checkOut.setExpandable(false);
        basicElement.addBasicElement(checkOut);
        checkOut.onAttributesInitialized();
        final DecoratorAppearance appearance = checkOut.getAppearance();
        appearance.setElementMap(elementMap);
        checkOut.addBasicElement(appearance);
        appearance.onAttributesInitialized();
        final Margin checkOut2 = Margin.checkOut();
        checkOut2.setElementMap(elementMap);
        checkOut2.setInsets(new Insets(0, 0, 3, 0));
        appearance.addBasicElement(checkOut2);
        checkOut2.onAttributesInitialized();
        checkOut2.onChildrenAdded();
        appearance.onChildrenAdded();
        final RowLayout checkOut3 = RowLayout.checkOut();
        checkOut3.setAlign(Alignment9.WEST);
        checkOut.addBasicElement(checkOut3);
        checkOut3.onAttributesInitialized();
        checkOut3.onChildrenAdded();
        final Container checkOut4 = Container.checkOut();
        checkOut4.setElementMap(elementMap);
        checkOut4.setPrefSize(new Dimension(0, 120));
        checkOut4.setExpandable(false);
        checkOut.addBasicElement(checkOut4);
        checkOut4.onAttributesInitialized();
        final RowLayout checkOut5 = RowLayout.checkOut();
        checkOut5.setAlign(Alignment9.NORTH);
        checkOut5.setHorizontal(false);
        checkOut4.addBasicElement(checkOut5);
        checkOut5.onAttributesInitialized();
        checkOut5.onChildrenAdded();
        final Label element = new Label();
        element.onCheckOut();
        element.setElementMap(elementMap);
        element.setStyle("bold");
        element.setText("%chat.filters%%colon%".replace("%chat.filters%", Xulor.getInstance().getTranslatedString("chat.filters")).replace("%colon%", Xulor.getInstance().getTranslatedString("colon")));
        element.setExpandable(false);
        checkOut4.addBasicElement(element);
        element.onAttributesInitialized();
        final DecoratorAppearance appearance2 = element.getAppearance();
        appearance2.setElementMap(elementMap);
        element.addBasicElement(appearance2);
        appearance2.onAttributesInitialized();
        final Margin checkOut6 = Margin.checkOut();
        checkOut6.setElementMap(elementMap);
        checkOut6.setInsets(new Insets(0, 0, 0, 5));
        appearance2.addBasicElement(checkOut6);
        checkOut6.onAttributesInitialized();
        checkOut6.onChildrenAdded();
        appearance2.onChildrenAdded();
        element.onChildrenAdded();
        checkOut4.onChildrenAdded();
        final Container checkOut7 = Container.checkOut();
        checkOut7.setElementMap(elementMap);
        checkOut7.setStyle("white");
        checkOut7.setPrefSize(new Dimension(170, 150));
        checkOut7.setExpandable(false);
        checkOut.addBasicElement(checkOut7);
        checkOut7.onAttributesInitialized();
        final DecoratorAppearance appearance3 = checkOut7.getAppearance();
        appearance3.setElementMap(elementMap);
        checkOut7.addBasicElement(appearance3);
        appearance3.onAttributesInitialized();
        final Padding element2 = new Padding();
        element2.onCheckOut();
        element2.setElementMap(elementMap);
        element2.setInsets(new Insets(10, 10, 10, 10));
        appearance3.addBasicElement(element2);
        element2.onAttributesInitialized();
        element2.onChildrenAdded();
        appearance3.onChildrenAdded();
        final List element3 = new List();
        element3.onCheckOut();
        element3.setElementMap(elementMap);
        element3.setCellSize(new Dimension(150, 15));
        checkOut7.addBasicElement(element3);
        element3.onAttributesInitialized();
        final PropertyElement checkOut8 = PropertyElement.checkOut();
        checkOut8.setElementMap(elementMap);
        checkOut8.setAttribute("content");
        checkOut8.setName("chat.editedView");
        checkOut8.setField("allFiltersList");
        element3.addBasicElement(checkOut8);
        checkOut8.onAttributesInitialized();
        checkOut8.onChildrenAdded();
        final PropertyElement checkOut9 = PropertyElement.checkOut();
        checkOut9.setElementMap(elementMap);
        checkOut9.setAttribute("visible");
        checkOut9.setName("chat.editedView");
        element3.addBasicElement(checkOut9);
        checkOut9.onAttributesInitialized();
        final ConditionResult element4 = new ConditionResult();
        element4.onCheckOut();
        element4.setElementMap(elementMap);
        checkOut9.addBasicElement(element4);
        element4.onAttributesInitialized();
        final NotNullCondition element5 = new NotNullCondition();
        element5.onCheckOut();
        element5.setElementMap(elementMap);
        element4.addBasicElement(element5);
        element5.onAttributesInitialized();
        element5.onChildrenAdded();
        element4.onChildrenAdded();
        checkOut9.onChildrenAdded();
        final ItemRenderer element6 = new ItemRenderer();
        element6.onCheckOut();
        element6.setElementMap(elementMap);
        element3.addBasicElement(element6);
        element6.onAttributesInitialized();
        final ConditionResult element7 = new ConditionResult();
        element7.onCheckOut();
        element7.setElementMap(elementMap);
        element6.addBasicElement(element7);
        element7.onAttributesInitialized();
        final ItemCondition element8 = new ItemCondition();
        element8.onCheckOut();
        element8.setElementMap(elementMap);
        element7.addBasicElement(element8);
        element8.onAttributesInitialized();
        final NotNullCondition element9 = new NotNullCondition();
        element9.onCheckOut();
        element9.setElementMap(elementMap);
        element8.addBasicElement(element9);
        element9.onAttributesInitialized();
        element9.onChildrenAdded();
        element8.onChildrenAdded();
        element7.onChildrenAdded();
        final Container checkOut10 = Container.checkOut();
        checkOut10.setElementMap(elementMap);
        element6.addBasicElement(checkOut10);
        checkOut10.onAttributesInitialized();
        final String id = "filterName";
        final Data data = new Data();
        data.onCheckOut();
        data.setElementMap(elementMap);
        if (elementMap != null && id != null) {
            elementMap.add(id, data);
        }
        checkOut10.addBasicElement(data);
        data.onAttributesInitialized();
        final ItemElement element10 = new ItemElement();
        element10.onCheckOut();
        element10.setElementMap(elementMap);
        element10.setAttribute("value");
        element10.setField("name");
        data.addBasicElement(element10);
        element10.onAttributesInitialized();
        element10.onChildrenAdded();
        data.onChildrenAdded();
        final ToggleButton element11 = new ToggleButton();
        element11.onCheckOut();
        element11.setElementMap(elementMap);
        final MouseClickedListener onClick = new MouseClickedListener();
        onClick.setCallBackFunc("wakfu.chatOptions:activateDisactivateFilter(filterName)");
        element11.setOnClick(onClick);
        checkOut10.addBasicElement(element11);
        element11.onAttributesInitialized();
        final ItemElement element12 = new ItemElement();
        element12.onCheckOut();
        element12.setElementMap(elementMap);
        element12.setAttribute("text");
        element12.setField("name");
        element11.addBasicElement(element12);
        element12.onAttributesInitialized();
        element12.onChildrenAdded();
        final ItemElement element13 = new ItemElement();
        element13.onCheckOut();
        element13.setElementMap(elementMap);
        element13.setAttribute("selected");
        element13.setField("enabled");
        element11.addBasicElement(element13);
        element13.onAttributesInitialized();
        element13.onChildrenAdded();
        element11.onChildrenAdded();
        checkOut10.onChildrenAdded();
        element6.onChildrenAdded();
        element3.onChildrenAdded();
        checkOut7.onChildrenAdded();
        checkOut.onChildrenAdded();
        return checkOut;
    }
    
    public BasicElement method18(final BasicElement basicElement) {
        final ElementMap elementMap = this.elementMaps.peek();
        final Container checkOut = Container.checkOut();
        checkOut.setElementMap(elementMap);
        checkOut.setExpandable(false);
        checkOut.setPrefSize(new Dimension(0, 30));
        basicElement.addBasicElement(checkOut);
        checkOut.onAttributesInitialized();
        final DecoratorAppearance appearance = checkOut.getAppearance();
        appearance.setElementMap(elementMap);
        checkOut.addBasicElement(appearance);
        appearance.onAttributesInitialized();
        final Margin checkOut2 = Margin.checkOut();
        checkOut2.setElementMap(elementMap);
        checkOut2.setInsets(new Insets(0, 0, 3, 0));
        appearance.addBasicElement(checkOut2);
        checkOut2.onAttributesInitialized();
        checkOut2.onChildrenAdded();
        appearance.onChildrenAdded();
        final RowLayout checkOut3 = RowLayout.checkOut();
        checkOut3.setAlign(Alignment9.WEST);
        checkOut.addBasicElement(checkOut3);
        checkOut3.onAttributesInitialized();
        checkOut3.onChildrenAdded();
        final Label element = new Label();
        element.onCheckOut();
        element.setElementMap(elementMap);
        element.setStyle("bold");
        element.setText("%defaultChannel%%colon%".replace("%defaultChannel%", Xulor.getInstance().getTranslatedString("defaultChannel")).replace("%colon%", Xulor.getInstance().getTranslatedString("colon")));
        element.setExpandable(false);
        checkOut.addBasicElement(element);
        element.onAttributesInitialized();
        final DecoratorAppearance appearance2 = element.getAppearance();
        appearance2.setElementMap(elementMap);
        element.addBasicElement(appearance2);
        appearance2.onAttributesInitialized();
        final Margin checkOut4 = Margin.checkOut();
        checkOut4.setElementMap(elementMap);
        checkOut4.setInsets(new Insets(0, 0, 0, 5));
        appearance2.addBasicElement(checkOut4);
        checkOut4.onAttributesInitialized();
        checkOut4.onChildrenAdded();
        appearance2.onChildrenAdded();
        element.onChildrenAdded();
        final String id = "test";
        final ComboBox comboBox = new ComboBox();
        comboBox.onCheckOut();
        comboBox.setElementMap(elementMap);
        if (elementMap != null && id != null) {
            elementMap.add(id, comboBox);
        }
        comboBox.setExpandable(false);
        comboBox.setPrefSize(new Dimension(0, 16));
        final ListSelectionChangedListener onListSelectionChange = new ListSelectionChangedListener();
        onListSelectionChange.setCallBackFunc("wakfu.chatOptions:changeChannel");
        comboBox.setOnListSelectionChange(onListSelectionChange);
        final PopupDisplayListener onPopupDisplay = new PopupDisplayListener();
        onPopupDisplay.setCallBackFunc("popup(selectDefaultChannelPopup)");
        comboBox.setOnPopupDisplay(onPopupDisplay);
        final PopupHideListener onPopupHide = new PopupHideListener();
        onPopupHide.setCallBackFunc("closePopup");
        comboBox.setOnPopupHide(onPopupHide);
        checkOut.addBasicElement(comboBox);
        comboBox.onAttributesInitialized();
        final String id2 = "selectDefaultChannelPopup";
        final PopupElement popupElement = new PopupElement();
        popupElement.onCheckOut();
        popupElement.setElementMap(elementMap);
        if (elementMap != null && id2 != null) {
            elementMap.add(id2, popupElement);
        }
        popupElement.setAlign(Alignment9.NORTH);
        popupElement.setHotSpotPosition(Alignment9.SOUTH);
        comboBox.addBasicElement(popupElement);
        popupElement.onAttributesInitialized();
        final Container checkOut5 = Container.checkOut();
        checkOut5.setElementMap(elementMap);
        checkOut5.setPrefSize(new Dimension(10, 0));
        checkOut5.setStyle("popup");
        popupElement.addBasicElement(checkOut5);
        checkOut5.onAttributesInitialized();
        final Label element2 = new Label();
        element2.onCheckOut();
        element2.setElementMap(elementMap);
        element2.setStyle("PopupInformation");
        element2.setText("%chat.selectDefaultChannel%".replace("%chat.selectDefaultChannel%", Xulor.getInstance().getTranslatedString("chat.selectDefaultChannel")));
        checkOut5.addBasicElement(element2);
        element2.onAttributesInitialized();
        final DecoratorAppearance appearance3 = element2.getAppearance();
        appearance3.setElementMap(elementMap);
        ((TextWidgetAppearance)appearance3).setAlignment(Alignment9.WEST);
        element2.addBasicElement(appearance3);
        appearance3.onAttributesInitialized();
        appearance3.onChildrenAdded();
        element2.onChildrenAdded();
        checkOut5.onChildrenAdded();
        popupElement.onChildrenAdded();
        final PropertyElement checkOut6 = PropertyElement.checkOut();
        checkOut6.setElementMap(elementMap);
        checkOut6.setAttribute("content");
        checkOut6.setName("chat.editedView");
        checkOut6.setField("channelsList");
        comboBox.addBasicElement(checkOut6);
        checkOut6.onAttributesInitialized();
        checkOut6.onChildrenAdded();
        final PropertyElement checkOut7 = PropertyElement.checkOut();
        checkOut7.setElementMap(elementMap);
        checkOut7.setAttribute("selectedValue");
        checkOut7.setName("chat.editedView");
        checkOut7.setField("currentChannel");
        comboBox.addBasicElement(checkOut7);
        checkOut7.onAttributesInitialized();
        checkOut7.onChildrenAdded();
        final PropertyElement checkOut8 = PropertyElement.checkOut();
        checkOut8.setElementMap(elementMap);
        checkOut8.setAttribute("visible");
        checkOut8.setName("chat.editedView");
        comboBox.addBasicElement(checkOut8);
        checkOut8.onAttributesInitialized();
        final ConditionResult element3 = new ConditionResult();
        element3.onCheckOut();
        element3.setElementMap(elementMap);
        checkOut8.addBasicElement(element3);
        element3.onAttributesInitialized();
        final NotNullCondition element4 = new NotNullCondition();
        element4.onCheckOut();
        element4.setElementMap(elementMap);
        element3.addBasicElement(element4);
        element4.onAttributesInitialized();
        element4.onChildrenAdded();
        element3.onChildrenAdded();
        checkOut8.onChildrenAdded();
        final RenderableContainer element5 = new RenderableContainer();
        element5.onCheckOut();
        element5.setElementMap(elementMap);
        comboBox.addBasicElement(element5);
        element5.onAttributesInitialized();
        final ItemRenderer element6 = new ItemRenderer();
        element6.onCheckOut();
        element6.setElementMap(elementMap);
        element5.addBasicElement(element6);
        element6.onAttributesInitialized();
        final Label element7 = new Label();
        element7.onCheckOut();
        element7.setElementMap(elementMap);
        element7.setNonBlocking(true);
        element6.addBasicElement(element7);
        element7.onAttributesInitialized();
        final ItemElement element8 = new ItemElement();
        element8.onCheckOut();
        element8.setElementMap(elementMap);
        element8.setAttribute("text");
        element8.setField("command");
        element7.addBasicElement(element8);
        element8.onAttributesInitialized();
        element8.onChildrenAdded();
        element7.onChildrenAdded();
        element6.onChildrenAdded();
        element5.onChildrenAdded();
        final List element9 = new List();
        element9.onCheckOut();
        element9.setElementMap(elementMap);
        element9.setHorizontal(false);
        element9.setCellSize(new Dimension(100.0f, 16));
        comboBox.addBasicElement(element9);
        element9.onAttributesInitialized();
        final ItemRenderer element10 = new ItemRenderer();
        element10.onCheckOut();
        element10.setElementMap(elementMap);
        element9.addBasicElement(element10);
        element10.onAttributesInitialized();
        final Label element11 = new Label();
        element11.onCheckOut();
        element11.setElementMap(elementMap);
        element11.setNonBlocking(true);
        element10.addBasicElement(element11);
        element11.onAttributesInitialized();
        final ItemElement element12 = new ItemElement();
        element12.onCheckOut();
        element12.setElementMap(elementMap);
        element12.setAttribute("text");
        element12.setField("command");
        element11.addBasicElement(element12);
        element12.onAttributesInitialized();
        element12.onChildrenAdded();
        element11.onChildrenAdded();
        element10.onChildrenAdded();
        element9.onChildrenAdded();
        comboBox.onChildrenAdded();
        checkOut.onChildrenAdded();
        return checkOut;
    }
    
    public BasicElement method19(final BasicElement basicElement) {
        final ElementMap elementMap = this.elementMaps.peek();
        final Spacer element = new Spacer();
        element.onCheckOut();
        element.setElementMap(elementMap);
        basicElement.addBasicElement(element);
        element.onAttributesInitialized();
        element.onChildrenAdded();
        return element;
    }
    
    public BasicElement method20(final BasicElement basicElement) {
        final ElementMap elementMap = this.elementMaps.peek();
        final Container checkOut = Container.checkOut();
        checkOut.setElementMap(elementMap);
        checkOut.setExpandable(false);
        basicElement.addBasicElement(checkOut);
        checkOut.onAttributesInitialized();
        final RowLayout checkOut2 = RowLayout.checkOut();
        checkOut2.setAlign(Alignment9.EAST);
        checkOut.addBasicElement(checkOut2);
        checkOut2.onAttributesInitialized();
        checkOut2.onChildrenAdded();
        final Button element = new Button();
        element.onCheckOut();
        element.setElementMap(elementMap);
        element.setExpandable(false);
        element.setText("%chatOptions.deleteView%".replace("%chatOptions.deleteView%", Xulor.getInstance().getTranslatedString("chatOptions.deleteView")));
        final MouseClickedListener onClick = new MouseClickedListener();
        onClick.setCallBackFunc("wakfu.chatOptions:deleteView");
        element.setOnClick(onClick);
        checkOut.addBasicElement(element);
        element.onAttributesInitialized();
        final DecoratorAppearance appearance = element.getAppearance();
        appearance.setElementMap(elementMap);
        element.addBasicElement(appearance);
        appearance.onAttributesInitialized();
        final Padding element2 = new Padding();
        element2.onCheckOut();
        element2.setElementMap(elementMap);
        element2.setInsets(new Insets(0, 3, 0, 3));
        appearance.addBasicElement(element2);
        element2.onAttributesInitialized();
        element2.onChildrenAdded();
        appearance.onChildrenAdded();
        final PropertyElement checkOut3 = PropertyElement.checkOut();
        checkOut3.setElementMap(elementMap);
        checkOut3.setAttribute("enabled");
        checkOut3.setField("isLastView");
        checkOut3.setName("chatManager");
        element.addBasicElement(checkOut3);
        checkOut3.onAttributesInitialized();
        final ConditionResult element3 = new ConditionResult();
        element3.onCheckOut();
        element3.setElementMap(elementMap);
        checkOut3.addBasicElement(element3);
        element3.onAttributesInitialized();
        final AndCondition element4 = new AndCondition();
        element4.onCheckOut();
        element4.setElementMap(elementMap);
        element3.addBasicElement(element4);
        element4.onAttributesInitialized();
        final FalseCondition element5 = new FalseCondition();
        element5.onCheckOut();
        element5.setElementMap(elementMap);
        element4.addBasicElement(element5);
        element5.onAttributesInitialized();
        element5.onChildrenAdded();
        final TrueCondition element6 = new TrueCondition();
        element6.onCheckOut();
        element6.setElementMap(elementMap);
        element4.addBasicElement(element6);
        element6.onAttributesInitialized();
        final PropertyElement checkOut4 = PropertyElement.checkOut();
        checkOut4.setElementMap(elementMap);
        checkOut4.setAttribute("comparedValue");
        checkOut4.setName("chat.editedView");
        element6.addBasicElement(checkOut4);
        checkOut4.onAttributesInitialized();
        final ConditionResult element7 = new ConditionResult();
        element7.onCheckOut();
        element7.setElementMap(elementMap);
        checkOut4.addBasicElement(element7);
        element7.onAttributesInitialized();
        final NotNullCondition element8 = new NotNullCondition();
        element8.onCheckOut();
        element8.setElementMap(elementMap);
        element7.addBasicElement(element8);
        element8.onAttributesInitialized();
        element8.onChildrenAdded();
        element7.onChildrenAdded();
        checkOut4.onChildrenAdded();
        element6.onChildrenAdded();
        element4.onChildrenAdded();
        element3.onChildrenAdded();
        checkOut3.onChildrenAdded();
        element.onChildrenAdded();
        checkOut.onChildrenAdded();
        return checkOut;
    }
}
